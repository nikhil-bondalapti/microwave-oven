

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Mar 18 13:50:22 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,space=0,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Generated 12/10/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0004                     fsr             equ	4
    75     0004                     fsr0            equ	4
    76     0000                     indf            equ	0
    77     0000                     indf0           equ	0
    78     0002                     pc              equ	2
    79     0002                     pcl             equ	2
    80     000A                     pclath          equ	10
    81     0003                     status          equ	3
    82     0000                     INDF            equ	0	;# 
    83     0001                     TMR0            equ	1	;# 
    84     0002                     PCL             equ	2	;# 
    85     0003                     STATUS          equ	3	;# 
    86     0004                     FSR             equ	4	;# 
    87     0005                     PORTA           equ	5	;# 
    88     0006                     PORTB           equ	6	;# 
    89     0007                     PORTC           equ	7	;# 
    90     0008                     PORTD           equ	8	;# 
    91     0009                     PORTE           equ	9	;# 
    92     000A                     PCLATH          equ	10	;# 
    93     000B                     INTCON          equ	11	;# 
    94     000C                     PIR1            equ	12	;# 
    95     000D                     PIR2            equ	13	;# 
    96     000E                     TMR1            equ	14	;# 
    97     000E                     TMR1L           equ	14	;# 
    98     000F                     TMR1H           equ	15	;# 
    99     0010                     T1CON           equ	16	;# 
   100     0011                     TMR2            equ	17	;# 
   101     0012                     T2CON           equ	18	;# 
   102     0013                     SSPBUF          equ	19	;# 
   103     0014                     SSPCON          equ	20	;# 
   104     0015                     CCPR1           equ	21	;# 
   105     0015                     CCPR1L          equ	21	;# 
   106     0016                     CCPR1H          equ	22	;# 
   107     0017                     CCP1CON         equ	23	;# 
   108     0018                     RCSTA           equ	24	;# 
   109     0019                     TXREG           equ	25	;# 
   110     001A                     RCREG           equ	26	;# 
   111     001B                     CCPR2           equ	27	;# 
   112     001B                     CCPR2L          equ	27	;# 
   113     001C                     CCPR2H          equ	28	;# 
   114     001D                     CCP2CON         equ	29	;# 
   115     001E                     ADRESH          equ	30	;# 
   116     001F                     ADCON0          equ	31	;# 
   117     0081                     OPTION_REG      equ	129	;# 
   118     0085                     TRISA           equ	133	;# 
   119     0086                     TRISB           equ	134	;# 
   120     0087                     TRISC           equ	135	;# 
   121     0088                     TRISD           equ	136	;# 
   122     0089                     TRISE           equ	137	;# 
   123     008C                     PIE1            equ	140	;# 
   124     008D                     PIE2            equ	141	;# 
   125     008E                     PCON            equ	142	;# 
   126     0091                     SSPCON2         equ	145	;# 
   127     0092                     PR2             equ	146	;# 
   128     0093                     SSPADD          equ	147	;# 
   129     0094                     SSPSTAT         equ	148	;# 
   130     0098                     TXSTA           equ	152	;# 
   131     0099                     SPBRG           equ	153	;# 
   132     009C                     CMCON           equ	156	;# 
   133     009D                     CVRCON          equ	157	;# 
   134     009E                     ADRESL          equ	158	;# 
   135     009F                     ADCON1          equ	159	;# 
   136     010C                     EEDATA          equ	268	;# 
   137     010D                     EEADR           equ	269	;# 
   138     010E                     EEDATH          equ	270	;# 
   139     010F                     EEADRH          equ	271	;# 
   140     018C                     EECON1          equ	396	;# 
   141     018D                     EECON2          equ	397	;# 
   142     0000                     INDF            equ	0	;# 
   143     0001                     TMR0            equ	1	;# 
   144     0002                     PCL             equ	2	;# 
   145     0003                     STATUS          equ	3	;# 
   146     0004                     FSR             equ	4	;# 
   147     0005                     PORTA           equ	5	;# 
   148     0006                     PORTB           equ	6	;# 
   149     0007                     PORTC           equ	7	;# 
   150     0008                     PORTD           equ	8	;# 
   151     0009                     PORTE           equ	9	;# 
   152     000A                     PCLATH          equ	10	;# 
   153     000B                     INTCON          equ	11	;# 
   154     000C                     PIR1            equ	12	;# 
   155     000D                     PIR2            equ	13	;# 
   156     000E                     TMR1            equ	14	;# 
   157     000E                     TMR1L           equ	14	;# 
   158     000F                     TMR1H           equ	15	;# 
   159     0010                     T1CON           equ	16	;# 
   160     0011                     TMR2            equ	17	;# 
   161     0012                     T2CON           equ	18	;# 
   162     0013                     SSPBUF          equ	19	;# 
   163     0014                     SSPCON          equ	20	;# 
   164     0015                     CCPR1           equ	21	;# 
   165     0015                     CCPR1L          equ	21	;# 
   166     0016                     CCPR1H          equ	22	;# 
   167     0017                     CCP1CON         equ	23	;# 
   168     0018                     RCSTA           equ	24	;# 
   169     0019                     TXREG           equ	25	;# 
   170     001A                     RCREG           equ	26	;# 
   171     001B                     CCPR2           equ	27	;# 
   172     001B                     CCPR2L          equ	27	;# 
   173     001C                     CCPR2H          equ	28	;# 
   174     001D                     CCP2CON         equ	29	;# 
   175     001E                     ADRESH          equ	30	;# 
   176     001F                     ADCON0          equ	31	;# 
   177     0081                     OPTION_REG      equ	129	;# 
   178     0085                     TRISA           equ	133	;# 
   179     0086                     TRISB           equ	134	;# 
   180     0087                     TRISC           equ	135	;# 
   181     0088                     TRISD           equ	136	;# 
   182     0089                     TRISE           equ	137	;# 
   183     008C                     PIE1            equ	140	;# 
   184     008D                     PIE2            equ	141	;# 
   185     008E                     PCON            equ	142	;# 
   186     0091                     SSPCON2         equ	145	;# 
   187     0092                     PR2             equ	146	;# 
   188     0093                     SSPADD          equ	147	;# 
   189     0094                     SSPSTAT         equ	148	;# 
   190     0098                     TXSTA           equ	152	;# 
   191     0099                     SPBRG           equ	153	;# 
   192     009C                     CMCON           equ	156	;# 
   193     009D                     CVRCON          equ	157	;# 
   194     009E                     ADRESL          equ	158	;# 
   195     009F                     ADCON1          equ	159	;# 
   196     010C                     EEDATA          equ	268	;# 
   197     010D                     EEADR           equ	269	;# 
   198     010E                     EEDATH          equ	270	;# 
   199     010F                     EEADRH          equ	271	;# 
   200     018C                     EECON1          equ	396	;# 
   201     018D                     EECON2          equ	397	;# 
   202     0000                     INDF            equ	0	;# 
   203     0001                     TMR0            equ	1	;# 
   204     0002                     PCL             equ	2	;# 
   205     0003                     STATUS          equ	3	;# 
   206     0004                     FSR             equ	4	;# 
   207     0005                     PORTA           equ	5	;# 
   208     0006                     PORTB           equ	6	;# 
   209     0007                     PORTC           equ	7	;# 
   210     0008                     PORTD           equ	8	;# 
   211     0009                     PORTE           equ	9	;# 
   212     000A                     PCLATH          equ	10	;# 
   213     000B                     INTCON          equ	11	;# 
   214     000C                     PIR1            equ	12	;# 
   215     000D                     PIR2            equ	13	;# 
   216     000E                     TMR1            equ	14	;# 
   217     000E                     TMR1L           equ	14	;# 
   218     000F                     TMR1H           equ	15	;# 
   219     0010                     T1CON           equ	16	;# 
   220     0011                     TMR2            equ	17	;# 
   221     0012                     T2CON           equ	18	;# 
   222     0013                     SSPBUF          equ	19	;# 
   223     0014                     SSPCON          equ	20	;# 
   224     0015                     CCPR1           equ	21	;# 
   225     0015                     CCPR1L          equ	21	;# 
   226     0016                     CCPR1H          equ	22	;# 
   227     0017                     CCP1CON         equ	23	;# 
   228     0018                     RCSTA           equ	24	;# 
   229     0019                     TXREG           equ	25	;# 
   230     001A                     RCREG           equ	26	;# 
   231     001B                     CCPR2           equ	27	;# 
   232     001B                     CCPR2L          equ	27	;# 
   233     001C                     CCPR2H          equ	28	;# 
   234     001D                     CCP2CON         equ	29	;# 
   235     001E                     ADRESH          equ	30	;# 
   236     001F                     ADCON0          equ	31	;# 
   237     0081                     OPTION_REG      equ	129	;# 
   238     0085                     TRISA           equ	133	;# 
   239     0086                     TRISB           equ	134	;# 
   240     0087                     TRISC           equ	135	;# 
   241     0088                     TRISD           equ	136	;# 
   242     0089                     TRISE           equ	137	;# 
   243     008C                     PIE1            equ	140	;# 
   244     008D                     PIE2            equ	141	;# 
   245     008E                     PCON            equ	142	;# 
   246     0091                     SSPCON2         equ	145	;# 
   247     0092                     PR2             equ	146	;# 
   248     0093                     SSPADD          equ	147	;# 
   249     0094                     SSPSTAT         equ	148	;# 
   250     0098                     TXSTA           equ	152	;# 
   251     0099                     SPBRG           equ	153	;# 
   252     009C                     CMCON           equ	156	;# 
   253     009D                     CVRCON          equ	157	;# 
   254     009E                     ADRESL          equ	158	;# 
   255     009F                     ADCON1          equ	159	;# 
   256     010C                     EEDATA          equ	268	;# 
   257     010D                     EEADR           equ	269	;# 
   258     010E                     EEDATH          equ	270	;# 
   259     010F                     EEADRH          equ	271	;# 
   260     018C                     EECON1          equ	396	;# 
   261     018D                     EECON2          equ	397	;# 
   262     0000                     INDF            equ	0	;# 
   263     0001                     TMR0            equ	1	;# 
   264     0002                     PCL             equ	2	;# 
   265     0003                     STATUS          equ	3	;# 
   266     0004                     FSR             equ	4	;# 
   267     0005                     PORTA           equ	5	;# 
   268     0006                     PORTB           equ	6	;# 
   269     0007                     PORTC           equ	7	;# 
   270     0008                     PORTD           equ	8	;# 
   271     0009                     PORTE           equ	9	;# 
   272     000A                     PCLATH          equ	10	;# 
   273     000B                     INTCON          equ	11	;# 
   274     000C                     PIR1            equ	12	;# 
   275     000D                     PIR2            equ	13	;# 
   276     000E                     TMR1            equ	14	;# 
   277     000E                     TMR1L           equ	14	;# 
   278     000F                     TMR1H           equ	15	;# 
   279     0010                     T1CON           equ	16	;# 
   280     0011                     TMR2            equ	17	;# 
   281     0012                     T2CON           equ	18	;# 
   282     0013                     SSPBUF          equ	19	;# 
   283     0014                     SSPCON          equ	20	;# 
   284     0015                     CCPR1           equ	21	;# 
   285     0015                     CCPR1L          equ	21	;# 
   286     0016                     CCPR1H          equ	22	;# 
   287     0017                     CCP1CON         equ	23	;# 
   288     0018                     RCSTA           equ	24	;# 
   289     0019                     TXREG           equ	25	;# 
   290     001A                     RCREG           equ	26	;# 
   291     001B                     CCPR2           equ	27	;# 
   292     001B                     CCPR2L          equ	27	;# 
   293     001C                     CCPR2H          equ	28	;# 
   294     001D                     CCP2CON         equ	29	;# 
   295     001E                     ADRESH          equ	30	;# 
   296     001F                     ADCON0          equ	31	;# 
   297     0081                     OPTION_REG      equ	129	;# 
   298     0085                     TRISA           equ	133	;# 
   299     0086                     TRISB           equ	134	;# 
   300     0087                     TRISC           equ	135	;# 
   301     0088                     TRISD           equ	136	;# 
   302     0089                     TRISE           equ	137	;# 
   303     008C                     PIE1            equ	140	;# 
   304     008D                     PIE2            equ	141	;# 
   305     008E                     PCON            equ	142	;# 
   306     0091                     SSPCON2         equ	145	;# 
   307     0092                     PR2             equ	146	;# 
   308     0093                     SSPADD          equ	147	;# 
   309     0094                     SSPSTAT         equ	148	;# 
   310     0098                     TXSTA           equ	152	;# 
   311     0099                     SPBRG           equ	153	;# 
   312     009C                     CMCON           equ	156	;# 
   313     009D                     CVRCON          equ	157	;# 
   314     009E                     ADRESL          equ	158	;# 
   315     009F                     ADCON1          equ	159	;# 
   316     010C                     EEDATA          equ	268	;# 
   317     010D                     EEADR           equ	269	;# 
   318     010E                     EEDATH          equ	270	;# 
   319     010F                     EEADRH          equ	271	;# 
   320     018C                     EECON1          equ	396	;# 
   321     018D                     EECON2          equ	397	;# 
   322     0000                     INDF            equ	0	;# 
   323     0001                     TMR0            equ	1	;# 
   324     0002                     PCL             equ	2	;# 
   325     0003                     STATUS          equ	3	;# 
   326     0004                     FSR             equ	4	;# 
   327     0005                     PORTA           equ	5	;# 
   328     0006                     PORTB           equ	6	;# 
   329     0007                     PORTC           equ	7	;# 
   330     0008                     PORTD           equ	8	;# 
   331     0009                     PORTE           equ	9	;# 
   332     000A                     PCLATH          equ	10	;# 
   333     000B                     INTCON          equ	11	;# 
   334     000C                     PIR1            equ	12	;# 
   335     000D                     PIR2            equ	13	;# 
   336     000E                     TMR1            equ	14	;# 
   337     000E                     TMR1L           equ	14	;# 
   338     000F                     TMR1H           equ	15	;# 
   339     0010                     T1CON           equ	16	;# 
   340     0011                     TMR2            equ	17	;# 
   341     0012                     T2CON           equ	18	;# 
   342     0013                     SSPBUF          equ	19	;# 
   343     0014                     SSPCON          equ	20	;# 
   344     0015                     CCPR1           equ	21	;# 
   345     0015                     CCPR1L          equ	21	;# 
   346     0016                     CCPR1H          equ	22	;# 
   347     0017                     CCP1CON         equ	23	;# 
   348     0018                     RCSTA           equ	24	;# 
   349     0019                     TXREG           equ	25	;# 
   350     001A                     RCREG           equ	26	;# 
   351     001B                     CCPR2           equ	27	;# 
   352     001B                     CCPR2L          equ	27	;# 
   353     001C                     CCPR2H          equ	28	;# 
   354     001D                     CCP2CON         equ	29	;# 
   355     001E                     ADRESH          equ	30	;# 
   356     001F                     ADCON0          equ	31	;# 
   357     0081                     OPTION_REG      equ	129	;# 
   358     0085                     TRISA           equ	133	;# 
   359     0086                     TRISB           equ	134	;# 
   360     0087                     TRISC           equ	135	;# 
   361     0088                     TRISD           equ	136	;# 
   362     0089                     TRISE           equ	137	;# 
   363     008C                     PIE1            equ	140	;# 
   364     008D                     PIE2            equ	141	;# 
   365     008E                     PCON            equ	142	;# 
   366     0091                     SSPCON2         equ	145	;# 
   367     0092                     PR2             equ	146	;# 
   368     0093                     SSPADD          equ	147	;# 
   369     0094                     SSPSTAT         equ	148	;# 
   370     0098                     TXSTA           equ	152	;# 
   371     0099                     SPBRG           equ	153	;# 
   372     009C                     CMCON           equ	156	;# 
   373     009D                     CVRCON          equ	157	;# 
   374     009E                     ADRESL          equ	158	;# 
   375     009F                     ADCON1          equ	159	;# 
   376     010C                     EEDATA          equ	268	;# 
   377     010D                     EEADR           equ	269	;# 
   378     010E                     EEDATH          equ	270	;# 
   379     010F                     EEADRH          equ	271	;# 
   380     018C                     EECON1          equ	396	;# 
   381     018D                     EECON2          equ	397	;# 
   382     0000                     INDF            equ	0	;# 
   383     0001                     TMR0            equ	1	;# 
   384     0002                     PCL             equ	2	;# 
   385     0003                     STATUS          equ	3	;# 
   386     0004                     FSR             equ	4	;# 
   387     0005                     PORTA           equ	5	;# 
   388     0006                     PORTB           equ	6	;# 
   389     0007                     PORTC           equ	7	;# 
   390     0008                     PORTD           equ	8	;# 
   391     0009                     PORTE           equ	9	;# 
   392     000A                     PCLATH          equ	10	;# 
   393     000B                     INTCON          equ	11	;# 
   394     000C                     PIR1            equ	12	;# 
   395     000D                     PIR2            equ	13	;# 
   396     000E                     TMR1            equ	14	;# 
   397     000E                     TMR1L           equ	14	;# 
   398     000F                     TMR1H           equ	15	;# 
   399     0010                     T1CON           equ	16	;# 
   400     0011                     TMR2            equ	17	;# 
   401     0012                     T2CON           equ	18	;# 
   402     0013                     SSPBUF          equ	19	;# 
   403     0014                     SSPCON          equ	20	;# 
   404     0015                     CCPR1           equ	21	;# 
   405     0015                     CCPR1L          equ	21	;# 
   406     0016                     CCPR1H          equ	22	;# 
   407     0017                     CCP1CON         equ	23	;# 
   408     0018                     RCSTA           equ	24	;# 
   409     0019                     TXREG           equ	25	;# 
   410     001A                     RCREG           equ	26	;# 
   411     001B                     CCPR2           equ	27	;# 
   412     001B                     CCPR2L          equ	27	;# 
   413     001C                     CCPR2H          equ	28	;# 
   414     001D                     CCP2CON         equ	29	;# 
   415     001E                     ADRESH          equ	30	;# 
   416     001F                     ADCON0          equ	31	;# 
   417     0081                     OPTION_REG      equ	129	;# 
   418     0085                     TRISA           equ	133	;# 
   419     0086                     TRISB           equ	134	;# 
   420     0087                     TRISC           equ	135	;# 
   421     0088                     TRISD           equ	136	;# 
   422     0089                     TRISE           equ	137	;# 
   423     008C                     PIE1            equ	140	;# 
   424     008D                     PIE2            equ	141	;# 
   425     008E                     PCON            equ	142	;# 
   426     0091                     SSPCON2         equ	145	;# 
   427     0092                     PR2             equ	146	;# 
   428     0093                     SSPADD          equ	147	;# 
   429     0094                     SSPSTAT         equ	148	;# 
   430     0098                     TXSTA           equ	152	;# 
   431     0099                     SPBRG           equ	153	;# 
   432     009C                     CMCON           equ	156	;# 
   433     009D                     CVRCON          equ	157	;# 
   434     009E                     ADRESL          equ	158	;# 
   435     009F                     ADCON1          equ	159	;# 
   436     010C                     EEDATA          equ	268	;# 
   437     010D                     EEADR           equ	269	;# 
   438     010E                     EEDATH          equ	270	;# 
   439     010F                     EEADRH          equ	271	;# 
   440     018C                     EECON1          equ	396	;# 
   441     018D                     EECON2          equ	397	;# 
   442                           
   443                           	psect	idataCOMMON
   444     0003                     __pidataCOMMON:
   445                           
   446                           ;initializer for read_matrix_keypad@once
   447     0003  3401               	retlw	1
   448                           
   449                           	psect	idataBANK0
   450     07FE                     __pidataBANK0:
   451                           
   452                           ;initializer for _operation_flag
   453     07FE  3401               	retlw	1
   454     07FF  3400               	retlw	0
   455     0008                     _PORTD          set	8
   456     0091                     _T2CKPS1        set	145
   457     0090                     _T2CKPS0        set	144
   458     0092                     _TMR2ON         set	146
   459     005F                     _GIE            set	95
   460     005E                     _PEIE           set	94
   461     0039                     _RC1            set	57
   462     003A                     _RC2            set	58
   463     0032                     _RB2            set	50
   464     0031                     _RB1            set	49
   465     0030                     _RB0            set	48
   466     0040                     _RD0            set	64
   467     0041                     _RD1            set	65
   468     0042                     _RD2            set	66
   469     0043                     _RD3            set	67
   470     0061                     _TMR2IF         set	97
   471     0049                     _RE1            set	73
   472     004A                     _RE2            set	74
   473     0092                     _PR2            set	146
   474     0086                     _TRISB          set	134
   475     0088                     _TRISD          set	136
   476     0461                     _TMR2IE         set	1121
   477     0439                     _TRISC1         set	1081
   478     043A                     _TRISC2         set	1082
   479     040F                     _nRBPU          set	1039
   480     0449                     _TRISE1         set	1097
   481     044A                     _TRISE2         set	1098
   482                           
   483                           	psect	strings
   484     04EE                     __pstrings:
   485     04EE                     stringtab:
   486     04EE                     __stringtab:
   487                           
   488                           ;	String table - string pointers are 2 bytes each
   489     04EE  1BFF               	btfsc	btemp+1,7
   490     04EF  2CF8               	ljmp	stringcode
   491     04F0  1383               	bcf	3,7
   492     04F1  187F               	btfsc	btemp+1,0
   493     04F2  1783               	bsf	3,7
   494     04F3  0800               	movf	0,w
   495     04F4  0A84               	incf	4,f
   496     04F5  1903               	skipnz
   497     04F6  0AFF               	incf	btemp+1,f
   498     04F7  0008               	return
   499     04F8                     stringcode:
   500     04F8  087F               	movf	btemp+1,w
   501     04F9  397F               	andlw	127
   502     04FA  008A               	movwf	10
   503     04FB  0804               	movf	4,w
   504     04FC  0A84               	incf	4,f
   505     04FD  1903               	skipnz
   506     04FE  0AFF               	incf	btemp+1,f
   507     04FF  0082               	movwf	2
   508     0500                     __stringbase:
   509     0500                     __end_of__stringtab:
   510                           
   511                           	psect	stringtext
   512     0500                     __pstringtext:
   513     0500                     STR_8:
   514     0500  3420               	retlw	32	;' '
   515     0501  344D               	retlw	77	;'M'
   516     0502  3469               	retlw	105	;'i'
   517     0503  3463               	retlw	99	;'c'
   518     0504  3472               	retlw	114	;'r'
   519     0505  346F               	retlw	111	;'o'
   520     0506  3477               	retlw	119	;'w'
   521     0507  3461               	retlw	97	;'a'
   522     0508  3476               	retlw	118	;'v'
   523     0509  3465               	retlw	101	;'e'
   524     050A  3420               	retlw	32	;' '
   525     050B  344F               	retlw	79	;'O'
   526     050C  3476               	retlw	118	;'v'
   527     050D  3465               	retlw	101	;'e'
   528     050E  346E               	retlw	110	;'n'
   529     050F  3420               	retlw	32	;' '
   530     0510  3400               	retlw	0
   531     0511                     STR_19:
   532     0511  3453               	retlw	83	;'S'
   533     0512  3445               	retlw	69	;'E'
   534     0513  3454               	retlw	84	;'T'
   535     0514  3420               	retlw	32	;' '
   536     0515  3454               	retlw	84	;'T'
   537     0516  3449               	retlw	73	;'I'
   538     0517  344D               	retlw	77	;'M'
   539     0518  3445               	retlw	69	;'E'
   540     0519  3420               	retlw	32	;' '
   541     051A  3428               	retlw	40	;'('
   542     051B  344D               	retlw	77	;'M'
   543     051C  344D               	retlw	77	;'M'
   544     051D  343A               	retlw	58	;':'
   545     051E  3453               	retlw	83	;'S'
   546     051F  3453               	retlw	83	;'S'
   547     0520  3429               	retlw	41	;')'
   548     0521  3400               	retlw	0
   549     0522                     STR_15:
   550     0522  342A               	retlw	42	;'*'
   551     0523  343A               	retlw	58	;':'
   552     0524  3443               	retlw	67	;'C'
   553     0525  344C               	retlw	76	;'L'
   554     0526  3445               	retlw	69	;'E'
   555     0527  3441               	retlw	65	;'A'
   556     0528  3452               	retlw	82	;'R'
   557     0529  3420               	retlw	32	;' '
   558     052A  3420               	retlw	32	;' '
   559     052B  3423               	retlw	35	;'#'
   560     052C  343A               	retlw	58	;':'
   561     052D  3445               	retlw	69	;'E'
   562     052E  344E               	retlw	78	;'N'
   563     052F  3454               	retlw	84	;'T'
   564     0530  3445               	retlw	69	;'E'
   565     0531  3452               	retlw	82	;'R'
   566     0532  3400               	retlw	0
   567     0533                     STR_21:
   568     0533  342A               	retlw	42	;'*'
   569     0534  343A               	retlw	58	;':'
   570     0535  3443               	retlw	67	;'C'
   571     0536  344C               	retlw	76	;'L'
   572     0537  3445               	retlw	69	;'E'
   573     0538  3441               	retlw	65	;'A'
   574     0539  3452               	retlw	82	;'R'
   575     053A  3420               	retlw	32	;' '
   576     053B  3423               	retlw	35	;'#'
   577     053C  343A               	retlw	58	;':'
   578     053D  3445               	retlw	69	;'E'
   579     053E  344E               	retlw	78	;'N'
   580     053F  3454               	retlw	84	;'T'
   581     0540  3445               	retlw	69	;'E'
   582     0541  3452               	retlw	82	;'R'
   583     0542  3400               	retlw	0
   584     0543                     STR_3:
   585     0543  3420               	retlw	32	;' '
   586     0544  3434               	retlw	52	;'4'
   587     0545  342E               	retlw	46	;'.'
   588     0546  3453               	retlw	83	;'S'
   589     0547  3474               	retlw	116	;'t'
   590     0548  3461               	retlw	97	;'a'
   591     0549  3472               	retlw	114	;'r'
   592     054A  3474               	retlw	116	;'t'
   593     054B  342F               	retlw	47	;'/'
   594     054C  3452               	retlw	82	;'R'
   595     054D  3465               	retlw	101	;'e'
   596     054E  3473               	retlw	115	;'s'
   597     054F  3475               	retlw	117	;'u'
   598     0550  346D               	retlw	109	;'m'
   599     0551  3465               	retlw	101	;'e'
   600     0552  3400               	retlw	0
   601     0553                     STR_1:
   602     0553  3420               	retlw	32	;' '
   603     0554  3470               	retlw	112	;'p'
   604     0555  346F               	retlw	111	;'o'
   605     0556  3477               	retlw	119	;'w'
   606     0557  3465               	retlw	101	;'e'
   607     0558  3472               	retlw	114	;'r'
   608     0559  3420               	retlw	32	;' '
   609     055A  343D               	retlw	61	;'='
   610     055B  3420               	retlw	32	;' '
   611     055C  3439               	retlw	57	;'9'
   612     055D  3430               	retlw	48	;'0'
   613     055E  3430               	retlw	48	;'0'
   614     055F  3477               	retlw	119	;'w'
   615     0560  3420               	retlw	32	;' '
   616     0561  3400               	retlw	0
   617     0562                     STR_13:
   618     0562  3420               	retlw	32	;' '
   619     0563  3453               	retlw	83	;'S'
   620     0564  3445               	retlw	69	;'E'
   621     0565  3454               	retlw	84	;'T'
   622     0566  3420               	retlw	32	;' '
   623     0567  3454               	retlw	84	;'T'
   624     0568  3445               	retlw	69	;'E'
   625     0569  344D               	retlw	77	;'M'
   626     056A  3450               	retlw	80	;'P'
   627     056B  3420               	retlw	32	;' '
   628     056C  3428               	retlw	40	;'('
   629     056D  346F               	retlw	111	;'o'
   630     056E  3443               	retlw	67	;'C'
   631     056F  3429               	retlw	41	;')'
   632     0570  3400               	retlw	0
   633     0571                     STR_7:
   634     0571  3420               	retlw	32	;' '
   635     0572  3450               	retlw	80	;'P'
   636     0573  346F               	retlw	111	;'o'
   637     0574  3477               	retlw	119	;'w'
   638     0575  3465               	retlw	101	;'e'
   639     0576  3472               	retlw	114	;'r'
   640     0577  3469               	retlw	105	;'i'
   641     0578  346E               	retlw	110	;'n'
   642     0579  3467               	retlw	103	;'g'
   643     057A  3420               	retlw	32	;' '
   644     057B  344F               	retlw	79	;'O'
   645     057C  344E               	retlw	78	;'N'
   646     057D  3420               	retlw	32	;' '
   647     057E  3400               	retlw	0
   648     057F                     STR_16:
   649     057F  3420               	retlw	32	;' '
   650     0580  3450               	retlw	80	;'P'
   651     0581  3472               	retlw	114	;'r'
   652     0582  3465               	retlw	101	;'e'
   653     0583  342D               	retlw	45	;'-'
   654     0584  3448               	retlw	72	;'H'
   655     0585  3465               	retlw	101	;'e'
   656     0586  3461               	retlw	97	;'a'
   657     0587  3474               	retlw	116	;'t'
   658     0588  3469               	retlw	105	;'i'
   659     0589  346E               	retlw	110	;'n'
   660     058A  3467               	retlw	103	;'g'
   661     058B  3420               	retlw	32	;' '
   662     058C  3400               	retlw	0
   663     058D                     STR_11:
   664     058D  3433               	retlw	51	;'3'
   665     058E  342E               	retlw	46	;'.'
   666     058F  3443               	retlw	67	;'C'
   667     0590  346F               	retlw	111	;'o'
   668     0591  346E               	retlw	110	;'n'
   669     0592  3476               	retlw	118	;'v'
   670     0593  3465               	retlw	101	;'e'
   671     0594  3463               	retlw	99	;'c'
   672     0595  3474               	retlw	116	;'t'
   673     0596  3469               	retlw	105	;'i'
   674     0597  346F               	retlw	111	;'o'
   675     0598  346E               	retlw	110	;'n'
   676     0599  3400               	retlw	0
   677     059A                     STR_17:
   678     059A  3454               	retlw	84	;'T'
   679     059B  3469               	retlw	105	;'i'
   680     059C  346D               	retlw	109	;'m'
   681     059D  3465               	retlw	101	;'e'
   682     059E  3420               	retlw	32	;' '
   683     059F  3452               	retlw	82	;'R'
   684     05A0  3465               	retlw	101	;'e'
   685     05A1  346D               	retlw	109	;'m'
   686     05A2  342E               	retlw	46	;'.'
   687     05A3  343D               	retlw	61	;'='
   688     05A4  3420               	retlw	32	;' '
   689     05A5  3400               	retlw	0
   690     05A6                     STR_6:
   691     05A6  3420               	retlw	32	;' '
   692     05A7  3454               	retlw	84	;'T'
   693     05A8  3469               	retlw	105	;'i'
   694     05A9  346D               	retlw	109	;'m'
   695     05AA  3465               	retlw	101	;'e'
   696     05AB  3420               	retlw	32	;' '
   697     05AC  3455               	retlw	85	;'U'
   698     05AD  3470               	retlw	112	;'p'
   699     05AE  3420               	retlw	32	;' '
   700     05AF  3421               	retlw	33	;'!'
   701     05B0  3421               	retlw	33	;'!'
   702     05B1  3400               	retlw	0
   703     05B2                     STR_2:
   704     05B2  3420               	retlw	32	;' '
   705     05B3  3454               	retlw	84	;'T'
   706     05B4  3449               	retlw	73	;'I'
   707     05B5  344D               	retlw	77	;'M'
   708     05B6  3445               	retlw	69	;'E'
   709     05B7  3420               	retlw	32	;' '
   710     05B8  343D               	retlw	61	;'='
   711     05B9  3420               	retlw	32	;' '
   712     05BA  3400               	retlw	0
   713     05BB                     STR_14:
   714     05BB  3420               	retlw	32	;' '
   715     05BC  3454               	retlw	84	;'T'
   716     05BD  3445               	retlw	69	;'E'
   717     05BE  344D               	retlw	77	;'M'
   718     05BF  3450               	retlw	80	;'P'
   719     05C0  3420               	retlw	32	;' '
   720     05C1  343D               	retlw	61	;'='
   721     05C2  3420               	retlw	32	;' '
   722     05C3  3400               	retlw	0
   723     05C4                     STR_4:
   724     05C4  3420               	retlw	32	;' '
   725     05C5  3435               	retlw	53	;'5'
   726     05C6  342E               	retlw	46	;'.'
   727     05C7  3450               	retlw	80	;'P'
   728     05C8  3461               	retlw	97	;'a'
   729     05C9  3475               	retlw	117	;'u'
   730     05CA  3473               	retlw	115	;'s'
   731     05CB  3465               	retlw	101	;'e'
   732     05CC  3400               	retlw	0
   733     05CD                     STR_10:
   734     05CD  3432               	retlw	50	;'2'
   735     05CE  342E               	retlw	46	;'.'
   736     05CF  3447               	retlw	71	;'G'
   737     05D0  3472               	retlw	114	;'r'
   738     05D1  3469               	retlw	105	;'i'
   739     05D2  346C               	retlw	108	;'l'
   740     05D3  346C               	retlw	108	;'l'
   741     05D4  3400               	retlw	0
   742     05D5                     STR_9:
   743     05D5  3431               	retlw	49	;'1'
   744     05D6  342E               	retlw	46	;'.'
   745     05D7  344D               	retlw	77	;'M'
   746     05D8  3469               	retlw	105	;'i'
   747     05D9  3463               	retlw	99	;'c'
   748     05DA  3472               	retlw	114	;'r'
   749     05DB  346F               	retlw	111	;'o'
   750     05DC  3400               	retlw	0
   751     05DD                     STR_5:
   752     05DD  3420               	retlw	32	;' '
   753     05DE  3436               	retlw	54	;'6'
   754     05DF  342E               	retlw	46	;'.'
   755     05E0  3453               	retlw	83	;'S'
   756     05E1  3474               	retlw	116	;'t'
   757     05E2  346F               	retlw	111	;'o'
   758     05E3  3470               	retlw	112	;'p'
   759     05E4  3400               	retlw	0
   760     05E5                     STR_12:
   761     05E5  3434               	retlw	52	;'4'
   762     05E6  342E               	retlw	46	;'.'
   763     05E7  3453               	retlw	83	;'S'
   764     05E8  3474               	retlw	116	;'t'
   765     05E9  3461               	retlw	97	;'a'
   766     05EA  3472               	retlw	114	;'r'
   767     05EB  3474               	retlw	116	;'t'
   768     05EC  3400               	retlw	0
   769     05ED                     STR_20:
   770     05ED  3454               	retlw	84	;'T'
   771     05EE  3449               	retlw	73	;'I'
   772     05EF  344D               	retlw	77	;'M'
   773     05F0  3445               	retlw	69	;'E'
   774     05F1  342D               	retlw	45	;'-'
   775     05F2  3420               	retlw	32	;' '
   776     05F3  3400               	retlw	0
   777     05F2                     STR_18          equ	STR_20+5
   778     05F2                     STR_22          equ	STR_20+5
   779     05F2                     STR_23          equ	STR_20+5
   780                           
   781                           	psect	cinit
   782     000F                     start_initialization:	
   783                           ; #config settings
   784                           
   785     000F                     __initialization:
   786                           
   787                           ; Initialize objects allocated to BANK0
   788     000F  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   789     0014  00C1               	movwf	__pdataBANK0& (0+127)
   790     0015  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   791     001A  00C2               	movwf	(__pdataBANK0+1)& (0+127)
   792                           
   793                           ; Initialize objects allocated to COMMON
   794     001B  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   795     0020  00FB               	movwf	__pdataCOMMON& (0+127)
   796                           
   797                           ; Clear objects allocated to BANK0
   798     0021  01B4               	clrf	__pbssBANK0& (0+127)
   799     0022  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   800     0023  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   801     0024  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   802     0025  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   803     0026  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   804     0027  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   805     0028  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   806     0029  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   807     002A  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   808     002B  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   809     002C  01BF               	clrf	(__pbssBANK0+11)& (0+127)
   810     002D  01C0               	clrf	(__pbssBANK0+12)& (0+127)
   811                           
   812                           ; Clear objects allocated to COMMON
   813     002E  01F9               	clrf	__pbssCOMMON& (0+127)
   814     002F  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   815     0030                     end_of_initialization:	
   816                           ;End of C runtime variable initialization code
   817                           
   818     0030                     __end_of__initialization:
   819     0030  0183               	clrf	3
   820     0031  120A  118A  2AFB   	ljmp	_main	;jump to C main() function
   821                           
   822                           	psect	bssCOMMON
   823     0079                     __pbssCOMMON:
   824     0079                     isr@count:
   825     0079                     	ds	2
   826                           
   827                           	psect	dataCOMMON
   828     007B                     __pdataCOMMON:
   829     007B                     read_matrix_keypad@once:
   830     007B                     	ds	1
   831                           
   832                           	psect	bssBANK0
   833     0034                     __pbssBANK0:
   834     0034                     set_time@wait:
   835     0034                     	ds	2
   836     0036                     set_temp@wait:
   837     0036                     	ds	2
   838     0038                     set_time@blink:
   839     0038                     	ds	1
   840     0039                     set_time@blink_pos:
   841     0039                     	ds	1
   842     003A                     set_time@key_count:
   843     003A                     	ds	1
   844     003B                     set_temp@temp:
   845     003B                     	ds	1
   846     003C                     set_temp@blink:
   847     003C                     	ds	1
   848     003D                     set_temp@key_count:
   849     003D                     	ds	1
   850     003E                     _flag:
   851     003E                     	ds	1
   852     003F                     _min:
   853     003F                     	ds	1
   854     0040                     _sec:
   855     0040                     	ds	1
   856                           
   857                           	psect	dataBANK0
   858     0041                     __pdataBANK0:
   859     0041                     _operation_flag:
   860     0041                     	ds	2
   861                           
   862                           	psect	cstackCOMMON
   863     0070                     __pcstackCOMMON:
   864     0070                     ?_init_timer2:
   865     0070                     ?_clear_screen:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0070                     ?_power_on_screen:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0070                     ?_menu_display_screen:	
   872                           ; 1 bytes @ 0x0
   873                           
   874     0070                     ?_time_display_screen:	
   875                           ; 1 bytes @ 0x0
   876                           
   877     0070                     ?_init_display_controller:	
   878                           ; 1 bytes @ 0x0
   879                           
   880     0070                     ?_init_clcd:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     ?_isr:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0070                     ?_init_matrix_keypad:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ?_scan_keypad:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0070                     ?_read_matrix_keypad:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     ?_init_config:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0070                     ?_main:	
   899                           ; 1 bytes @ 0x0
   900                           
   901     0070                     ??_isr:	
   902                           ; 1 bytes @ 0x0
   903                           
   904                           
   905                           ; 1 bytes @ 0x0
   906     0070                     	ds	2
   907     0072                     ?_clcd_write:
   908     0072                     ?___bmul:	
   909                           ; 1 bytes @ 0x2
   910                           
   911     0072                     ?___awdiv:	
   912                           ; 1 bytes @ 0x2
   913                           
   914     0072                     clcd_write@mode:	
   915                           ; 2 bytes @ 0x2
   916                           
   917     0072                     ___bmul@multiplicand:	
   918                           ; 1 bytes @ 0x2
   919                           
   920     0072                     scan_keypad@i:	
   921                           ; 1 bytes @ 0x2
   922                           
   923     0072                     ___awdiv@divisor:	
   924                           ; 2 bytes @ 0x2
   925                           
   926     0072                     ??_init_timer2:	
   927                           ; 2 bytes @ 0x2
   928                           
   929     0072                     ??_init_matrix_keypad:	
   930                           ; 1 bytes @ 0x2
   931                           
   932     0072                     ??_scan_keypad:	
   933                           ; 1 bytes @ 0x2
   934                           
   935                           
   936                           ; 1 bytes @ 0x2
   937     0072                     	ds	1
   938     0073                     ___bmul@product:
   939     0073                     ??_clcd_write:	
   940                           ; 1 bytes @ 0x3
   941                           
   942     0073                     ??___bmul:	
   943                           ; 1 bytes @ 0x3
   944                           
   945                           
   946                           ; 1 bytes @ 0x3
   947     0073                     	ds	1
   948     0074                     read_matrix_keypad@mode:
   949     0074                     ___bmul@multiplier:	
   950                           ; 1 bytes @ 0x4
   951                           
   952     0074                     ___awdiv@dividend:	
   953                           ; 1 bytes @ 0x4
   954                           
   955     0074                     ??_read_matrix_keypad:	
   956                           ; 2 bytes @ 0x4
   957                           
   958                           
   959                           ; 1 bytes @ 0x4
   960     0074                     	ds	1
   961     0075                     clcd_write@byte:
   962     0075                     read_matrix_keypad@key:	
   963                           ; 1 bytes @ 0x5
   964                           
   965                           
   966                           ; 1 bytes @ 0x5
   967     0075                     	ds	1
   968     0076                     ?_clcd_print:
   969     0076                     ___awmod@counter:	
   970                           ; 1 bytes @ 0x6
   971                           
   972     0076                     clcd_print@str:	
   973                           ; 1 bytes @ 0x6
   974                           
   975     0076                     ??_clear_screen:	
   976                           ; 2 bytes @ 0x6
   977                           
   978     0076                     ??_init_display_controller:	
   979                           ; 1 bytes @ 0x6
   980                           
   981     0076                     ??___awdiv:	
   982                           ; 1 bytes @ 0x6
   983                           
   984     0076                     ??___awmod:	
   985                           ; 1 bytes @ 0x6
   986                           
   987                           
   988                           ; 1 bytes @ 0x6
   989     0076                     	ds	1
   990     0077                     ___awmod@sign:
   991                           
   992                           ; 1 bytes @ 0x7
   993     0077                     	ds	1
   994     0078                     clcd_putch@data:
   995     0078                     clcd_print@addr:	
   996                           ; 1 bytes @ 0x8
   997                           
   998     0078                     ??_init_clcd:	
   999                           ; 1 bytes @ 0x8
  1000                           
  1001     0078                     ??_clcd_putch:	
  1002                           ; 1 bytes @ 0x8
  1003                           
  1004     0078                     ??_init_config:	
  1005                           ; 1 bytes @ 0x8
  1006                           
  1007                           
  1008                           ; 1 bytes @ 0x8
  1009     0078                     	ds	1
  1010     0079                     ??_menu_display_screen:
  1011     0079                     ??_clcd_print:	
  1012                           ; 1 bytes @ 0x9
  1013                           
  1014                           
  1015                           	psect	cstackBANK0
  1016     0020                     __pcstackBANK0:	
  1017                           ; 1 bytes @ 0x9
  1018                           
  1019     0020                     ___awdiv@counter:
  1020                           
  1021                           ; 1 bytes @ 0x0
  1022     0020                     	ds	1
  1023     0021                     ___awdiv@sign:
  1024                           
  1025                           ; 1 bytes @ 0x1
  1026     0021                     	ds	1
  1027     0022                     ___awdiv@quotient:
  1028                           
  1029                           ; 2 bytes @ 0x2
  1030     0022                     	ds	2
  1031     0024                     ?___awmod:
  1032     0024                     ___awmod@divisor:	
  1033                           ; 2 bytes @ 0x4
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x4
  1037     0024                     	ds	2
  1038     0026                     ___awmod@dividend:
  1039                           
  1040                           ; 2 bytes @ 0x6
  1041     0026                     	ds	2
  1042     0028                     ?_clcd_putch:
  1043     0028                     clcd_putch@addr:	
  1044                           ; 1 bytes @ 0x8
  1045                           
  1046                           
  1047                           ; 1 bytes @ 0x8
  1048     0028                     	ds	1
  1049     0029                     ?_set_time:
  1050     0029                     ?_set_temp:	
  1051                           ; 1 bytes @ 0x9
  1052                           
  1053     0029                     set_temp@reset_flag:	
  1054                           ; 1 bytes @ 0x9
  1055                           
  1056     0029                     set_time@reset_flag:	
  1057                           ; 2 bytes @ 0x9
  1058                           
  1059     0029                     ??_power_on_screen:	
  1060                           ; 2 bytes @ 0x9
  1061                           
  1062     0029                     ??_time_display_screen:	
  1063                           ; 1 bytes @ 0x9
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0x9
  1067     0029                     	ds	2
  1068     002B                     ??_set_time:
  1069     002B                     ??_set_temp:	
  1070                           ; 1 bytes @ 0xB
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0xB
  1074     002B                     	ds	1
  1075     002C                     power_on_screen@i:
  1076                           
  1077                           ; 1 bytes @ 0xC
  1078     002C                     	ds	1
  1079     002D                     set_temp@key:
  1080     002D                     set_time@key:	
  1081                           ; 1 bytes @ 0xD
  1082                           
  1083                           
  1084                           ; 1 bytes @ 0xD
  1085     002D                     	ds	1
  1086     002E                     ??_main:
  1087                           
  1088                           ; 1 bytes @ 0xE
  1089     002E                     	ds	3
  1090     0031                     main@reset_flag:
  1091                           
  1092                           ; 2 bytes @ 0x11
  1093     0031                     	ds	2
  1094     0033                     main@key:
  1095                           
  1096                           ; 1 bytes @ 0x13
  1097     0033                     	ds	1
  1098                           
  1099                           	psect	maintext
  1100     02FB                     __pmaintext:	
  1101 ;;
  1102 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1103 ;;
  1104 ;; *************** function _main *****************
  1105 ;; Defined at:
  1106 ;;		line 36 in file "shank.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  reset_flag      2   17[BANK0 ] int 
  1111 ;;  key             1   19[BANK0 ] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : B00/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1121 ;;      Params:         0       0       0       0       0
  1122 ;;      Locals:         0       3       0       0       0
  1123 ;;      Temps:          0       3       0       0       0
  1124 ;;      Totals:         0       6       0       0       0
  1125 ;;Total ram usage:        6 bytes
  1126 ;; Hardware stack levels required when called: 5
  1127 ;; This function calls:
  1128 ;;		_clcd_print
  1129 ;;		_clear_screen
  1130 ;;		_init_config
  1131 ;;		_menu_display_screen
  1132 ;;		_power_on_screen
  1133 ;;		_read_matrix_keypad
  1134 ;;		_set_temp
  1135 ;;		_set_time
  1136 ;;		_time_display_screen
  1137 ;; This function is called by:
  1138 ;;		Startup code after reset
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142     02FB                     _main:	
  1143                           ;psect for function _main
  1144                           
  1145     02FB                     l2616:	
  1146                           ;incstack = 0
  1147                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1148                           
  1149                           
  1150                           ;shank.c: 37:             operation_flag = 0x03;
  1151     02FB  120A  158A  267E  120A  118A  	fcall	_init_config
  1152     0300                     l2618:
  1153                           
  1154                           ;shank.c: 44:         else if(key == 2)
  1155     0300  3001               	movlw	1
  1156     0301  120A  158A  269C  120A  118A  	fcall	_read_matrix_keypad
  1157     0306  1283               	bcf	3,5	;RP0=0, select bank0
  1158     0307  1303               	bcf	3,6	;RP1=0, select bank0
  1159     0308  00B3               	movwf	main@key
  1160     0309                     l2620:
  1161                           
  1162                           ;shank.c: 45:         {
  1163     0309  3002               	movlw	2
  1164     030A  0641               	xorwf	_operation_flag,w
  1165     030B  0442               	iorwf	_operation_flag+1,w
  1166     030C  1D03               	btfss	3,2
  1167     030D  2B0F               	goto	u2421
  1168     030E  2B10               	goto	u2420
  1169     030F                     u2421:
  1170     030F  2B77               	goto	l2660
  1171     0310                     u2420:
  1172     0310                     l2622:
  1173                           
  1174                           ;shank.c: 46:             operation_flag = 0x04;;shank.c: 48:             clear_screen()
      +                          ;
  1175     0310  0333               	decf	main@key,w
  1176     0311  1D03               	btfss	3,2
  1177     0312  2B14               	goto	u2431
  1178     0313  2B15               	goto	u2430
  1179     0314                     u2431:
  1180     0314  2B41               	goto	l2634
  1181     0315                     u2430:
  1182     0315                     l2624:
  1183                           
  1184                           ;shank.c: 49: ;shank.c: 50:         }
  1185     0315  3003               	movlw	3
  1186     0316  00C1               	movwf	_operation_flag
  1187     0317  3000               	movlw	0
  1188     0318  00C2               	movwf	_operation_flag+1
  1189                           
  1190                           ;shank.c: 51:         else if(key == 3)
  1191     0319  3010               	movlw	16
  1192     031A  00B1               	movwf	main@reset_flag
  1193     031B  3000               	movlw	0
  1194     031C  00B2               	movwf	main@reset_flag+1
  1195     031D                     l2626:
  1196                           
  1197                           ;shank.c: 52:         {
  1198     031D  120A  158A  2647  120A  118A  	fcall	_clear_screen
  1199     0322                     l2628:
  1200                           
  1201                           ;shank.c: 53:             operation_flag = 0x05;
  1202     0322  3053               	movlw	low (STR_1| (0+32768))
  1203     0323  00F6               	movwf	clcd_print@str
  1204     0324  3085               	movlw	high (STR_1| (0+32768))
  1205     0325  00F7               	movwf	clcd_print@str+1
  1206     0326  30C0               	movlw	192
  1207     0327  00F8               	movwf	clcd_print@addr
  1208     0328  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  1209     032D                     l2630:
  1210                           
  1211                           ;shank.c: 54:             reset_flag = 0x10;
  1212     032D  304D               	movlw	77
  1213     032E  1283               	bcf	3,5	;RP0=0, select bank0
  1214     032F  1303               	bcf	3,6	;RP1=0, select bank0
  1215     0330  00B0               	movwf	??_main+2
  1216     0331  3019               	movlw	25
  1217     0332  00AF               	movwf	??_main+1
  1218     0333  304F               	movlw	79
  1219     0334  00AE               	movwf	??_main
  1220     0335                     u2577:
  1221     0335  0BAE               	decfsz	??_main,f
  1222     0336  2B35               	goto	u2577
  1223     0337  0BAF               	decfsz	??_main+1,f
  1224     0338  2B35               	goto	u2577
  1225     0339  0BB0               	decfsz	??_main+2,f
  1226     033A  2B35               	goto	u2577
  1227     033B                     l2632:
  1228                           
  1229                           ;shank.c: 55:             clear_screen();
  1230     033B  120A  158A  2647  120A  118A  	fcall	_clear_screen
  1231                           
  1232                           ;shank.c: 56: 
  1233     0340  2C28               	goto	l2720
  1234     0341                     l2634:
  1235     0341  3002               	movlw	2
  1236     0342  0633               	xorwf	main@key,w
  1237     0343  1D03               	btfss	3,2
  1238     0344  2B46               	goto	u2441
  1239     0345  2B47               	goto	u2440
  1240     0346                     u2441:
  1241     0346  2B50               	goto	l2640
  1242     0347                     u2440:
  1243     0347                     l2636:
  1244                           
  1245                           ;shank.c: 58:         else if(key == 4);shank.c: 59:         {
  1246     0347  3004               	movlw	4
  1247     0348  00C1               	movwf	_operation_flag
  1248     0349  3000               	movlw	0
  1249     034A  00C2               	movwf	_operation_flag+1
  1250                           
  1251                           ;shank.c: 60:             sec = 30;
  1252     034B  3010               	movlw	16
  1253     034C  00B1               	movwf	main@reset_flag
  1254     034D  3000               	movlw	0
  1255     034E  00B2               	movwf	main@reset_flag+1
  1256     034F  2B3B               	goto	l2632
  1257     0350                     l2640:
  1258     0350  3003               	movlw	3
  1259     0351  0633               	xorwf	main@key,w
  1260     0352  1D03               	btfss	3,2
  1261     0353  2B55               	goto	u2451
  1262     0354  2B56               	goto	u2450
  1263     0355                     u2451:
  1264     0355  2B5F               	goto	l2646
  1265     0356                     u2450:
  1266     0356                     l2642:
  1267                           
  1268                           ;shank.c: 65:              operation_flag = 0x07;;shank.c: 66:         }
  1269     0356  3005               	movlw	5
  1270     0357  00C1               	movwf	_operation_flag
  1271     0358  3000               	movlw	0
  1272     0359  00C2               	movwf	_operation_flag+1
  1273                           
  1274                           ;shank.c: 67:        }
  1275     035A  3010               	movlw	16
  1276     035B  00B1               	movwf	main@reset_flag
  1277     035C  3000               	movlw	0
  1278     035D  00B2               	movwf	main@reset_flag+1
  1279     035E  2B3B               	goto	l2632
  1280     035F                     l2646:
  1281     035F  3004               	movlw	4
  1282     0360  0633               	xorwf	main@key,w
  1283     0361  1D03               	btfss	3,2
  1284     0362  2B64               	goto	u2461
  1285     0363  2B65               	goto	u2460
  1286     0364                     u2461:
  1287     0364  2B76               	goto	l176
  1288     0365                     u2460:
  1289     0365                     l2648:
  1290                           
  1291                           ;shank.c: 72:                sec = sec + 30;;shank.c: 73:                if(sec > 59)
  1292     0365  301E               	movlw	30
  1293     0366  00C0               	movwf	_sec
  1294     0367                     l2650:
  1295                           
  1296                           ;shank.c: 74:                {
  1297     0367  01BF               	clrf	_min
  1298     0368                     l2652:
  1299                           
  1300                           ;shank.c: 75:                    min++;
  1301     0368  1507               	bsf	7,2	;volatile
  1302     0369                     l2654:
  1303                           
  1304                           ;shank.c: 76:                    sec = sec - 60;
  1305     0369  1512               	bsf	18,2	;volatile
  1306     036A                     l2656:
  1307                           
  1308                           ;shank.c: 77:                }
  1309     036A  120A  158A  2647  120A  118A  	fcall	_clear_screen
  1310     036F                     l2658:
  1311                           
  1312                           ;shank.c: 78:             }
  1313     036F  3007               	movlw	7
  1314     0370  1283               	bcf	3,5	;RP0=0, select bank0
  1315     0371  1303               	bcf	3,6	;RP1=0, select bank0
  1316     0372  00C1               	movwf	_operation_flag
  1317     0373  3000               	movlw	0
  1318     0374  00C2               	movwf	_operation_flag+1
  1319     0375  2C28               	goto	l2720
  1320     0376                     l176:
  1321                           
  1322                           ;shank.c: 80:             {
  1323     0376  2C28               	goto	l2720
  1324     0377                     l2660:
  1325     0377  3007               	movlw	7
  1326     0378  0641               	xorwf	_operation_flag,w
  1327     0379  0442               	iorwf	_operation_flag+1,w
  1328     037A  1D03               	btfss	3,2
  1329     037B  2B7D               	goto	u2471
  1330     037C  2B7E               	goto	u2470
  1331     037D                     u2471:
  1332     037D  2BA9               	goto	l2680
  1333     037E                     u2470:
  1334     037E                     l2662:
  1335                           
  1336                           ;shank.c: 82:             };shank.c: 83:             else if(key == 6)
  1337     037E  3004               	movlw	4
  1338     037F  0633               	xorwf	main@key,w
  1339     0380  1D03               	btfss	3,2
  1340     0381  2B83               	goto	u2481
  1341     0382  2B84               	goto	u2480
  1342     0383                     u2481:
  1343     0383  2B93               	goto	l2670
  1344     0384                     u2480:
  1345     0384                     l2664:
  1346                           
  1347                           ;shank.c: 84:             {;shank.c: 85:                 operation_flag = 0x0A;
  1348     0384  0840               	movf	_sec,w
  1349     0385  3E1E               	addlw	30
  1350     0386  00C0               	movwf	_sec
  1351     0387                     l2666:
  1352                           
  1353                           ;shank.c: 86:                 clear_screen();
  1354     0387  303C               	movlw	60
  1355     0388  0240               	subwf	_sec,w
  1356     0389  1C03               	skipc
  1357     038A  2B8C               	goto	u2491
  1358     038B  2B8D               	goto	u2490
  1359     038C                     u2491:
  1360     038C  2C28               	goto	l2720
  1361     038D                     u2490:
  1362     038D                     l2668:
  1363                           
  1364                           ;shank.c: 87: ;shank.c: 88:             }
  1365     038D  3001               	movlw	1
  1366     038E  07BF               	addwf	_min,f
  1367                           
  1368                           ;shank.c: 89:         }
  1369     038F  0840               	movf	_sec,w
  1370     0390  3EC4               	addlw	196
  1371     0391  00C0               	movwf	_sec
  1372     0392  2C28               	goto	l2720
  1373     0393                     l2670:
  1374     0393  3005               	movlw	5
  1375     0394  0633               	xorwf	main@key,w
  1376     0395  1D03               	btfss	3,2
  1377     0396  2B98               	goto	u2501
  1378     0397  2B99               	goto	u2500
  1379     0398                     u2501:
  1380     0398  2B9E               	goto	l2674
  1381     0399                     u2500:
  1382     0399                     l2672:
  1383                           
  1384                           ;shank.c: 93:            {;shank.c: 94:                RC2 = 1;
  1385     0399  3009               	movlw	9
  1386     039A  00C1               	movwf	_operation_flag
  1387     039B  3000               	movlw	0
  1388     039C  00C2               	movwf	_operation_flag+1
  1389                           
  1390                           ;shank.c: 95:                TMR2ON = 1;
  1391     039D  2C28               	goto	l2720
  1392     039E                     l2674:
  1393     039E  3006               	movlw	6
  1394     039F  0633               	xorwf	main@key,w
  1395     03A0  1D03               	btfss	3,2
  1396     03A1  2BA3               	goto	u2511
  1397     03A2  2BA4               	goto	u2510
  1398     03A3                     u2511:
  1399     03A3  2B76               	goto	l176
  1400     03A4                     u2510:
  1401     03A4                     l2676:
  1402                           
  1403                           ;shank.c: 97:            };shank.c: 98:         }
  1404     03A4  300A               	movlw	10
  1405     03A5  00C1               	movwf	_operation_flag
  1406     03A6  3000               	movlw	0
  1407     03A7  00C2               	movwf	_operation_flag+1
  1408     03A8  2B3B               	goto	l2632
  1409     03A9                     l2680:
  1410     03A9  3009               	movlw	9
  1411     03AA  0641               	xorwf	_operation_flag,w
  1412     03AB  0442               	iorwf	_operation_flag+1,w
  1413     03AC  1D03               	btfss	3,2
  1414     03AD  2BAF               	goto	u2521
  1415     03AE  2BB0               	goto	u2520
  1416     03AF                     u2521:
  1417     03AF  2B76               	goto	l176
  1418     03B0                     u2520:
  1419     03B0                     l2682:
  1420                           
  1421                           ;shank.c: 104:                power_on_screen();;shank.c: 105:                operation_
      +                          flag = 0x02 ;
  1422     03B0  3004               	movlw	4
  1423     03B1  0633               	xorwf	main@key,w
  1424     03B2  1D03               	btfss	3,2
  1425     03B3  2BB5               	goto	u2531
  1426     03B4  2BB6               	goto	u2530
  1427     03B5                     u2531:
  1428     03B5  2C28               	goto	l2720
  1429     03B6                     u2530:
  1430     03B6                     l2684:
  1431                           
  1432                           ;shank.c: 106:                clear_screen();;shank.c: 107:                  break;
  1433     03B6  1507               	bsf	7,2	;volatile
  1434                           
  1435                           ;shank.c: 108:            case 0x02:
  1436     03B7  1512               	bsf	18,2	;volatile
  1437     03B8  2B6F               	goto	l2658
  1438     03B9                     l2688:
  1439                           
  1440                           ;shank.c: 117:            case 0x05:
  1441     03B9  120A  118A  2791  120A  118A  	fcall	_power_on_screen
  1442     03BE                     l2690:
  1443                           
  1444                           ;shank.c: 118:                if(flag == 0)
  1445     03BE  3002               	movlw	2
  1446     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1447     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1448     03C1  00C1               	movwf	_operation_flag
  1449     03C2  3000               	movlw	0
  1450     03C3  00C2               	movwf	_operation_flag+1
  1451     03C4                     l2692:
  1452                           
  1453                           ;shank.c: 119:                {
  1454     03C4  120A  158A  2647  120A  118A  	fcall	_clear_screen
  1455                           
  1456                           ;shank.c: 120:                    set_temp(key, reset_flag);
  1457     03C9  2C49               	goto	l2722
  1458     03CA                     l2694:
  1459                           
  1460                           ;shank.c: 122:                    {
  1461     03CA  120A  158A  26BF  120A  118A  	fcall	_menu_display_screen
  1462                           
  1463                           ;shank.c: 123:                        clear_screen();
  1464     03CF  2C49               	goto	l2722
  1465     03D0                     l2696:
  1466                           
  1467                           ;shank.c: 125:                       continue;
  1468     03D0  0832               	movf	main@reset_flag+1,w
  1469     03D1  00AA               	movwf	set_time@reset_flag+1
  1470     03D2  0831               	movf	main@reset_flag,w
  1471     03D3  00A9               	movwf	set_time@reset_flag
  1472     03D4  0833               	movf	main@key,w
  1473     03D5  120A  118A  21A1  120A  118A  	fcall	_set_time
  1474                           
  1475                           ;shank.c: 126:                    }
  1476     03DA  2C49               	goto	l2722
  1477     03DB                     l2698:
  1478                           
  1479                           ;shank.c: 128:                else if(flag == 1)
  1480     03DB  0832               	movf	main@reset_flag+1,w
  1481     03DC  00AA               	movwf	set_time@reset_flag+1
  1482     03DD  0831               	movf	main@reset_flag,w
  1483     03DE  00A9               	movwf	set_time@reset_flag
  1484     03DF  0833               	movf	main@key,w
  1485     03E0  120A  118A  21A1  120A  118A  	fcall	_set_time
  1486                           
  1487                           ;shank.c: 129:                {
  1488     03E5  2C49               	goto	l2722
  1489     03E6                     l2700:
  1490                           
  1491                           ;shank.c: 131:                }
  1492     03E6  083E               	movf	_flag,w
  1493     03E7  1D03               	btfss	3,2
  1494     03E8  2BEA               	goto	u2541
  1495     03E9  2BEB               	goto	u2540
  1496     03EA                     u2541:
  1497     03EA  2C08               	goto	l2710
  1498     03EB                     u2540:
  1499     03EB                     l2702:
  1500                           
  1501                           ;shank.c: 132: ;shank.c: 133:                break;
  1502     03EB  0832               	movf	main@reset_flag+1,w
  1503     03EC  00AA               	movwf	set_temp@reset_flag+1
  1504     03ED  0831               	movf	main@reset_flag,w
  1505     03EE  00A9               	movwf	set_temp@reset_flag
  1506     03EF  0833               	movf	main@key,w
  1507     03F0  120A  118A  2034  120A  118A  	fcall	_set_temp
  1508     03F5                     l2704:
  1509                           
  1510                           ;shank.c: 134:            case 0x07:
  1511     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1512     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1513     03F7  033E               	decf	_flag,w
  1514     03F8  1D03               	btfss	3,2
  1515     03F9  2BFB               	goto	u2551
  1516     03FA  2BFC               	goto	u2550
  1517     03FB                     u2551:
  1518     03FB  2C49               	goto	l2722
  1519     03FC                     u2550:
  1520     03FC                     l2706:
  1521                           
  1522                           ;shank.c: 135:                time_display_screen();;shank.c: 136:                break;
  1523     03FC  120A  158A  2647  120A  118A  	fcall	_clear_screen
  1524     0401                     l2708:
  1525                           
  1526                           ;shank.c: 137:            case 0x09:
  1527     0401  3010               	movlw	16
  1528     0402  1283               	bcf	3,5	;RP0=0, select bank0
  1529     0403  1303               	bcf	3,6	;RP1=0, select bank0
  1530     0404  00B1               	movwf	main@reset_flag
  1531     0405  3000               	movlw	0
  1532     0406  00B2               	movwf	main@reset_flag+1
  1533                           
  1534                           ;shank.c: 138:                RC2 = 0;
  1535     0407  2B00               	goto	l2618
  1536     0408                     l2710:
  1537     0408  033E               	decf	_flag,w
  1538     0409  1D03               	btfss	3,2
  1539     040A  2C0C               	goto	u2561
  1540     040B  2C0D               	goto	u2560
  1541     040C                     u2561:
  1542     040C  2C49               	goto	l2722
  1543     040D                     u2560:
  1544     040D                     l2712:
  1545                           
  1546                           ;shank.c: 142:                RC2 = 0;;shank.c: 143:                TMR2ON = 0;
  1547     040D  0832               	movf	main@reset_flag+1,w
  1548     040E  00AA               	movwf	set_time@reset_flag+1
  1549     040F  0831               	movf	main@reset_flag,w
  1550     0410  00A9               	movwf	set_time@reset_flag
  1551     0411  0833               	movf	main@key,w
  1552     0412  120A  118A  21A1  120A  118A  	fcall	_set_time
  1553     0417  2C49               	goto	l2722
  1554     0418                     l2714:
  1555                           
  1556                           ;shank.c: 148: 
  1557     0418  120A  118A  25F4  120A  118A  	fcall	_time_display_screen
  1558                           
  1559                           ;shank.c: 149:     }
  1560     041D  2C49               	goto	l2722
  1561     041E                     l206:	
  1562                           ;shank.c: 150: }
  1563                           
  1564                           
  1565                           ;shank.c: 151: 
  1566     041E  1107               	bcf	7,2	;volatile
  1567                           
  1568                           ;shank.c: 152: void time_display_screen(void)
  1569     041F  1112               	bcf	18,2	;volatile
  1570                           
  1571                           ;shank.c: 153: {
  1572     0420  2C49               	goto	l2722
  1573     0421                     l207:	
  1574                           ;shank.c: 154: 
  1575                           
  1576                           
  1577                           ;shank.c: 155:     clcd_print(" TIME = ", (0x80 + 0));
  1578     0421  1107               	bcf	7,2	;volatile
  1579                           
  1580                           ;shank.c: 156: 
  1581     0422  1112               	bcf	18,2	;volatile
  1582     0423                     l2716:
  1583                           
  1584                           ;shank.c: 157:      clcd_putch( min/10 + '0', (0x80 + 9));
  1585     0423  3002               	movlw	2
  1586     0424  00C1               	movwf	_operation_flag
  1587     0425  3000               	movlw	0
  1588     0426  00C2               	movwf	_operation_flag+1
  1589                           
  1590                           ;shank.c: 158:     clcd_putch( min%10 + '0', (0x80 + 10));
  1591     0427  2C49               	goto	l2722
  1592     0428                     l2720:
  1593                           
  1594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1595                           ; Switch size 1, requested type "simple"
  1596                           ; Number of cases is 1, Range of values is 0 to 0
  1597                           ; switch strategies available:
  1598                           ; Name         Instructions Cycles
  1599                           ; simple_byte            4     3 (average)
  1600                           ; direct_byte           11     8 (fixed)
  1601                           ; jumptable            260     6 (fixed)
  1602                           ;	Chosen strategy is simple_byte
  1603     0428  1283               	bcf	3,5	;RP0=0, select bank0
  1604     0429  1303               	bcf	3,6	;RP1=0, select bank0
  1605     042A  0842               	movf	_operation_flag+1,w
  1606     042B  3A00               	xorlw	0	; case 0
  1607     042C  1903               	skipnz
  1608     042D  2C2F               	goto	l2760
  1609     042E  2C49               	goto	l2722
  1610     042F                     l2760:
  1611                           
  1612                           ; Switch size 1, requested type "simple"
  1613                           ; Number of cases is 8, Range of values is 1 to 10
  1614                           ; switch strategies available:
  1615                           ; Name         Instructions Cycles
  1616                           ; simple_byte           25    13 (average)
  1617                           ; direct_byte           41    11 (fixed)
  1618                           ; jumptable            263     9 (fixed)
  1619                           ;	Chosen strategy is simple_byte
  1620     042F  0841               	movf	_operation_flag,w
  1621     0430  3A01               	xorlw	1	; case 1
  1622     0431  1903               	skipnz
  1623     0432  2BB9               	goto	l2688
  1624     0433  3A03               	xorlw	3	; case 2
  1625     0434  1903               	skipnz
  1626     0435  2BCA               	goto	l2694
  1627     0436  3A01               	xorlw	1	; case 3
  1628     0437  1903               	skipnz
  1629     0438  2BDB               	goto	l2698
  1630     0439  3A07               	xorlw	7	; case 4
  1631     043A  1903               	skipnz
  1632     043B  2BD0               	goto	l2696
  1633     043C  3A01               	xorlw	1	; case 5
  1634     043D  1903               	skipnz
  1635     043E  2BE6               	goto	l2700
  1636     043F  3A02               	xorlw	2	; case 7
  1637     0440  1903               	skipnz
  1638     0441  2C18               	goto	l2714
  1639     0442  3A0E               	xorlw	14	; case 9
  1640     0443  1903               	skipnz
  1641     0444  2C1E               	goto	l206
  1642     0445  3A03               	xorlw	3	; case 10
  1643     0446  1903               	skipnz
  1644     0447  2C21               	goto	l207
  1645     0448  2C49               	goto	l2722
  1646     0449                     l2722:
  1647                           
  1648                           ;shank.c: 160: 
  1649     0449  300F               	movlw	15
  1650     044A  1283               	bcf	3,5	;RP0=0, select bank0
  1651     044B  1303               	bcf	3,6	;RP1=0, select bank0
  1652     044C  00B1               	movwf	main@reset_flag
  1653     044D  3000               	movlw	0
  1654     044E  00B2               	movwf	main@reset_flag+1
  1655     044F  2B00               	goto	l2618
  1656     0450  120A  118A  280C   	ljmp	start
  1657     0453                     __end_of_main:
  1658                           
  1659                           	psect	text1
  1660     05F4                     __ptext1:	
  1661 ;; *************** function _time_display_screen *****************
  1662 ;; Defined at:
  1663 ;;		line 165 in file "shank.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       0       0       0       0
  1678 ;;      Locals:         0       0       0       0       0
  1679 ;;      Temps:          0       3       0       0       0
  1680 ;;      Totals:         0       3       0       0       0
  1681 ;;Total ram usage:        3 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; Hardware stack levels required when called: 3
  1684 ;; This function calls:
  1685 ;;		___awdiv
  1686 ;;		___awmod
  1687 ;;		_clcd_print
  1688 ;;		_clcd_putch
  1689 ;;		_clear_screen
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695     05F4                     _time_display_screen:	
  1696                           ;psect for function _time_display_screen
  1697                           
  1698     05F4                     l2576:	
  1699                           ;incstack = 0
  1700                           ; Regs used in _time_display_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1701                           
  1702                           
  1703                           ;shank.c: 168:     clcd_print(" 6.Stop", (0xD0 + 0));
  1704     05F4  30B2               	movlw	low (STR_2| (0+32768))
  1705     05F5  00F6               	movwf	clcd_print@str
  1706     05F6  3085               	movlw	high (STR_2| (0+32768))
  1707     05F7  00F7               	movwf	clcd_print@str+1
  1708     05F8  3080               	movlw	128
  1709     05F9  00F8               	movwf	clcd_print@addr
  1710     05FA  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  1711     05FF                     l2578:
  1712                           
  1713                           ;shank.c: 170:     if(sec == 0 && min == 0)
  1714     05FF  3089               	movlw	137
  1715     0600  1283               	bcf	3,5	;RP0=0, select bank0
  1716     0601  1303               	bcf	3,6	;RP1=0, select bank0
  1717     0602  00A8               	movwf	clcd_putch@addr
  1718     0603  300A               	movlw	10
  1719     0604  00F2               	movwf	___awdiv@divisor
  1720     0605  3000               	movlw	0
  1721     0606  00F3               	movwf	___awdiv@divisor+1
  1722     0607  083F               	movf	_min,w
  1723     0608  00A9               	movwf	??_time_display_screen
  1724     0609  01AA               	clrf	??_time_display_screen+1
  1725     060A  0829               	movf	??_time_display_screen,w
  1726     060B  00F4               	movwf	___awdiv@dividend
  1727     060C  082A               	movf	??_time_display_screen+1,w
  1728     060D  00F5               	movwf	___awdiv@dividend+1
  1729     060E  120A  118A  2453  120A  118A  	fcall	___awdiv
  1730     0613  0872               	movf	?___awdiv,w
  1731     0614  3E30               	addlw	48
  1732     0615  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  1733     061A                     l2580:
  1734                           
  1735                           ;shank.c: 171:     {
  1736     061A  308A               	movlw	138
  1737     061B  1283               	bcf	3,5	;RP0=0, select bank0
  1738     061C  1303               	bcf	3,6	;RP1=0, select bank0
  1739     061D  00A8               	movwf	clcd_putch@addr
  1740     061E  300A               	movlw	10
  1741     061F  00A4               	movwf	___awmod@divisor
  1742     0620  3000               	movlw	0
  1743     0621  00A5               	movwf	___awmod@divisor+1
  1744     0622  083F               	movf	_min,w
  1745     0623  00A9               	movwf	??_time_display_screen
  1746     0624  01AA               	clrf	??_time_display_screen+1
  1747     0625  0829               	movf	??_time_display_screen,w
  1748     0626  00A6               	movwf	___awmod@dividend
  1749     0627  082A               	movf	??_time_display_screen+1,w
  1750     0628  00A7               	movwf	___awmod@dividend+1
  1751     0629  120A  158A  27A7  120A  118A  	fcall	___awmod
  1752     062E  1283               	bcf	3,5	;RP0=0, select bank0
  1753     062F  1303               	bcf	3,6	;RP1=0, select bank0
  1754     0630  0824               	movf	?___awmod,w
  1755     0631  3E30               	addlw	48
  1756     0632  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  1757     0637                     l2582:
  1758                           
  1759                           ;shank.c: 172:         clear_screen();
  1760     0637  308B               	movlw	139
  1761     0638  1283               	bcf	3,5	;RP0=0, select bank0
  1762     0639  1303               	bcf	3,6	;RP1=0, select bank0
  1763     063A  00A8               	movwf	clcd_putch@addr
  1764     063B  303A               	movlw	58
  1765     063C  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  1766     0641                     l2584:
  1767                           
  1768                           ;shank.c: 175:         _delay((unsigned long)((3000)*(20000000/4000.0)));
  1769     0641  308C               	movlw	140
  1770     0642  1283               	bcf	3,5	;RP0=0, select bank0
  1771     0643  1303               	bcf	3,6	;RP1=0, select bank0
  1772     0644  00A8               	movwf	clcd_putch@addr
  1773     0645  300A               	movlw	10
  1774     0646  00F2               	movwf	___awdiv@divisor
  1775     0647  3000               	movlw	0
  1776     0648  00F3               	movwf	___awdiv@divisor+1
  1777     0649  0840               	movf	_sec,w
  1778     064A  00A9               	movwf	??_time_display_screen
  1779     064B  01AA               	clrf	??_time_display_screen+1
  1780     064C  0829               	movf	??_time_display_screen,w
  1781     064D  00F4               	movwf	___awdiv@dividend
  1782     064E  082A               	movf	??_time_display_screen+1,w
  1783     064F  00F5               	movwf	___awdiv@dividend+1
  1784     0650  120A  118A  2453  120A  118A  	fcall	___awdiv
  1785     0655  0872               	movf	?___awdiv,w
  1786     0656  3E30               	addlw	48
  1787     0657  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  1788     065C                     l2586:
  1789                           
  1790                           ;shank.c: 176:         clear_screen();
  1791     065C  308D               	movlw	141
  1792     065D  1283               	bcf	3,5	;RP0=0, select bank0
  1793     065E  1303               	bcf	3,6	;RP1=0, select bank0
  1794     065F  00A8               	movwf	clcd_putch@addr
  1795     0660  300A               	movlw	10
  1796     0661  00A4               	movwf	___awmod@divisor
  1797     0662  3000               	movlw	0
  1798     0663  00A5               	movwf	___awmod@divisor+1
  1799     0664  0840               	movf	_sec,w
  1800     0665  00A9               	movwf	??_time_display_screen
  1801     0666  01AA               	clrf	??_time_display_screen+1
  1802     0667  0829               	movf	??_time_display_screen,w
  1803     0668  00A6               	movwf	___awmod@dividend
  1804     0669  082A               	movf	??_time_display_screen+1,w
  1805     066A  00A7               	movwf	___awmod@dividend+1
  1806     066B  120A  158A  27A7  120A  118A  	fcall	___awmod
  1807     0670  1283               	bcf	3,5	;RP0=0, select bank0
  1808     0671  1303               	bcf	3,6	;RP1=0, select bank0
  1809     0672  0824               	movf	?___awmod,w
  1810     0673  3E30               	addlw	48
  1811     0674  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  1812     0679                     l2588:
  1813                           
  1814                           ;shank.c: 179: 
  1815     0679  3043               	movlw	low (STR_3| (0+32768))
  1816     067A  00F6               	movwf	clcd_print@str
  1817     067B  3085               	movlw	high (STR_3| (0+32768))
  1818     067C  00F7               	movwf	clcd_print@str+1
  1819     067D  30C0               	movlw	192
  1820     067E  00F8               	movwf	clcd_print@addr
  1821     067F  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  1822     0684                     l2590:
  1823                           
  1824                           ;shank.c: 180:         TMR2ON = 0;
  1825     0684  30C4               	movlw	low (STR_4| (0+32768))
  1826     0685  00F6               	movwf	clcd_print@str
  1827     0686  3085               	movlw	high (STR_4| (0+32768))
  1828     0687  00F7               	movwf	clcd_print@str+1
  1829     0688  3090               	movlw	144
  1830     0689  00F8               	movwf	clcd_print@addr
  1831     068A  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  1832     068F                     l2592:
  1833                           
  1834                           ;shank.c: 181:         operation_flag = 0x02 ;
  1835     068F  30DD               	movlw	low (STR_5| (0+32768))
  1836     0690  00F6               	movwf	clcd_print@str
  1837     0691  3085               	movlw	high (STR_5| (0+32768))
  1838     0692  00F7               	movwf	clcd_print@str+1
  1839     0693  30D0               	movlw	208
  1840     0694  00F8               	movwf	clcd_print@addr
  1841     0695  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  1842     069A                     l2594:
  1843                           
  1844                           ;shank.c: 183:     }
  1845     069A  1283               	bcf	3,5	;RP0=0, select bank0
  1846     069B  1303               	bcf	3,6	;RP1=0, select bank0
  1847     069C  0840               	movf	_sec,w
  1848     069D  1D03               	btfss	3,2
  1849     069E  2EA0               	goto	u2401
  1850     069F  2EA1               	goto	u2400
  1851     06A0                     u2401:
  1852     06A0  2ED5               	goto	l213
  1853     06A1                     u2400:
  1854     06A1                     l2596:
  1855     06A1  083F               	movf	_min,w
  1856     06A2  1D03               	btfss	3,2
  1857     06A3  2EA5               	goto	u2411
  1858     06A4  2EA6               	goto	u2410
  1859     06A5                     u2411:
  1860     06A5  2ED5               	goto	l213
  1861     06A6                     u2410:
  1862     06A6                     l2598:
  1863                           
  1864                           ;shank.c: 184: };shank.c: 185: void clear_screen(void)
  1865     06A6  120A  158A  2647  120A  118A  	fcall	_clear_screen
  1866     06AB                     l2600:
  1867                           
  1868                           ;shank.c: 186: {
  1869     06AB  30A6               	movlw	low (STR_6| (0+32768))
  1870     06AC  00F6               	movwf	clcd_print@str
  1871     06AD  3085               	movlw	high (STR_6| (0+32768))
  1872     06AE  00F7               	movwf	clcd_print@str+1
  1873     06AF  30C0               	movlw	192
  1874     06B0  00F8               	movwf	clcd_print@addr
  1875     06B1  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  1876     06B6                     l2602:
  1877                           
  1878                           ;shank.c: 187:     clcd_write(0x01, 0) ;
  1879     06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1880     06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1881     06B8  1487               	bsf	7,1	;volatile
  1882     06B9                     l2604:
  1883                           
  1884                           ;shank.c: 188:     _delay((unsigned long)((500)*(20000000/4000000.0))) ;
  1885     06B9  304D               	movlw	77
  1886     06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1887     06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1888     06BC  00AB               	movwf	??_time_display_screen+2
  1889     06BD  3019               	movlw	25
  1890     06BE  00AA               	movwf	??_time_display_screen+1
  1891     06BF  304F               	movlw	79
  1892     06C0  00A9               	movwf	??_time_display_screen
  1893     06C1                     u2587:
  1894     06C1  0BA9               	decfsz	??_time_display_screen,f
  1895     06C2  2EC1               	goto	u2587
  1896     06C3  0BAA               	decfsz	??_time_display_screen+1,f
  1897     06C4  2EC1               	goto	u2587
  1898     06C5  0BAB               	decfsz	??_time_display_screen+2,f
  1899     06C6  2EC1               	goto	u2587
  1900     06C7                     l2606:
  1901                           
  1902                           ;shank.c: 189: }
  1903     06C7  120A  158A  2647  120A  118A  	fcall	_clear_screen
  1904     06CC                     l2608:
  1905                           
  1906                           ;shank.c: 190: void power_on_screen(void)
  1907     06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1908     06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1909     06CE  1087               	bcf	7,1	;volatile
  1910     06CF                     l2610:
  1911                           
  1912                           ;shank.c: 191: {
  1913     06CF  1107               	bcf	7,2	;volatile
  1914     06D0                     l2612:
  1915                           
  1916                           ;shank.c: 193: 
  1917     06D0  1112               	bcf	18,2	;volatile
  1918     06D1                     l2614:
  1919                           
  1920                           ;shank.c: 194:    for (i = 0; i < 16; i++)
  1921     06D1  3002               	movlw	2
  1922     06D2  00C1               	movwf	_operation_flag
  1923     06D3  3000               	movlw	0
  1924     06D4  00C2               	movwf	_operation_flag+1
  1925     06D5                     l213:
  1926     06D5  0008               	return
  1927     06D6                     __end_of_time_display_screen:
  1928                           
  1929                           	psect	text2
  1930     01A1                     __ptext2:	
  1931 ;; *************** function _set_time *****************
  1932 ;; Defined at:
  1933 ;;		line 327 in file "shank.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  key             1    wreg     unsigned char 
  1936 ;;  reset_flag      2    9[BANK0 ] int 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  key             1   13[BANK0 ] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1948 ;;      Params:         0       2       0       0       0
  1949 ;;      Locals:         0       1       0       0       0
  1950 ;;      Temps:          0       2       0       0       0
  1951 ;;      Totals:         0       5       0       0       0
  1952 ;;Total ram usage:        5 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 3
  1955 ;; This function calls:
  1956 ;;		___awdiv
  1957 ;;		___awmod
  1958 ;;		___bmul
  1959 ;;		_clcd_print
  1960 ;;		_clcd_putch
  1961 ;;		_clear_screen
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967     01A1                     _set_time:	
  1968                           ;psect for function _set_time
  1969                           
  1970                           
  1971                           ;incstack = 0
  1972                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1973                           ;set_time@key stored from wreg
  1974     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1975     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1976     01A3  00AD               	movwf	set_time@key
  1977     01A4                     l2428:
  1978                           
  1979                           ;shank.c: 327:     clcd_print("SET TIME (MM:SS)", (0x80 + 0));;shank.c: 328:     clcd_pr
      +                          int("TIME- ", (0xC0 + 0));;shank.c: 329: ;shank.c: 330:     clcd_print("*:CLEAR #:ENTER"
      +                          , (0xD0 + 0));;shank.c: 331: 
  1980     01A4  3010               	movlw	16
  1981     01A5  0629               	xorwf	set_time@reset_flag,w
  1982     01A6  042A               	iorwf	set_time@reset_flag+1,w
  1983     01A7  1D03               	btfss	3,2
  1984     01A8  29AA               	goto	u2121
  1985     01A9  29AB               	goto	u2120
  1986     01AA                     u2121:
  1987     01AA  29D5               	goto	l2440
  1988     01AB                     u2120:
  1989     01AB                     l2430:
  1990                           
  1991                           ;shank.c: 332:     };shank.c: 333: 
  1992     01AB  01BA               	clrf	set_time@key_count
  1993                           
  1994                           ;shank.c: 334:     if ((key != '*') && (key != '#') && (key != 0xFF))
  1995     01AC  01C0               	clrf	_sec
  1996                           
  1997                           ;shank.c: 335:     {
  1998     01AD  01BF               	clrf	_min
  1999                           
  2000                           ;shank.c: 336: 
  2001     01AE  01B9               	clrf	set_time@blink_pos
  2002                           
  2003                           ;shank.c: 337:         key_count++;
  2004     01AF  01B4               	clrf	set_time@wait
  2005     01B0  01B5               	clrf	set_time@wait+1
  2006                           
  2007                           ;shank.c: 338: 
  2008     01B1  01B8               	clrf	set_time@blink
  2009     01B2                     l2432:
  2010                           
  2011                           ;shank.c: 339:         if(key_count <= 2)
  2012     01B2  30FF               	movlw	255
  2013     01B3  00AD               	movwf	set_time@key
  2014     01B4                     l2434:
  2015                           
  2016                           ;shank.c: 340:         {
  2017     01B4  3011               	movlw	low (STR_19| (0+32768))
  2018     01B5  00F6               	movwf	clcd_print@str
  2019     01B6  3085               	movlw	high (STR_19| (0+32768))
  2020     01B7  00F7               	movwf	clcd_print@str+1
  2021     01B8  3080               	movlw	128
  2022     01B9  00F8               	movwf	clcd_print@addr
  2023     01BA  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  2024     01BF                     l2436:
  2025                           
  2026                           ;shank.c: 341:             sec = sec*10 + key;
  2027     01BF  30ED               	movlw	low (STR_20| (0+32768))
  2028     01C0  00F6               	movwf	clcd_print@str
  2029     01C1  3085               	movlw	high (STR_20| (0+32768))
  2030     01C2  00F7               	movwf	clcd_print@str+1
  2031     01C3  30C0               	movlw	192
  2032     01C4  00F8               	movwf	clcd_print@addr
  2033     01C5  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  2034     01CA                     l2438:
  2035                           
  2036                           ;shank.c: 343: 
  2037     01CA  3033               	movlw	low (STR_21| (0+32768))
  2038     01CB  00F6               	movwf	clcd_print@str
  2039     01CC  3085               	movlw	high (STR_21| (0+32768))
  2040     01CD  00F7               	movwf	clcd_print@str+1
  2041     01CE  30D0               	movlw	208
  2042     01CF  00F8               	movwf	clcd_print@addr
  2043     01D0  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  2044     01D5                     l2440:
  2045                           
  2046                           ;shank.c: 347:             min = min*10 + key;
  2047     01D5  302A               	movlw	42
  2048     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2049     01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2050     01D8  062D               	xorwf	set_time@key,w
  2051     01D9  1903               	btfsc	3,2
  2052     01DA  29DC               	goto	u2131
  2053     01DB  29DD               	goto	u2130
  2054     01DC                     u2131:
  2055     01DC  2A19               	goto	l2462
  2056     01DD                     u2130:
  2057     01DD                     l2442:
  2058     01DD  3023               	movlw	35
  2059     01DE  062D               	xorwf	set_time@key,w
  2060     01DF  1903               	btfsc	3,2
  2061     01E0  29E2               	goto	u2141
  2062     01E1  29E3               	goto	u2140
  2063     01E2                     u2141:
  2064     01E2  2A19               	goto	l2462
  2065     01E3                     u2140:
  2066     01E3                     l2444:
  2067     01E3  0A2D               	incf	set_time@key,w
  2068     01E4  1903               	btfsc	3,2
  2069     01E5  29E7               	goto	u2151
  2070     01E6  29E8               	goto	u2150
  2071     01E7                     u2151:
  2072     01E7  2A19               	goto	l2462
  2073     01E8                     u2150:
  2074     01E8                     l2446:
  2075                           
  2076                           ;shank.c: 348:             blink_pos = 1;;shank.c: 350: 
  2077     01E8  3001               	movlw	1
  2078     01E9  07BA               	addwf	set_time@key_count,f
  2079     01EA                     l2448:
  2080                           
  2081                           ;shank.c: 352:     else if(key == '*')
  2082     01EA  3003               	movlw	3
  2083     01EB  023A               	subwf	set_time@key_count,w
  2084     01EC  1803               	skipnc
  2085     01ED  29EF               	goto	u2161
  2086     01EE  29F0               	goto	u2160
  2087     01EF                     u2161:
  2088     01EF  29FE               	goto	l2454
  2089     01F0                     u2160:
  2090     01F0                     l2450:
  2091                           
  2092                           ;shank.c: 353:     {;shank.c: 354:       if( blink_pos == 0)
  2093     01F0  300A               	movlw	10
  2094     01F1  00F2               	movwf	___bmul@multiplicand
  2095     01F2  0840               	movf	_sec,w
  2096     01F3  120A  158A  266B  120A  118A  	fcall	___bmul
  2097     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2098     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2099     01FA  072D               	addwf	set_time@key,w
  2100     01FB  00C0               	movwf	_sec
  2101     01FC                     l2452:
  2102                           
  2103                           ;shank.c: 355:       {
  2104     01FC  01B9               	clrf	set_time@blink_pos
  2105                           
  2106                           ;shank.c: 357:           key_count = 0;
  2107     01FD  2A43               	goto	l2484
  2108     01FE                     l2454:
  2109     01FE  3003               	movlw	3
  2110     01FF  023A               	subwf	set_time@key_count,w
  2111     0200  1C03               	skipc
  2112     0201  2A03               	goto	u2171
  2113     0202  2A04               	goto	u2170
  2114     0203                     u2171:
  2115     0203  2A43               	goto	l2484
  2116     0204                     u2170:
  2117     0204                     l2456:
  2118     0204  3005               	movlw	5
  2119     0205  023A               	subwf	set_time@key_count,w
  2120     0206  1803               	skipnc
  2121     0207  2A09               	goto	u2181
  2122     0208  2A0A               	goto	u2180
  2123     0209                     u2181:
  2124     0209  2A43               	goto	l2484
  2125     020A                     u2180:
  2126     020A                     l2458:
  2127                           
  2128                           ;shank.c: 359:       else if( blink_pos == 1);shank.c: 360:       {
  2129     020A  300A               	movlw	10
  2130     020B  00F2               	movwf	___bmul@multiplicand
  2131     020C  083F               	movf	_min,w
  2132     020D  120A  158A  266B  120A  118A  	fcall	___bmul
  2133     0212  1283               	bcf	3,5	;RP0=0, select bank0
  2134     0213  1303               	bcf	3,6	;RP1=0, select bank0
  2135     0214  072D               	addwf	set_time@key,w
  2136     0215  00BF               	movwf	_min
  2137     0216                     l2460:
  2138                           
  2139                           ;shank.c: 361:         min = 0;
  2140     0216  3001               	movlw	1
  2141     0217  00B9               	movwf	set_time@blink_pos
  2142     0218  2A43               	goto	l2484
  2143     0219                     l2462:
  2144     0219  302A               	movlw	42
  2145     021A  062D               	xorwf	set_time@key,w
  2146     021B  1D03               	btfss	3,2
  2147     021C  2A1E               	goto	u2191
  2148     021D  2A1F               	goto	u2190
  2149     021E                     u2191:
  2150     021E  2A30               	goto	l2474
  2151     021F                     u2190:
  2152     021F                     l2464:
  2153                           
  2154                           ;shank.c: 366:     {;shank.c: 367:         clear_screen();
  2155     021F  0839               	movf	set_time@blink_pos,w
  2156     0220  1D03               	btfss	3,2
  2157     0221  2A23               	goto	u2201
  2158     0222  2A24               	goto	u2200
  2159     0223                     u2201:
  2160     0223  2A27               	goto	l2468
  2161     0224                     u2200:
  2162     0224                     l2466:
  2163                           
  2164                           ;shank.c: 368:         operation_flag = 0x07;;shank.c: 369:         RC2 = 1;
  2165     0224  01C0               	clrf	_sec
  2166                           
  2167                           ;shank.c: 370: 
  2168     0225  01BA               	clrf	set_time@key_count
  2169                           
  2170                           ;shank.c: 371:         TMR2ON = 1;
  2171     0226  2A43               	goto	l2484
  2172     0227                     l2468:
  2173     0227  0339               	decf	set_time@blink_pos,w
  2174     0228  1D03               	btfss	3,2
  2175     0229  2A2B               	goto	u2211
  2176     022A  2A2C               	goto	u2210
  2177     022B                     u2211:
  2178     022B  2A43               	goto	l2484
  2179     022C                     u2210:
  2180     022C                     l2470:
  2181                           
  2182                           ;shank.c: 373: ;shank.c: 374:     if(wait++ == 15)
  2183     022C  01BF               	clrf	_min
  2184     022D                     l2472:
  2185                           
  2186                           ;shank.c: 375:     {
  2187     022D  3002               	movlw	2
  2188     022E  00BA               	movwf	set_time@key_count
  2189     022F  2A43               	goto	l2484
  2190     0230                     l2474:
  2191     0230  3023               	movlw	35
  2192     0231  062D               	xorwf	set_time@key,w
  2193     0232  1D03               	btfss	3,2
  2194     0233  2A35               	goto	u2221
  2195     0234  2A36               	goto	u2220
  2196     0235                     u2221:
  2197     0235  2A43               	goto	l2484
  2198     0236                     u2220:
  2199     0236                     l2476:
  2200                           
  2201                           ;shank.c: 379: ;shank.c: 380:     clcd_putch( min/10 + '0', (0xC0 + 6));
  2202     0236  120A  158A  2647  120A  118A  	fcall	_clear_screen
  2203     023B                     l2478:
  2204                           
  2205                           ;shank.c: 381:     clcd_putch( min%10 + '0', (0xC0 + 7));
  2206     023B  3007               	movlw	7
  2207     023C  1283               	bcf	3,5	;RP0=0, select bank0
  2208     023D  1303               	bcf	3,6	;RP1=0, select bank0
  2209     023E  00C1               	movwf	_operation_flag
  2210     023F  3000               	movlw	0
  2211     0240  00C2               	movwf	_operation_flag+1
  2212     0241                     l2480:
  2213                           
  2214                           ;shank.c: 382:     clcd_putch(':', (0xC0 + 8));
  2215     0241  1507               	bsf	7,2	;volatile
  2216     0242                     l2482:
  2217                           
  2218                           ;shank.c: 384: 
  2219     0242  1512               	bsf	18,2	;volatile
  2220     0243                     l2484:
  2221                           
  2222                           ;shank.c: 387:     }
  2223     0243  3001               	movlw	1
  2224     0244  07B4               	addwf	set_time@wait,f
  2225     0245  1803               	skipnc
  2226     0246  0AB5               	incf	set_time@wait+1,f
  2227     0247  3000               	movlw	0
  2228     0248  07B5               	addwf	set_time@wait+1,f
  2229     0249  3010               	movlw	16
  2230     024A  0634               	xorwf	set_time@wait,w
  2231     024B  0435               	iorwf	set_time@wait+1,w
  2232     024C  1D03               	btfss	3,2
  2233     024D  2A4F               	goto	u2231
  2234     024E  2A50               	goto	u2230
  2235     024F                     u2231:
  2236     024F  2AD2               	goto	l2500
  2237     0250                     u2230:
  2238     0250                     l2486:
  2239                           
  2240                           ;shank.c: 388: ;shank.c: 389:      if(blink)
  2241     0250  01B4               	clrf	set_time@wait
  2242     0251  01B5               	clrf	set_time@wait+1
  2243     0252                     l2488:
  2244                           
  2245                           ;shank.c: 390:      {
  2246     0252  0838               	movf	set_time@blink,w
  2247     0253  1903               	btfsc	3,2
  2248     0254  2A56               	goto	u2241
  2249     0255  2A58               	goto	u2240
  2250     0256                     u2241:
  2251     0256  3001               	movlw	1
  2252     0257  2A59               	goto	u2250
  2253     0258                     u2240:
  2254     0258  3000               	movlw	0
  2255     0259                     u2250:
  2256     0259  00B8               	movwf	set_time@blink
  2257     025A                     l2490:
  2258                           
  2259                           ;shank.c: 393:              case 0:
  2260     025A  30C6               	movlw	198
  2261     025B  00A8               	movwf	clcd_putch@addr
  2262     025C  300A               	movlw	10
  2263     025D  00F2               	movwf	___awdiv@divisor
  2264     025E  3000               	movlw	0
  2265     025F  00F3               	movwf	___awdiv@divisor+1
  2266     0260  083F               	movf	_min,w
  2267     0261  00AB               	movwf	??_set_time
  2268     0262  01AC               	clrf	??_set_time+1
  2269     0263  082B               	movf	??_set_time,w
  2270     0264  00F4               	movwf	___awdiv@dividend
  2271     0265  082C               	movf	??_set_time+1,w
  2272     0266  00F5               	movwf	___awdiv@dividend+1
  2273     0267  120A  118A  2453  120A  118A  	fcall	___awdiv
  2274     026C  0872               	movf	?___awdiv,w
  2275     026D  3E30               	addlw	48
  2276     026E  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  2277     0273                     l2492:
  2278                           
  2279                           ;shank.c: 394:                  clcd_print(" ", (0xC0 + 9));
  2280     0273  30C7               	movlw	199
  2281     0274  1283               	bcf	3,5	;RP0=0, select bank0
  2282     0275  1303               	bcf	3,6	;RP1=0, select bank0
  2283     0276  00A8               	movwf	clcd_putch@addr
  2284     0277  300A               	movlw	10
  2285     0278  00A4               	movwf	___awmod@divisor
  2286     0279  3000               	movlw	0
  2287     027A  00A5               	movwf	___awmod@divisor+1
  2288     027B  083F               	movf	_min,w
  2289     027C  00AB               	movwf	??_set_time
  2290     027D  01AC               	clrf	??_set_time+1
  2291     027E  082B               	movf	??_set_time,w
  2292     027F  00A6               	movwf	___awmod@dividend
  2293     0280  082C               	movf	??_set_time+1,w
  2294     0281  00A7               	movwf	___awmod@dividend+1
  2295     0282  120A  158A  27A7  120A  118A  	fcall	___awmod
  2296     0287  1283               	bcf	3,5	;RP0=0, select bank0
  2297     0288  1303               	bcf	3,6	;RP1=0, select bank0
  2298     0289  0824               	movf	?___awmod,w
  2299     028A  3E30               	addlw	48
  2300     028B  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  2301     0290                     l2494:
  2302                           
  2303                           ;shank.c: 395:                 break;
  2304     0290  30C8               	movlw	200
  2305     0291  1283               	bcf	3,5	;RP0=0, select bank0
  2306     0292  1303               	bcf	3,6	;RP1=0, select bank0
  2307     0293  00A8               	movwf	clcd_putch@addr
  2308     0294  303A               	movlw	58
  2309     0295  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  2310     029A                     l2496:
  2311                           
  2312                           ;shank.c: 398:                  break;
  2313     029A  30C9               	movlw	201
  2314     029B  1283               	bcf	3,5	;RP0=0, select bank0
  2315     029C  1303               	bcf	3,6	;RP1=0, select bank0
  2316     029D  00A8               	movwf	clcd_putch@addr
  2317     029E  300A               	movlw	10
  2318     029F  00F2               	movwf	___awdiv@divisor
  2319     02A0  3000               	movlw	0
  2320     02A1  00F3               	movwf	___awdiv@divisor+1
  2321     02A2  0840               	movf	_sec,w
  2322     02A3  00AB               	movwf	??_set_time
  2323     02A4  01AC               	clrf	??_set_time+1
  2324     02A5  082B               	movf	??_set_time,w
  2325     02A6  00F4               	movwf	___awdiv@dividend
  2326     02A7  082C               	movf	??_set_time+1,w
  2327     02A8  00F5               	movwf	___awdiv@dividend+1
  2328     02A9  120A  118A  2453  120A  118A  	fcall	___awdiv
  2329     02AE  0872               	movf	?___awdiv,w
  2330     02AF  3E30               	addlw	48
  2331     02B0  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  2332     02B5                     l2498:
  2333                           
  2334                           ;shank.c: 399:          }
  2335     02B5  30CA               	movlw	202
  2336     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2337     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2338     02B8  00A8               	movwf	clcd_putch@addr
  2339     02B9  300A               	movlw	10
  2340     02BA  00A4               	movwf	___awmod@divisor
  2341     02BB  3000               	movlw	0
  2342     02BC  00A5               	movwf	___awmod@divisor+1
  2343     02BD  0840               	movf	_sec,w
  2344     02BE  00AB               	movwf	??_set_time
  2345     02BF  01AC               	clrf	??_set_time+1
  2346     02C0  082B               	movf	??_set_time,w
  2347     02C1  00A6               	movwf	___awmod@dividend
  2348     02C2  082C               	movf	??_set_time+1,w
  2349     02C3  00A7               	movwf	___awmod@dividend+1
  2350     02C4  120A  158A  27A7  120A  118A  	fcall	___awmod
  2351     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2352     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2353     02CB  0824               	movf	?___awmod,w
  2354     02CC  3E30               	addlw	48
  2355     02CD  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  2356     02D2                     l2500:
  2357                           
  2358                           ;shank.c: 402:      }
  2359     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2360     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2361     02D4  0838               	movf	set_time@blink,w
  2362     02D5  1903               	btfsc	3,2
  2363     02D6  2AD8               	goto	u2261
  2364     02D7  2AD9               	goto	u2260
  2365     02D8                     u2261:
  2366     02D8  2AFA               	goto	l279
  2367     02D9                     u2260:
  2368     02D9  2AF2               	goto	l2510
  2369     02DA                     l2504:
  2370     02DA  30F2               	movlw	low ((STR_20+5)| (0+32768))
  2371     02DB  00F6               	movwf	clcd_print@str
  2372     02DC  3085               	movlw	high ((STR_20+5)| (0+32768))
  2373     02DD  00F7               	movwf	clcd_print@str+1
  2374     02DE  30C9               	movlw	201
  2375     02DF  00F8               	movwf	clcd_print@addr
  2376     02E0  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  2377     02E5  2AFA               	goto	l279
  2378     02E6                     l2506:
  2379     02E6  30F2               	movlw	low ((STR_20+5)| (0+32768))
  2380     02E7  00F6               	movwf	clcd_print@str
  2381     02E8  3085               	movlw	high ((STR_20+5)| (0+32768))
  2382     02E9  00F7               	movwf	clcd_print@str+1
  2383     02EA  30C6               	movlw	198
  2384     02EB  00F8               	movwf	clcd_print@addr
  2385     02EC  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  2386     02F1  2AFA               	goto	l279
  2387     02F2                     l2510:
  2388     02F2  0839               	movf	set_time@blink_pos,w
  2389                           
  2390                           ; Switch size 1, requested type "simple"
  2391                           ; Number of cases is 2, Range of values is 0 to 1
  2392                           ; switch strategies available:
  2393                           ; Name         Instructions Cycles
  2394                           ; simple_byte            7     4 (average)
  2395                           ; direct_byte           14     8 (fixed)
  2396                           ; jumptable            260     6 (fixed)
  2397                           ;	Chosen strategy is simple_byte
  2398     02F3  3A00               	xorlw	0	; case 0
  2399     02F4  1903               	skipnz
  2400     02F5  2ADA               	goto	l2504
  2401     02F6  3A01               	xorlw	1	; case 1
  2402     02F7  1903               	skipnz
  2403     02F8  2AE6               	goto	l2506
  2404     02F9  2AFA               	goto	l279
  2405     02FA                     l279:
  2406     02FA  0008               	return
  2407     02FB                     __end_of_set_time:
  2408                           
  2409                           	psect	text3
  2410     0034                     __ptext3:	
  2411 ;; *************** function _set_temp *****************
  2412 ;; Defined at:
  2413 ;;		line 241 in file "shank.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  key             1    wreg     unsigned char 
  2416 ;;  reset_flag      2    9[BANK0 ] int 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  key             1   13[BANK0 ] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2428 ;;      Params:         0       2       0       0       0
  2429 ;;      Locals:         0       1       0       0       0
  2430 ;;      Temps:          0       2       0       0       0
  2431 ;;      Totals:         0       5       0       0       0
  2432 ;;Total ram usage:        5 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 3
  2435 ;; This function calls:
  2436 ;;		___awdiv
  2437 ;;		___awmod
  2438 ;;		___bmul
  2439 ;;		_clcd_print
  2440 ;;		_clcd_putch
  2441 ;;		_clear_screen
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447     0034                     _set_temp:	
  2448                           ;psect for function _set_temp
  2449                           
  2450                           
  2451                           ;incstack = 0
  2452                           ; Regs used in _set_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2453                           ;set_temp@key stored from wreg
  2454     0034  1283               	bcf	3,5	;RP0=0, select bank0
  2455     0035  1303               	bcf	3,6	;RP1=0, select bank0
  2456     0036  00AD               	movwf	set_temp@key
  2457     0037                     l2512:
  2458                           
  2459                           ;shank.c: 241:         clcd_print(" TEMP = ", (0xC0 + 0));;shank.c: 242: ;shank.c: 243: 
      +                                  clcd_print("*:CLEAR  #:ENTER", (0xD0 + 0));;shank.c: 244:          };shank.c: 24
      +                          5: 
  2460     0037  3010               	movlw	16
  2461     0038  0629               	xorwf	set_temp@reset_flag,w
  2462     0039  042A               	iorwf	set_temp@reset_flag+1,w
  2463     003A  1D03               	btfss	3,2
  2464     003B  283D               	goto	u2271
  2465     003C  283E               	goto	u2270
  2466     003D                     u2271:
  2467     003D  2867               	goto	l2524
  2468     003E                     u2270:
  2469     003E                     l2514:
  2470                           
  2471                           ;shank.c: 246: ;shank.c: 247:     if ((key != '*') && (key != '#') && (key != 0xFF))
  2472     003E  01BD               	clrf	set_temp@key_count
  2473                           
  2474                           ;shank.c: 248:     {
  2475     003F  01B6               	clrf	set_temp@wait
  2476     0040  01B7               	clrf	set_temp@wait+1
  2477                           
  2478                           ;shank.c: 249: 
  2479     0041  01BC               	clrf	set_temp@blink
  2480                           
  2481                           ;shank.c: 250:         key_count++;
  2482     0042  01BE               	clrf	_flag
  2483                           
  2484                           ;shank.c: 251: 
  2485     0043  01BB               	clrf	set_temp@temp
  2486     0044                     l2516:
  2487                           
  2488                           ;shank.c: 252:         if(key_count <= 3)
  2489     0044  30FF               	movlw	255
  2490     0045  00AD               	movwf	set_temp@key
  2491     0046                     l2518:
  2492                           
  2493                           ;shank.c: 253:         {
  2494     0046  3062               	movlw	low (STR_13| (0+32768))
  2495     0047  00F6               	movwf	clcd_print@str
  2496     0048  3085               	movlw	high (STR_13| (0+32768))
  2497     0049  00F7               	movwf	clcd_print@str+1
  2498     004A  3080               	movlw	128
  2499     004B  00F8               	movwf	clcd_print@addr
  2500     004C  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  2501     0051                     l2520:
  2502                           
  2503                           ;shank.c: 254:             temp = temp*10 + key;
  2504     0051  30BB               	movlw	low (STR_14| (0+32768))
  2505     0052  00F6               	movwf	clcd_print@str
  2506     0053  3085               	movlw	high (STR_14| (0+32768))
  2507     0054  00F7               	movwf	clcd_print@str+1
  2508     0055  30C0               	movlw	192
  2509     0056  00F8               	movwf	clcd_print@addr
  2510     0057  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  2511     005C                     l2522:
  2512                           
  2513                           ;shank.c: 256:         }
  2514     005C  3022               	movlw	low (STR_15| (0+32768))
  2515     005D  00F6               	movwf	clcd_print@str
  2516     005E  3085               	movlw	high (STR_15| (0+32768))
  2517     005F  00F7               	movwf	clcd_print@str+1
  2518     0060  30D0               	movlw	208
  2519     0061  00F8               	movwf	clcd_print@addr
  2520     0062  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  2521     0067                     l2524:
  2522                           
  2523                           ;shank.c: 260:     {
  2524     0067  302A               	movlw	42
  2525     0068  1283               	bcf	3,5	;RP0=0, select bank0
  2526     0069  1303               	bcf	3,6	;RP1=0, select bank0
  2527     006A  062D               	xorwf	set_temp@key,w
  2528     006B  1903               	btfsc	3,2
  2529     006C  286E               	goto	u2281
  2530     006D  286F               	goto	u2280
  2531     006E                     u2281:
  2532     006E  288F               	goto	l2536
  2533     006F                     u2280:
  2534     006F                     l2526:
  2535     006F  3023               	movlw	35
  2536     0070  062D               	xorwf	set_temp@key,w
  2537     0071  1903               	btfsc	3,2
  2538     0072  2874               	goto	u2291
  2539     0073  2875               	goto	u2290
  2540     0074                     u2291:
  2541     0074  288F               	goto	l2536
  2542     0075                     u2290:
  2543     0075                     l2528:
  2544     0075  0A2D               	incf	set_temp@key,w
  2545     0076  1903               	btfsc	3,2
  2546     0077  2879               	goto	u2301
  2547     0078  287A               	goto	u2300
  2548     0079                     u2301:
  2549     0079  288F               	goto	l2536
  2550     007A                     u2300:
  2551     007A                     l2530:
  2552                           
  2553                           ;shank.c: 261:         temp =0;;shank.c: 263:     }
  2554     007A  3001               	movlw	1
  2555     007B  07BD               	addwf	set_temp@key_count,f
  2556     007C                     l2532:
  2557                           
  2558                           ;shank.c: 265:     {
  2559     007C  3004               	movlw	4
  2560     007D  023D               	subwf	set_temp@key_count,w
  2561     007E  1803               	skipnc
  2562     007F  2881               	goto	u2311
  2563     0080  2882               	goto	u2310
  2564     0081                     u2311:
  2565     0081  2915               	goto	l2560
  2566     0082                     u2310:
  2567     0082                     l2534:
  2568                           
  2569                           ;shank.c: 266:         clear_screen();;shank.c: 267: 
  2570     0082  300A               	movlw	10
  2571     0083  00F2               	movwf	___bmul@multiplicand
  2572     0084  083B               	movf	set_temp@temp,w
  2573     0085  120A  158A  266B  120A  118A  	fcall	___bmul
  2574     008A  1283               	bcf	3,5	;RP0=0, select bank0
  2575     008B  1303               	bcf	3,6	;RP1=0, select bank0
  2576     008C  072D               	addwf	set_temp@key,w
  2577     008D  00BB               	movwf	set_temp@temp
  2578     008E  2915               	goto	l2560
  2579     008F                     l2536:
  2580     008F  302A               	movlw	42
  2581     0090  062D               	xorwf	set_temp@key,w
  2582     0091  1D03               	btfss	3,2
  2583     0092  2894               	goto	u2321
  2584     0093  2895               	goto	u2320
  2585     0094                     u2321:
  2586     0094  2898               	goto	l2540
  2587     0095                     u2320:
  2588     0095                     l2538:
  2589                           
  2590                           ;shank.c: 273:         {;shank.c: 274: 
  2591     0095  01BB               	clrf	set_temp@temp
  2592                           
  2593                           ;shank.c: 275: 
  2594     0096  01BD               	clrf	set_temp@key_count
  2595                           
  2596                           ;shank.c: 276: 
  2597     0097  2915               	goto	l2560
  2598     0098                     l2540:
  2599     0098  3023               	movlw	35
  2600     0099  062D               	xorwf	set_temp@key,w
  2601     009A  1D03               	btfss	3,2
  2602     009B  289D               	goto	u2331
  2603     009C  289E               	goto	u2330
  2604     009D                     u2331:
  2605     009D  2915               	goto	l2560
  2606     009E                     u2330:
  2607     009E                     l2542:
  2608                           
  2609                           ;shank.c: 278:     clcd_putch((sec%10) + '0', (0x90 + 13));;shank.c: 279:     }
  2610     009E  120A  158A  2647  120A  118A  	fcall	_clear_screen
  2611     00A3                     l2544:
  2612                           
  2613                           ;shank.c: 281: 
  2614     00A3  307F               	movlw	low (STR_16| (0+32768))
  2615     00A4  00F6               	movwf	clcd_print@str
  2616     00A5  3085               	movlw	high (STR_16| (0+32768))
  2617     00A6  00F7               	movwf	clcd_print@str+1
  2618     00A7  3080               	movlw	128
  2619     00A8  00F8               	movwf	clcd_print@addr
  2620     00A9  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  2621     00AE                     l2546:
  2622                           
  2623                           ;shank.c: 282:         if(sec == 0)
  2624     00AE  309A               	movlw	low (STR_17| (0+32768))
  2625     00AF  00F6               	movwf	clcd_print@str
  2626     00B0  3085               	movlw	high (STR_17| (0+32768))
  2627     00B1  00F7               	movwf	clcd_print@str+1
  2628     00B2  3090               	movlw	144
  2629     00B3  00F8               	movwf	clcd_print@addr
  2630     00B4  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  2631     00B9                     l2548:
  2632                           
  2633                           ;shank.c: 283:         {
  2634     00B9  1283               	bcf	3,5	;RP0=0, select bank0
  2635     00BA  1303               	bcf	3,6	;RP1=0, select bank0
  2636     00BB  1512               	bsf	18,2	;volatile
  2637     00BC                     l2550:
  2638                           
  2639                           ;shank.c: 284:             flag = 1;
  2640     00BC  3012               	movlw	18
  2641     00BD  00C0               	movwf	_sec
  2642                           
  2643                           ;shank.c: 285:             TMR2ON = 0;
  2644     00BE  2906               	goto	l2554
  2645     00BF                     l2552:
  2646                           
  2647                           ;shank.c: 286: ;shank.c: 290:         }
  2648     00BF  309C               	movlw	156
  2649     00C0  00A8               	movwf	clcd_putch@addr
  2650     00C1  300A               	movlw	10
  2651     00C2  00A4               	movwf	___awmod@divisor
  2652     00C3  3000               	movlw	0
  2653     00C4  00A5               	movwf	___awmod@divisor+1
  2654     00C5  300A               	movlw	10
  2655     00C6  00F2               	movwf	___awdiv@divisor
  2656     00C7  3000               	movlw	0
  2657     00C8  00F3               	movwf	___awdiv@divisor+1
  2658     00C9  0840               	movf	_sec,w
  2659     00CA  00AB               	movwf	??_set_temp
  2660     00CB  01AC               	clrf	??_set_temp+1
  2661     00CC  082B               	movf	??_set_temp,w
  2662     00CD  00F4               	movwf	___awdiv@dividend
  2663     00CE  082C               	movf	??_set_temp+1,w
  2664     00CF  00F5               	movwf	___awdiv@dividend+1
  2665     00D0  120A  118A  2453  120A  118A  	fcall	___awdiv
  2666     00D5  0873               	movf	?___awdiv+1,w
  2667     00D6  1283               	bcf	3,5	;RP0=0, select bank0
  2668     00D7  1303               	bcf	3,6	;RP1=0, select bank0
  2669     00D8  00A7               	movwf	___awmod@dividend+1
  2670     00D9  0872               	movf	?___awdiv,w
  2671     00DA  00A6               	movwf	___awmod@dividend
  2672     00DB  120A  158A  27A7  120A  118A  	fcall	___awmod
  2673     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2674     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2675     00E2  0824               	movf	?___awmod,w
  2676     00E3  3E30               	addlw	48
  2677     00E4  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  2678                           
  2679                           ;shank.c: 291: 
  2680     00E9  309D               	movlw	157
  2681     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  2682     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  2683     00EC  00A8               	movwf	clcd_putch@addr
  2684     00ED  300A               	movlw	10
  2685     00EE  00A4               	movwf	___awmod@divisor
  2686     00EF  3000               	movlw	0
  2687     00F0  00A5               	movwf	___awmod@divisor+1
  2688     00F1  0840               	movf	_sec,w
  2689     00F2  00AB               	movwf	??_set_temp
  2690     00F3  01AC               	clrf	??_set_temp+1
  2691     00F4  082B               	movf	??_set_temp,w
  2692     00F5  00A6               	movwf	___awmod@dividend
  2693     00F6  082C               	movf	??_set_temp+1,w
  2694     00F7  00A7               	movwf	___awmod@dividend+1
  2695     00F8  120A  158A  27A7  120A  118A  	fcall	___awmod
  2696     00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2697     00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2698     00FF  0824               	movf	?___awmod,w
  2699     0100  3E30               	addlw	48
  2700     0101  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  2701     0106                     l2554:
  2702                           
  2703                           ;shank.c: 285:             TMR2ON = 0;
  2704     0106  1283               	bcf	3,5	;RP0=0, select bank0
  2705     0107  1303               	bcf	3,6	;RP1=0, select bank0
  2706     0108  0840               	movf	_sec,w
  2707     0109  1D03               	btfss	3,2
  2708     010A  290C               	goto	u2341
  2709     010B  290D               	goto	u2340
  2710     010C                     u2341:
  2711     010C  28BF               	goto	l2552
  2712     010D                     u2340:
  2713     010D                     l2556:
  2714                           
  2715                           ;shank.c: 295:     {
  2716     010D  0840               	movf	_sec,w
  2717     010E  1D03               	btfss	3,2
  2718     010F  2911               	goto	u2351
  2719     0110  2912               	goto	u2350
  2720     0111                     u2351:
  2721     0111  2915               	goto	l2560
  2722     0112                     u2350:
  2723     0112                     l2558:
  2724                           
  2725                           ;shank.c: 296:       wait = 0;;shank.c: 297:       blink = !blink;
  2726     0112  3001               	movlw	1
  2727     0113  00BE               	movwf	_flag
  2728                           
  2729                           ;shank.c: 298: 
  2730     0114  1112               	bcf	18,2	;volatile
  2731     0115                     l2560:
  2732                           
  2733                           ;shank.c: 307:      clcd_print(" ", (0xC0 + 8));
  2734     0115  3001               	movlw	1
  2735     0116  07B6               	addwf	set_temp@wait,f
  2736     0117  1803               	skipnc
  2737     0118  0AB7               	incf	set_temp@wait+1,f
  2738     0119  3000               	movlw	0
  2739     011A  07B7               	addwf	set_temp@wait+1,f
  2740     011B  3010               	movlw	16
  2741     011C  0636               	xorwf	set_temp@wait,w
  2742     011D  0437               	iorwf	set_temp@wait+1,w
  2743     011E  1D03               	btfss	3,2
  2744     011F  2921               	goto	u2361
  2745     0120  2922               	goto	u2360
  2746     0121                     u2361:
  2747     0121  298E               	goto	l2572
  2748     0122                     u2360:
  2749     0122                     l2562:
  2750                           
  2751                           ;shank.c: 308: ;shank.c: 309: 
  2752     0122  01B6               	clrf	set_temp@wait
  2753     0123  01B7               	clrf	set_temp@wait+1
  2754     0124                     l2564:
  2755                           
  2756                           ;shank.c: 310: 
  2757     0124  083C               	movf	set_temp@blink,w
  2758     0125  1903               	btfsc	3,2
  2759     0126  2928               	goto	u2371
  2760     0127  292A               	goto	u2370
  2761     0128                     u2371:
  2762     0128  3001               	movlw	1
  2763     0129  292B               	goto	u2380
  2764     012A                     u2370:
  2765     012A  3000               	movlw	0
  2766     012B                     u2380:
  2767     012B  00BC               	movwf	set_temp@blink
  2768     012C                     l2566:
  2769                           
  2770                           ;shank.c: 313:  }
  2771     012C  30C8               	movlw	200
  2772     012D  00A8               	movwf	clcd_putch@addr
  2773     012E  3064               	movlw	100
  2774     012F  00F2               	movwf	___awdiv@divisor
  2775     0130  3000               	movlw	0
  2776     0131  00F3               	movwf	___awdiv@divisor+1
  2777     0132  083B               	movf	set_temp@temp,w
  2778     0133  00AB               	movwf	??_set_temp
  2779     0134  01AC               	clrf	??_set_temp+1
  2780     0135  082B               	movf	??_set_temp,w
  2781     0136  00F4               	movwf	___awdiv@dividend
  2782     0137  082C               	movf	??_set_temp+1,w
  2783     0138  00F5               	movwf	___awdiv@dividend+1
  2784     0139  120A  118A  2453  120A  118A  	fcall	___awdiv
  2785     013E  0872               	movf	?___awdiv,w
  2786     013F  3E30               	addlw	48
  2787     0140  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  2788     0145                     l2568:
  2789                           
  2790                           ;shank.c: 314: void set_time(unsigned char key, int reset_flag )
  2791     0145  30C9               	movlw	201
  2792     0146  1283               	bcf	3,5	;RP0=0, select bank0
  2793     0147  1303               	bcf	3,6	;RP1=0, select bank0
  2794     0148  00A8               	movwf	clcd_putch@addr
  2795     0149  300A               	movlw	10
  2796     014A  00A4               	movwf	___awmod@divisor
  2797     014B  3000               	movlw	0
  2798     014C  00A5               	movwf	___awmod@divisor+1
  2799     014D  300A               	movlw	10
  2800     014E  00F2               	movwf	___awdiv@divisor
  2801     014F  3000               	movlw	0
  2802     0150  00F3               	movwf	___awdiv@divisor+1
  2803     0151  083B               	movf	set_temp@temp,w
  2804     0152  00AB               	movwf	??_set_temp
  2805     0153  01AC               	clrf	??_set_temp+1
  2806     0154  082B               	movf	??_set_temp,w
  2807     0155  00F4               	movwf	___awdiv@dividend
  2808     0156  082C               	movf	??_set_temp+1,w
  2809     0157  00F5               	movwf	___awdiv@dividend+1
  2810     0158  120A  118A  2453  120A  118A  	fcall	___awdiv
  2811     015D  0873               	movf	?___awdiv+1,w
  2812     015E  1283               	bcf	3,5	;RP0=0, select bank0
  2813     015F  1303               	bcf	3,6	;RP1=0, select bank0
  2814     0160  00A7               	movwf	___awmod@dividend+1
  2815     0161  0872               	movf	?___awdiv,w
  2816     0162  00A6               	movwf	___awmod@dividend
  2817     0163  120A  158A  27A7  120A  118A  	fcall	___awmod
  2818     0168  1283               	bcf	3,5	;RP0=0, select bank0
  2819     0169  1303               	bcf	3,6	;RP1=0, select bank0
  2820     016A  0824               	movf	?___awmod,w
  2821     016B  3E30               	addlw	48
  2822     016C  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  2823     0171                     l2570:
  2824                           
  2825                           ;shank.c: 315: {
  2826     0171  30CA               	movlw	202
  2827     0172  1283               	bcf	3,5	;RP0=0, select bank0
  2828     0173  1303               	bcf	3,6	;RP1=0, select bank0
  2829     0174  00A8               	movwf	clcd_putch@addr
  2830     0175  300A               	movlw	10
  2831     0176  00A4               	movwf	___awmod@divisor
  2832     0177  3000               	movlw	0
  2833     0178  00A5               	movwf	___awmod@divisor+1
  2834     0179  083B               	movf	set_temp@temp,w
  2835     017A  00AB               	movwf	??_set_temp
  2836     017B  01AC               	clrf	??_set_temp+1
  2837     017C  082B               	movf	??_set_temp,w
  2838     017D  00A6               	movwf	___awmod@dividend
  2839     017E  082C               	movf	??_set_temp+1,w
  2840     017F  00A7               	movwf	___awmod@dividend+1
  2841     0180  120A  158A  27A7  120A  118A  	fcall	___awmod
  2842     0185  1283               	bcf	3,5	;RP0=0, select bank0
  2843     0186  1303               	bcf	3,6	;RP1=0, select bank0
  2844     0187  0824               	movf	?___awmod,w
  2845     0188  3E30               	addlw	48
  2846     0189  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  2847     018E                     l2572:
  2848                           
  2849                           ;shank.c: 318:     if( reset_flag == 0x10 )
  2850     018E  1283               	bcf	3,5	;RP0=0, select bank0
  2851     018F  1303               	bcf	3,6	;RP1=0, select bank0
  2852     0190  083C               	movf	set_temp@blink,w
  2853     0191  1903               	btfsc	3,2
  2854     0192  2994               	goto	u2391
  2855     0193  2995               	goto	u2390
  2856     0194                     u2391:
  2857     0194  29A0               	goto	l250
  2858     0195                     u2390:
  2859     0195                     l2574:
  2860                           
  2861                           ;shank.c: 319:     {;shank.c: 320:        key_count = 0;
  2862     0195  30F2               	movlw	low ((STR_20+5)| (0+32768))
  2863     0196  00F6               	movwf	clcd_print@str
  2864     0197  3085               	movlw	high ((STR_20+5)| (0+32768))
  2865     0198  00F7               	movwf	clcd_print@str+1
  2866     0199  30C8               	movlw	200
  2867     019A  00F8               	movwf	clcd_print@addr
  2868     019B  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  2869     01A0                     l250:
  2870     01A0  0008               	return
  2871     01A1                     __end_of_set_temp:
  2872                           
  2873                           	psect	text4
  2874     0E47                     __ptext4:	
  2875 ;; *************** function _clear_screen *****************
  2876 ;; Defined at:
  2877 ;;		line 198 in file "shank.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0, pclath, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2891 ;;      Params:         0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0
  2893 ;;      Temps:          2       0       0       0       0
  2894 ;;      Totals:         2       0       0       0       0
  2895 ;;Total ram usage:        2 bytes
  2896 ;; Hardware stack levels used: 1
  2897 ;; Hardware stack levels required when called: 2
  2898 ;; This function calls:
  2899 ;;		_clcd_write
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;;		_time_display_screen
  2903 ;;		_set_temp
  2904 ;;		_set_time
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908     0E47                     _clear_screen:	
  2909                           ;psect for function _clear_screen
  2910                           
  2911     0E47                     l2292:	
  2912                           ;incstack = 0
  2913                           ; Regs used in _clear_screen: [wreg+status,2+status,0+pclath+cstack]
  2914                           
  2915                           
  2916                           ;shank.c: 200:    }
  2917     0E47  01F2               	clrf	clcd_write@mode
  2918     0E48  3001               	movlw	1
  2919     0E49  120A  118A  24B8  120A  158A  	fcall	_clcd_write
  2920     0E4E                     l2294:
  2921                           
  2922                           ;shank.c: 201: 
  2923     0E4E  3004               	movlw	4
  2924     0E4F  00F7               	movwf	??_clear_screen+1
  2925     0E50  303D               	movlw	61
  2926     0E51  00F6               	movwf	??_clear_screen
  2927     0E52                     u2597:
  2928     0E52  0BF6               	decfsz	??_clear_screen,f
  2929     0E53  2E52               	goto	u2597
  2930     0E54  0BF7               	decfsz	??_clear_screen+1,f
  2931     0E55  2E52               	goto	u2597
  2932     0E56  2E57               	nop2
  2933     0E57                     l216:
  2934     0E57  0008               	return
  2935     0E58                     __end_of_clear_screen:
  2936                           
  2937                           	psect	text5
  2938     0E6B                     __ptext5:	
  2939 ;; *************** function ___bmul *****************
  2940 ;; Defined at:
  2941 ;;		line 4 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul8.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  multiplier      1    wreg     unsigned char 
  2944 ;;  multiplicand    1    2[COMMON] unsigned char 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  multiplier      1    4[COMMON] unsigned char 
  2947 ;;  product         1    3[COMMON] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      unsigned char 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2957 ;;      Params:         1       0       0       0       0
  2958 ;;      Locals:         2       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0
  2960 ;;      Totals:         3       0       0       0       0
  2961 ;;Total ram usage:        3 bytes
  2962 ;; Hardware stack levels used: 1
  2963 ;; Hardware stack levels required when called: 1
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_set_temp
  2968 ;;		_set_time
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972     0E6B                     ___bmul:	
  2973                           ;psect for function ___bmul
  2974                           
  2975                           
  2976                           ;incstack = 0
  2977                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2978                           ;___bmul@multiplier stored from wreg
  2979     0E6B  00F4               	movwf	___bmul@multiplier
  2980     0E6C                     l1706:
  2981     0E6C  01F3               	clrf	___bmul@product
  2982     0E6D                     l1708:
  2983     0E6D  1C74               	btfss	___bmul@multiplier,0
  2984     0E6E  2E70               	goto	u1101
  2985     0E6F  2E71               	goto	u1100
  2986     0E70                     u1101:
  2987     0E70  2E73               	goto	l1712
  2988     0E71                     u1100:
  2989     0E71                     l1710:
  2990     0E71  0872               	movf	___bmul@multiplicand,w
  2991     0E72  07F3               	addwf	___bmul@product,f
  2992     0E73                     l1712:
  2993     0E73  1003               	clrc
  2994     0E74  0DF2               	rlf	___bmul@multiplicand,f
  2995     0E75                     l1714:
  2996     0E75  1003               	clrc
  2997     0E76  0CF4               	rrf	___bmul@multiplier,f
  2998     0E77  0874               	movf	___bmul@multiplier,w
  2999     0E78  1D03               	btfss	3,2
  3000     0E79  2E7B               	goto	u1111
  3001     0E7A  2E7C               	goto	u1110
  3002     0E7B                     u1111:
  3003     0E7B  2E6D               	goto	l1708
  3004     0E7C                     u1110:
  3005     0E7C                     l1716:
  3006     0E7C  0873               	movf	___bmul@product,w
  3007     0E7D                     l404:
  3008     0E7D  0008               	return
  3009     0E7E                     __end_of___bmul:
  3010                           
  3011                           	psect	text6
  3012     0FA7                     __ptext6:	
  3013 ;; *************** function ___awmod *****************
  3014 ;; Defined at:
  3015 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/awmod.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  divisor         2    4[BANK0 ] int 
  3018 ;;  dividend        2    6[BANK0 ] int 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  sign            1    7[COMMON] unsigned char 
  3021 ;;  counter         1    6[COMMON] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2    4[BANK0 ] int 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3031 ;;      Params:         0       4       0       0       0
  3032 ;;      Locals:         2       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0
  3034 ;;      Totals:         2       4       0       0       0
  3035 ;;Total ram usage:        6 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 1
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_set_temp
  3042 ;;		_time_display_screen
  3043 ;;		_set_time
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047     0FA7                     ___awmod:	
  3048                           ;psect for function ___awmod
  3049                           
  3050     0FA7                     l2340:	
  3051                           ;incstack = 0
  3052                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3053                           
  3054     0FA7  01F7               	clrf	___awmod@sign
  3055     0FA8                     l2342:
  3056     0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  3057     0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  3058     0FAA  1FA7               	btfss	___awmod@dividend+1,7
  3059     0FAB  2FAD               	goto	u2011
  3060     0FAC  2FAE               	goto	u2010
  3061     0FAD                     u2011:
  3062     0FAD  2FB5               	goto	l2348
  3063     0FAE                     u2010:
  3064     0FAE                     l2344:
  3065     0FAE  09A6               	comf	___awmod@dividend,f
  3066     0FAF  09A7               	comf	___awmod@dividend+1,f
  3067     0FB0  0AA6               	incf	___awmod@dividend,f
  3068     0FB1  1903               	skipnz
  3069     0FB2  0AA7               	incf	___awmod@dividend+1,f
  3070     0FB3                     l2346:
  3071     0FB3  3001               	movlw	1
  3072     0FB4  00F7               	movwf	___awmod@sign
  3073     0FB5                     l2348:
  3074     0FB5  1FA5               	btfss	___awmod@divisor+1,7
  3075     0FB6  2FB8               	goto	u2021
  3076     0FB7  2FB9               	goto	u2020
  3077     0FB8                     u2021:
  3078     0FB8  2FBE               	goto	l2352
  3079     0FB9                     u2020:
  3080     0FB9                     l2350:
  3081     0FB9  09A4               	comf	___awmod@divisor,f
  3082     0FBA  09A5               	comf	___awmod@divisor+1,f
  3083     0FBB  0AA4               	incf	___awmod@divisor,f
  3084     0FBC  1903               	skipnz
  3085     0FBD  0AA5               	incf	___awmod@divisor+1,f
  3086     0FBE                     l2352:
  3087     0FBE  0824               	movf	___awmod@divisor,w
  3088     0FBF  0425               	iorwf	___awmod@divisor+1,w
  3089     0FC0  1903               	btfsc	3,2
  3090     0FC1  2FC3               	goto	u2031
  3091     0FC2  2FC4               	goto	u2030
  3092     0FC3                     u2031:
  3093     0FC3  2FF1               	goto	l2370
  3094     0FC4                     u2030:
  3095     0FC4                     l2354:
  3096     0FC4  3001               	movlw	1
  3097     0FC5  00F6               	movwf	___awmod@counter
  3098     0FC6  2FD0               	goto	l2360
  3099     0FC7                     l2356:
  3100     0FC7  3001               	movlw	1
  3101     0FC8                     u2045:
  3102     0FC8  1003               	clrc
  3103     0FC9  0DA4               	rlf	___awmod@divisor,f
  3104     0FCA  0DA5               	rlf	___awmod@divisor+1,f
  3105     0FCB  3EFF               	addlw	-1
  3106     0FCC  1D03               	skipz
  3107     0FCD  2FC8               	goto	u2045
  3108     0FCE                     l2358:
  3109     0FCE  3001               	movlw	1
  3110     0FCF  07F6               	addwf	___awmod@counter,f
  3111     0FD0                     l2360:
  3112     0FD0  1FA5               	btfss	___awmod@divisor+1,7
  3113     0FD1  2FD3               	goto	u2051
  3114     0FD2  2FD4               	goto	u2050
  3115     0FD3                     u2051:
  3116     0FD3  2FC7               	goto	l2356
  3117     0FD4                     u2050:
  3118     0FD4                     l2362:
  3119     0FD4  0825               	movf	___awmod@divisor+1,w
  3120     0FD5  0227               	subwf	___awmod@dividend+1,w
  3121     0FD6  1D03               	skipz
  3122     0FD7  2FDA               	goto	u2065
  3123     0FD8  0824               	movf	___awmod@divisor,w
  3124     0FD9  0226               	subwf	___awmod@dividend,w
  3125     0FDA                     u2065:
  3126     0FDA  1C03               	skipc
  3127     0FDB  2FDD               	goto	u2061
  3128     0FDC  2FDE               	goto	u2060
  3129     0FDD                     u2061:
  3130     0FDD  2FE4               	goto	l2366
  3131     0FDE                     u2060:
  3132     0FDE                     l2364:
  3133     0FDE  0824               	movf	___awmod@divisor,w
  3134     0FDF  02A6               	subwf	___awmod@dividend,f
  3135     0FE0  0825               	movf	___awmod@divisor+1,w
  3136     0FE1  1C03               	skipc
  3137     0FE2  03A7               	decf	___awmod@dividend+1,f
  3138     0FE3  02A7               	subwf	___awmod@dividend+1,f
  3139     0FE4                     l2366:
  3140     0FE4  3001               	movlw	1
  3141     0FE5                     u2075:
  3142     0FE5  1003               	clrc
  3143     0FE6  0CA5               	rrf	___awmod@divisor+1,f
  3144     0FE7  0CA4               	rrf	___awmod@divisor,f
  3145     0FE8  3EFF               	addlw	-1
  3146     0FE9  1D03               	skipz
  3147     0FEA  2FE5               	goto	u2075
  3148     0FEB                     l2368:
  3149     0FEB  3001               	movlw	1
  3150     0FEC  02F6               	subwf	___awmod@counter,f
  3151     0FED  1D03               	btfss	3,2
  3152     0FEE  2FF0               	goto	u2081
  3153     0FEF  2FF1               	goto	u2080
  3154     0FF0                     u2081:
  3155     0FF0  2FD4               	goto	l2362
  3156     0FF1                     u2080:
  3157     0FF1                     l2370:
  3158     0FF1  0877               	movf	___awmod@sign,w
  3159     0FF2  1903               	btfsc	3,2
  3160     0FF3  2FF5               	goto	u2091
  3161     0FF4  2FF6               	goto	u2090
  3162     0FF5                     u2091:
  3163     0FF5  2FFB               	goto	l2374
  3164     0FF6                     u2090:
  3165     0FF6                     l2372:
  3166     0FF6  09A6               	comf	___awmod@dividend,f
  3167     0FF7  09A7               	comf	___awmod@dividend+1,f
  3168     0FF8  0AA6               	incf	___awmod@dividend,f
  3169     0FF9  1903               	skipnz
  3170     0FFA  0AA7               	incf	___awmod@dividend+1,f
  3171     0FFB                     l2374:
  3172     0FFB  0827               	movf	___awmod@dividend+1,w
  3173     0FFC  00A5               	movwf	?___awmod+1
  3174     0FFD  0826               	movf	___awmod@dividend,w
  3175     0FFE  00A4               	movwf	?___awmod
  3176     0FFF                     l544:
  3177     0FFF  0008               	return
  3178     1000                     __end_of___awmod:
  3179                           
  3180                           	psect	text7
  3181     0453                     __ptext7:	
  3182 ;; *************** function ___awdiv *****************
  3183 ;; Defined at:
  3184 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/awdiv.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  divisor         2    2[COMMON] int 
  3187 ;;  dividend        2    4[COMMON] int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  quotient        2    2[BANK0 ] int 
  3190 ;;  sign            1    1[BANK0 ] unsigned char 
  3191 ;;  counter         1    0[BANK0 ] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  2    2[COMMON] int 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         4       0       0       0       0
  3202 ;;      Locals:         0       4       0       0       0
  3203 ;;      Temps:          0       0       0       0       0
  3204 ;;      Totals:         4       4       0       0       0
  3205 ;;Total ram usage:        8 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; Hardware stack levels required when called: 1
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_set_temp
  3212 ;;		_time_display_screen
  3213 ;;		_set_time
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217     0453                     ___awdiv:	
  3218                           ;psect for function ___awdiv
  3219                           
  3220     0453                     l2296:	
  3221                           ;incstack = 0
  3222                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3223                           
  3224     0453  1283               	bcf	3,5	;RP0=0, select bank0
  3225     0454  1303               	bcf	3,6	;RP1=0, select bank0
  3226     0455  01A1               	clrf	___awdiv@sign
  3227     0456                     l2298:
  3228     0456  1FF3               	btfss	___awdiv@divisor+1,7
  3229     0457  2C59               	goto	u1911
  3230     0458  2C5A               	goto	u1910
  3231     0459                     u1911:
  3232     0459  2C61               	goto	l2304
  3233     045A                     u1910:
  3234     045A                     l2300:
  3235     045A  09F2               	comf	___awdiv@divisor,f
  3236     045B  09F3               	comf	___awdiv@divisor+1,f
  3237     045C  0AF2               	incf	___awdiv@divisor,f
  3238     045D  1903               	skipnz
  3239     045E  0AF3               	incf	___awdiv@divisor+1,f
  3240     045F                     l2302:
  3241     045F  3001               	movlw	1
  3242     0460  00A1               	movwf	___awdiv@sign
  3243     0461                     l2304:
  3244     0461  1FF5               	btfss	___awdiv@dividend+1,7
  3245     0462  2C64               	goto	u1921
  3246     0463  2C65               	goto	u1920
  3247     0464                     u1921:
  3248     0464  2C6C               	goto	l2310
  3249     0465                     u1920:
  3250     0465                     l2306:
  3251     0465  09F4               	comf	___awdiv@dividend,f
  3252     0466  09F5               	comf	___awdiv@dividend+1,f
  3253     0467  0AF4               	incf	___awdiv@dividend,f
  3254     0468  1903               	skipnz
  3255     0469  0AF5               	incf	___awdiv@dividend+1,f
  3256     046A                     l2308:
  3257     046A  3001               	movlw	1
  3258     046B  06A1               	xorwf	___awdiv@sign,f
  3259     046C                     l2310:
  3260     046C  01A2               	clrf	___awdiv@quotient
  3261     046D  01A3               	clrf	___awdiv@quotient+1
  3262     046E                     l2312:
  3263     046E  0872               	movf	___awdiv@divisor,w
  3264     046F  0473               	iorwf	___awdiv@divisor+1,w
  3265     0470  1903               	btfsc	3,2
  3266     0471  2C73               	goto	u1931
  3267     0472  2C74               	goto	u1930
  3268     0473                     u1931:
  3269     0473  2CA9               	goto	l2332
  3270     0474                     u1930:
  3271     0474                     l2314:
  3272     0474  3001               	movlw	1
  3273     0475  00A0               	movwf	___awdiv@counter
  3274     0476  2C80               	goto	l2320
  3275     0477                     l2316:
  3276     0477  3001               	movlw	1
  3277     0478                     u1945:
  3278     0478  1003               	clrc
  3279     0479  0DF2               	rlf	___awdiv@divisor,f
  3280     047A  0DF3               	rlf	___awdiv@divisor+1,f
  3281     047B  3EFF               	addlw	-1
  3282     047C  1D03               	skipz
  3283     047D  2C78               	goto	u1945
  3284     047E                     l2318:
  3285     047E  3001               	movlw	1
  3286     047F  07A0               	addwf	___awdiv@counter,f
  3287     0480                     l2320:
  3288     0480  1FF3               	btfss	___awdiv@divisor+1,7
  3289     0481  2C83               	goto	u1951
  3290     0482  2C84               	goto	u1950
  3291     0483                     u1951:
  3292     0483  2C77               	goto	l2316
  3293     0484                     u1950:
  3294     0484                     l2322:
  3295     0484  3001               	movlw	1
  3296     0485                     u1965:
  3297     0485  1003               	clrc
  3298     0486  0DA2               	rlf	___awdiv@quotient,f
  3299     0487  0DA3               	rlf	___awdiv@quotient+1,f
  3300     0488  3EFF               	addlw	-1
  3301     0489  1D03               	skipz
  3302     048A  2C85               	goto	u1965
  3303     048B  0873               	movf	___awdiv@divisor+1,w
  3304     048C  0275               	subwf	___awdiv@dividend+1,w
  3305     048D  1D03               	skipz
  3306     048E  2C91               	goto	u1975
  3307     048F  0872               	movf	___awdiv@divisor,w
  3308     0490  0274               	subwf	___awdiv@dividend,w
  3309     0491                     u1975:
  3310     0491  1C03               	skipc
  3311     0492  2C94               	goto	u1971
  3312     0493  2C95               	goto	u1970
  3313     0494                     u1971:
  3314     0494  2C9C               	goto	l2328
  3315     0495                     u1970:
  3316     0495                     l2324:
  3317     0495  0872               	movf	___awdiv@divisor,w
  3318     0496  02F4               	subwf	___awdiv@dividend,f
  3319     0497  0873               	movf	___awdiv@divisor+1,w
  3320     0498  1C03               	skipc
  3321     0499  03F5               	decf	___awdiv@dividend+1,f
  3322     049A  02F5               	subwf	___awdiv@dividend+1,f
  3323     049B                     l2326:
  3324     049B  1422               	bsf	___awdiv@quotient,0
  3325     049C                     l2328:
  3326     049C  3001               	movlw	1
  3327     049D                     u1985:
  3328     049D  1003               	clrc
  3329     049E  0CF3               	rrf	___awdiv@divisor+1,f
  3330     049F  0CF2               	rrf	___awdiv@divisor,f
  3331     04A0  3EFF               	addlw	-1
  3332     04A1  1D03               	skipz
  3333     04A2  2C9D               	goto	u1985
  3334     04A3                     l2330:
  3335     04A3  3001               	movlw	1
  3336     04A4  02A0               	subwf	___awdiv@counter,f
  3337     04A5  1D03               	btfss	3,2
  3338     04A6  2CA8               	goto	u1991
  3339     04A7  2CA9               	goto	u1990
  3340     04A8                     u1991:
  3341     04A8  2C84               	goto	l2322
  3342     04A9                     u1990:
  3343     04A9                     l2332:
  3344     04A9  0821               	movf	___awdiv@sign,w
  3345     04AA  1903               	btfsc	3,2
  3346     04AB  2CAD               	goto	u2001
  3347     04AC  2CAE               	goto	u2000
  3348     04AD                     u2001:
  3349     04AD  2CB3               	goto	l2336
  3350     04AE                     u2000:
  3351     04AE                     l2334:
  3352     04AE  09A2               	comf	___awdiv@quotient,f
  3353     04AF  09A3               	comf	___awdiv@quotient+1,f
  3354     04B0  0AA2               	incf	___awdiv@quotient,f
  3355     04B1  1903               	skipnz
  3356     04B2  0AA3               	incf	___awdiv@quotient+1,f
  3357     04B3                     l2336:
  3358     04B3  0823               	movf	___awdiv@quotient+1,w
  3359     04B4  00F3               	movwf	?___awdiv+1
  3360     04B5  0822               	movf	___awdiv@quotient,w
  3361     04B6  00F2               	movwf	?___awdiv
  3362     04B7                     l531:
  3363     04B7  0008               	return
  3364     04B8                     __end_of___awdiv:
  3365                           
  3366                           	psect	text8
  3367     0E9C                     __ptext8:	
  3368 ;; *************** function _read_matrix_keypad *****************
  3369 ;; Defined at:
  3370 ;;		line 121 in file "matrix_keypad.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  mode            1    wreg     unsigned char 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  mode            1    4[COMMON] unsigned char 
  3375 ;;  key             1    5[COMMON] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      unsigned char 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3385 ;;      Params:         0       0       0       0       0
  3386 ;;      Locals:         2       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0
  3388 ;;      Totals:         2       0       0       0       0
  3389 ;;Total ram usage:        2 bytes
  3390 ;; Hardware stack levels used: 1
  3391 ;; Hardware stack levels required when called: 2
  3392 ;; This function calls:
  3393 ;;		_scan_keypad
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399     0E9C                     _read_matrix_keypad:	
  3400                           ;psect for function _read_matrix_keypad
  3401                           
  3402                           
  3403                           ;incstack = 0
  3404                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3405                           ;read_matrix_keypad@mode stored from wreg
  3406     0E9C  00F4               	movwf	read_matrix_keypad@mode
  3407     0E9D                     l1802:
  3408                           
  3409                           ;matrix_keypad.c: 121: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 122: {;matrix_keypad.c: 123:     static unsigned char once = 1;;matrix_keypad.c: 12
      +                          4:     unsigned char key;;matrix_keypad.c: 126:     key = scan_keypad();
  3410     0E9D  120A  118A  26D6  120A  158A  	fcall	_scan_keypad
  3411     0EA2  00F5               	movwf	read_matrix_keypad@key
  3412     0EA3                     l1804:
  3413                           
  3414                           ;matrix_keypad.c: 128:     if (mode == 0)
  3415     0EA3  0874               	movf	read_matrix_keypad@mode,w
  3416     0EA4  1D03               	btfss	3,2
  3417     0EA5  2EA7               	goto	u1311
  3418     0EA6  2EA8               	goto	u1310
  3419     0EA7                     u1311:
  3420     0EA7  2EAA               	goto	l1812
  3421     0EA8                     u1310:
  3422     0EA8                     l1806:
  3423                           
  3424                           ;matrix_keypad.c: 129:     {;matrix_keypad.c: 130:         return key;
  3425     0EA8  0875               	movf	read_matrix_keypad@key,w
  3426     0EA9  2EBE               	goto	l111
  3427     0EAA                     l1812:
  3428                           
  3429                           ;matrix_keypad.c: 133:     {;matrix_keypad.c: 134:         if ((key != 0xFF) && once)
  3430     0EAA  0A75               	incf	read_matrix_keypad@key,w
  3431     0EAB  1903               	btfsc	3,2
  3432     0EAC  2EAE               	goto	u1321
  3433     0EAD  2EAF               	goto	u1320
  3434     0EAE                     u1321:
  3435     0EAE  2EB6               	goto	l1824
  3436     0EAF                     u1320:
  3437     0EAF                     l1814:
  3438     0EAF  087B               	movf	read_matrix_keypad@once,w
  3439     0EB0  1903               	btfsc	3,2
  3440     0EB1  2EB3               	goto	u1331
  3441     0EB2  2EB4               	goto	u1330
  3442     0EB3                     u1331:
  3443     0EB3  2EB6               	goto	l1824
  3444     0EB4                     u1330:
  3445     0EB4                     l1816:
  3446                           
  3447                           ;matrix_keypad.c: 135:         {;matrix_keypad.c: 136:             once = 0;
  3448     0EB4  01FB               	clrf	read_matrix_keypad@once
  3449     0EB5  2EA8               	goto	l1806
  3450     0EB6                     l1824:
  3451     0EB6  0A75               	incf	read_matrix_keypad@key,w
  3452     0EB7  1D03               	btfss	3,2
  3453     0EB8  2EBA               	goto	u1341
  3454     0EB9  2EBB               	goto	u1340
  3455     0EBA                     u1341:
  3456     0EBA  2EBD               	goto	l1828
  3457     0EBB                     u1340:
  3458     0EBB                     l1826:
  3459                           
  3460                           ;matrix_keypad.c: 141:         {;matrix_keypad.c: 142:             once = 1;
  3461     0EBB  3001               	movlw	1
  3462     0EBC  00FB               	movwf	read_matrix_keypad@once
  3463     0EBD                     l1828:
  3464                           
  3465                           ;matrix_keypad.c: 146:     return 0xFF;
  3466     0EBD  30FF               	movlw	255
  3467     0EBE                     l111:
  3468     0EBE  0008               	return
  3469     0EBF                     __end_of_read_matrix_keypad:
  3470                           
  3471                           	psect	text9
  3472     06D6                     __ptext9:	
  3473 ;; *************** function _scan_keypad *****************
  3474 ;; Defined at:
  3475 ;;		line 31 in file "matrix_keypad.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  i               2    2[COMMON] int 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      unsigned char 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0, btemp+1
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3489 ;;      Params:         0       0       0       0       0
  3490 ;;      Locals:         2       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0
  3492 ;;      Totals:         2       0       0       0       0
  3493 ;;Total ram usage:        2 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 1
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_read_matrix_keypad
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503     06D6                     _scan_keypad:	
  3504                           ;psect for function _scan_keypad
  3505                           
  3506     06D6                     l1596:	
  3507                           ;incstack = 0
  3508                           ; Regs used in _scan_keypad: [wreg+status,2+status,0+btemp+1]
  3509                           
  3510                           
  3511                           ;matrix_keypad.c: 33:     int i;;matrix_keypad.c: 35:     RD3 = 0;
  3512     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  3513     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  3514     06D8  1188               	bcf	8,3	;volatile
  3515                           
  3516                           ;matrix_keypad.c: 36:     RD2 = 1;
  3517     06D9  1508               	bsf	8,2	;volatile
  3518                           
  3519                           ;matrix_keypad.c: 37:     RD1 = 1;
  3520     06DA  1488               	bsf	8,1	;volatile
  3521                           
  3522                           ;matrix_keypad.c: 38:     RD0 = 1;
  3523     06DB  1408               	bsf	8,0	;volatile
  3524     06DC                     l1598:
  3525                           
  3526                           ;matrix_keypad.c: 40:     for (i = 100; i--; );
  3527     06DC  3064               	movlw	100
  3528     06DD  00F2               	movwf	scan_keypad@i
  3529     06DE  3000               	movlw	0
  3530     06DF  00F3               	movwf	scan_keypad@i+1
  3531     06E0                     l1600:
  3532     06E0  30FF               	movlw	255
  3533     06E1  07F2               	addwf	scan_keypad@i,f
  3534     06E2  1803               	skipnc
  3535     06E3  0AF3               	incf	scan_keypad@i+1,f
  3536     06E4  30FF               	movlw	255
  3537     06E5  07F3               	addwf	scan_keypad@i+1,f
  3538     06E6  0A72               	incf	scan_keypad@i,w
  3539     06E7  1D03               	skipz
  3540     06E8  2EED               	goto	u941
  3541     06E9  0A73               	incf	scan_keypad@i+1,w
  3542     06EA  1D03               	btfss	3,2
  3543     06EB  2EED               	goto	u941
  3544     06EC  2EEE               	goto	u940
  3545     06ED                     u941:
  3546     06ED  2EE0               	goto	l1600
  3547     06EE                     u940:
  3548     06EE                     l78:
  3549                           
  3550                           ;matrix_keypad.c: 42:     if (RB0 == 0)
  3551     06EE  1283               	bcf	3,5	;RP0=0, select bank0
  3552     06EF  1303               	bcf	3,6	;RP1=0, select bank0
  3553     06F0  1806               	btfsc	6,0	;volatile
  3554     06F1  2EF3               	goto	u951
  3555     06F2  2EF4               	goto	u950
  3556     06F3                     u951:
  3557     06F3  2EF6               	goto	l79
  3558     06F4                     u950:
  3559     06F4                     l1602:
  3560                           
  3561                           ;matrix_keypad.c: 43:     {;matrix_keypad.c: 44:         return 1;
  3562     06F4  3001               	movlw	1
  3563     06F5  2F90               	goto	l80
  3564     06F6                     l79:	
  3565                           ;matrix_keypad.c: 46:     else if (RB1 == 0)
  3566                           
  3567     06F6  1886               	btfsc	6,1	;volatile
  3568     06F7  2EF9               	goto	u961
  3569     06F8  2EFA               	goto	u960
  3570     06F9                     u961:
  3571     06F9  2EFC               	goto	l82
  3572     06FA                     u960:
  3573     06FA                     l1608:
  3574                           
  3575                           ;matrix_keypad.c: 47:     {;matrix_keypad.c: 48:         return 2;
  3576     06FA  3002               	movlw	2
  3577     06FB  2F90               	goto	l80
  3578     06FC                     l82:	
  3579                           ;matrix_keypad.c: 50:     else if (RB2 == 0)
  3580                           
  3581     06FC  1906               	btfsc	6,2	;volatile
  3582     06FD  2EFF               	goto	u971
  3583     06FE  2F00               	goto	u970
  3584     06FF                     u971:
  3585     06FF  2F02               	goto	l81
  3586     0700                     u970:
  3587     0700                     l1614:
  3588                           
  3589                           ;matrix_keypad.c: 51:     {;matrix_keypad.c: 52:         return 3;
  3590     0700  3003               	movlw	3
  3591     0701  2F90               	goto	l80
  3592     0702                     l81:
  3593                           
  3594                           ;matrix_keypad.c: 55:     RD3 = 1;
  3595     0702  1588               	bsf	8,3	;volatile
  3596                           
  3597                           ;matrix_keypad.c: 56:     RD2 = 0;
  3598     0703  1108               	bcf	8,2	;volatile
  3599                           
  3600                           ;matrix_keypad.c: 57:     RD1 = 1;
  3601     0704  1488               	bsf	8,1	;volatile
  3602                           
  3603                           ;matrix_keypad.c: 58:     RD0 = 1;
  3604     0705  1408               	bsf	8,0	;volatile
  3605     0706                     l1618:
  3606                           
  3607                           ;matrix_keypad.c: 60:    for (i=100;i>0;i--)
  3608     0706  3064               	movlw	100
  3609     0707  00F2               	movwf	scan_keypad@i
  3610     0708  3000               	movlw	0
  3611     0709  00F3               	movwf	scan_keypad@i+1
  3612     070A                     l1624:
  3613                           
  3614                           ;matrix_keypad.c: 61:    {;matrix_keypad.c: 63:    }
  3615     070A  30FF               	movlw	255
  3616     070B  07F2               	addwf	scan_keypad@i,f
  3617     070C  1803               	skipnc
  3618     070D  0AF3               	incf	scan_keypad@i+1,f
  3619     070E  30FF               	movlw	255
  3620     070F  07F3               	addwf	scan_keypad@i+1,f
  3621     0710                     l1626:
  3622     0710  0873               	movf	scan_keypad@i+1,w
  3623     0711  3A80               	xorlw	128
  3624     0712  00FF               	movwf	btemp+1
  3625     0713  3080               	movlw	128
  3626     0714  027F               	subwf	btemp+1,w
  3627     0715  1D03               	skipz
  3628     0716  2F19               	goto	u985
  3629     0717  3001               	movlw	1
  3630     0718  0272               	subwf	scan_keypad@i,w
  3631     0719                     u985:
  3632     0719  1803               	skipnc
  3633     071A  2F1C               	goto	u981
  3634     071B  2F1D               	goto	u980
  3635     071C                     u981:
  3636     071C  2F0A               	goto	l1624
  3637     071D                     u980:
  3638     071D                     l86:
  3639                           
  3640                           ;matrix_keypad.c: 65:     if (RB0 == 0)
  3641     071D  1283               	bcf	3,5	;RP0=0, select bank0
  3642     071E  1303               	bcf	3,6	;RP1=0, select bank0
  3643     071F  1806               	btfsc	6,0	;volatile
  3644     0720  2F22               	goto	u991
  3645     0721  2F23               	goto	u990
  3646     0722                     u991:
  3647     0722  2F25               	goto	l87
  3648     0723                     u990:
  3649     0723                     l1628:
  3650                           
  3651                           ;matrix_keypad.c: 66:     {;matrix_keypad.c: 67:         return 4;
  3652     0723  3004               	movlw	4
  3653     0724  2F90               	goto	l80
  3654     0725                     l87:	
  3655                           ;matrix_keypad.c: 69:     else if (RB1 == 0)
  3656                           
  3657     0725  1886               	btfsc	6,1	;volatile
  3658     0726  2F28               	goto	u1001
  3659     0727  2F29               	goto	u1000
  3660     0728                     u1001:
  3661     0728  2F2B               	goto	l89
  3662     0729                     u1000:
  3663     0729                     l1634:
  3664                           
  3665                           ;matrix_keypad.c: 70:     {;matrix_keypad.c: 71:         return 5;
  3666     0729  3005               	movlw	5
  3667     072A  2F90               	goto	l80
  3668     072B                     l89:	
  3669                           ;matrix_keypad.c: 73:     else if (RB2 == 0)
  3670                           
  3671     072B  1906               	btfsc	6,2	;volatile
  3672     072C  2F2E               	goto	u1011
  3673     072D  2F2F               	goto	u1010
  3674     072E                     u1011:
  3675     072E  2F31               	goto	l88
  3676     072F                     u1010:
  3677     072F                     l1640:
  3678                           
  3679                           ;matrix_keypad.c: 74:     {;matrix_keypad.c: 75:         return 6;
  3680     072F  3006               	movlw	6
  3681     0730  2F90               	goto	l80
  3682     0731                     l88:
  3683                           
  3684                           ;matrix_keypad.c: 78:     RD3 = 1;
  3685     0731  1588               	bsf	8,3	;volatile
  3686                           
  3687                           ;matrix_keypad.c: 79:     RD2 = 1;
  3688     0732  1508               	bsf	8,2	;volatile
  3689                           
  3690                           ;matrix_keypad.c: 80:     RD1 = 0;
  3691     0733  1088               	bcf	8,1	;volatile
  3692                           
  3693                           ;matrix_keypad.c: 81:     RD0 = 1;
  3694     0734  1408               	bsf	8,0	;volatile
  3695     0735                     l1644:
  3696                           
  3697                           ;matrix_keypad.c: 83:     for (i=100;i>0;i--);
  3698     0735  3064               	movlw	100
  3699     0736  00F2               	movwf	scan_keypad@i
  3700     0737  3000               	movlw	0
  3701     0738  00F3               	movwf	scan_keypad@i+1
  3702     0739                     l1650:
  3703     0739  30FF               	movlw	255
  3704     073A  07F2               	addwf	scan_keypad@i,f
  3705     073B  1803               	skipnc
  3706     073C  0AF3               	incf	scan_keypad@i+1,f
  3707     073D  30FF               	movlw	255
  3708     073E  07F3               	addwf	scan_keypad@i+1,f
  3709     073F                     l1652:
  3710     073F  0873               	movf	scan_keypad@i+1,w
  3711     0740  3A80               	xorlw	128
  3712     0741  00FF               	movwf	btemp+1
  3713     0742  3080               	movlw	128
  3714     0743  027F               	subwf	btemp+1,w
  3715     0744  1D03               	skipz
  3716     0745  2F48               	goto	u1025
  3717     0746  3001               	movlw	1
  3718     0747  0272               	subwf	scan_keypad@i,w
  3719     0748                     u1025:
  3720     0748  1803               	skipnc
  3721     0749  2F4B               	goto	u1021
  3722     074A  2F4C               	goto	u1020
  3723     074B                     u1021:
  3724     074B  2F39               	goto	l1650
  3725     074C                     u1020:
  3726     074C                     l93:
  3727                           
  3728                           ;matrix_keypad.c: 85:     if (RB0 == 0)
  3729     074C  1283               	bcf	3,5	;RP0=0, select bank0
  3730     074D  1303               	bcf	3,6	;RP1=0, select bank0
  3731     074E  1806               	btfsc	6,0	;volatile
  3732     074F  2F51               	goto	u1031
  3733     0750  2F52               	goto	u1030
  3734     0751                     u1031:
  3735     0751  2F54               	goto	l94
  3736     0752                     u1030:
  3737     0752                     l1654:
  3738                           
  3739                           ;matrix_keypad.c: 86:     {;matrix_keypad.c: 87:         return 7;
  3740     0752  3007               	movlw	7
  3741     0753  2F90               	goto	l80
  3742     0754                     l94:	
  3743                           ;matrix_keypad.c: 89:     else if (RB1 == 0)
  3744                           
  3745     0754  1886               	btfsc	6,1	;volatile
  3746     0755  2F57               	goto	u1041
  3747     0756  2F58               	goto	u1040
  3748     0757                     u1041:
  3749     0757  2F5A               	goto	l96
  3750     0758                     u1040:
  3751     0758                     l1660:
  3752                           
  3753                           ;matrix_keypad.c: 90:     {;matrix_keypad.c: 91:         return 8;
  3754     0758  3008               	movlw	8
  3755     0759  2F90               	goto	l80
  3756     075A                     l96:	
  3757                           ;matrix_keypad.c: 93:     else if (RB2 == 0)
  3758                           
  3759     075A  1906               	btfsc	6,2	;volatile
  3760     075B  2F5D               	goto	u1051
  3761     075C  2F5E               	goto	u1050
  3762     075D                     u1051:
  3763     075D  2F60               	goto	l95
  3764     075E                     u1050:
  3765     075E                     l1666:
  3766                           
  3767                           ;matrix_keypad.c: 94:     {;matrix_keypad.c: 95:         return 9;
  3768     075E  3009               	movlw	9
  3769     075F  2F90               	goto	l80
  3770     0760                     l95:
  3771                           
  3772                           ;matrix_keypad.c: 98:     RD3 = 1;
  3773     0760  1588               	bsf	8,3	;volatile
  3774                           
  3775                           ;matrix_keypad.c: 99:     RD2 = 1;
  3776     0761  1508               	bsf	8,2	;volatile
  3777                           
  3778                           ;matrix_keypad.c: 100:     RD1 = 1;
  3779     0762  1488               	bsf	8,1	;volatile
  3780                           
  3781                           ;matrix_keypad.c: 101:     RD0 = 0;
  3782     0763  1008               	bcf	8,0	;volatile
  3783     0764                     l1670:
  3784                           
  3785                           ;matrix_keypad.c: 103:     for (i=100;i>0;i--);
  3786     0764  3064               	movlw	100
  3787     0765  00F2               	movwf	scan_keypad@i
  3788     0766  3000               	movlw	0
  3789     0767  00F3               	movwf	scan_keypad@i+1
  3790     0768                     l1676:
  3791     0768  30FF               	movlw	255
  3792     0769  07F2               	addwf	scan_keypad@i,f
  3793     076A  1803               	skipnc
  3794     076B  0AF3               	incf	scan_keypad@i+1,f
  3795     076C  30FF               	movlw	255
  3796     076D  07F3               	addwf	scan_keypad@i+1,f
  3797     076E                     l1678:
  3798     076E  0873               	movf	scan_keypad@i+1,w
  3799     076F  3A80               	xorlw	128
  3800     0770  00FF               	movwf	btemp+1
  3801     0771  3080               	movlw	128
  3802     0772  027F               	subwf	btemp+1,w
  3803     0773  1D03               	skipz
  3804     0774  2F77               	goto	u1065
  3805     0775  3001               	movlw	1
  3806     0776  0272               	subwf	scan_keypad@i,w
  3807     0777                     u1065:
  3808     0777  1803               	skipnc
  3809     0778  2F7A               	goto	u1061
  3810     0779  2F7B               	goto	u1060
  3811     077A                     u1061:
  3812     077A  2F68               	goto	l1676
  3813     077B                     u1060:
  3814     077B                     l100:
  3815                           
  3816                           ;matrix_keypad.c: 105:     if (RB0 == 0)
  3817     077B  1283               	bcf	3,5	;RP0=0, select bank0
  3818     077C  1303               	bcf	3,6	;RP1=0, select bank0
  3819     077D  1806               	btfsc	6,0	;volatile
  3820     077E  2F80               	goto	u1071
  3821     077F  2F81               	goto	u1070
  3822     0780                     u1071:
  3823     0780  2F83               	goto	l101
  3824     0781                     u1070:
  3825     0781                     l1680:
  3826                           
  3827                           ;matrix_keypad.c: 106:     {;matrix_keypad.c: 107:         return '*';
  3828     0781  302A               	movlw	42
  3829     0782  2F90               	goto	l80
  3830     0783                     l101:	
  3831                           ;matrix_keypad.c: 109:     else if (RB1 == 0)
  3832                           
  3833     0783  1886               	btfsc	6,1	;volatile
  3834     0784  2F86               	goto	u1081
  3835     0785  2F87               	goto	u1080
  3836     0786                     u1081:
  3837     0786  2F89               	goto	l103
  3838     0787                     u1080:
  3839     0787                     l1686:
  3840                           
  3841                           ;matrix_keypad.c: 110:     {;matrix_keypad.c: 111:         return 0;
  3842     0787  3000               	movlw	0
  3843     0788  2F90               	goto	l80
  3844     0789                     l103:	
  3845                           ;matrix_keypad.c: 113:     else if (RB2 == 0)
  3846                           
  3847     0789  1906               	btfsc	6,2	;volatile
  3848     078A  2F8C               	goto	u1091
  3849     078B  2F8D               	goto	u1090
  3850     078C                     u1091:
  3851     078C  2F8F               	goto	l1696
  3852     078D                     u1090:
  3853     078D                     l1692:
  3854                           
  3855                           ;matrix_keypad.c: 114:     {;matrix_keypad.c: 115:         return '#';
  3856     078D  3023               	movlw	35
  3857     078E  2F90               	goto	l80
  3858     078F                     l1696:
  3859                           
  3860                           ;matrix_keypad.c: 118:     return 0xFF;
  3861     078F  30FF               	movlw	255
  3862     0790                     l80:
  3863     0790  0008               	return
  3864     0791                     __end_of_scan_keypad:
  3865                           
  3866                           	psect	text10
  3867     0791                     __ptext10:	
  3868 ;; *************** function _power_on_screen *****************
  3869 ;; Defined at:
  3870 ;;		line 203 in file "shank.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  i               1   12[BANK0 ] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3884 ;;      Params:         0       0       0       0       0
  3885 ;;      Locals:         0       1       0       0       0
  3886 ;;      Temps:          0       3       0       0       0
  3887 ;;      Totals:         0       4       0       0       0
  3888 ;;Total ram usage:        4 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 3
  3891 ;; This function calls:
  3892 ;;		_clcd_print
  3893 ;;		_clcd_putch
  3894 ;; This function is called by:
  3895 ;;		_main
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899     0791                     _power_on_screen:	
  3900                           ;psect for function _power_on_screen
  3901                           
  3902     0791                     l2394:	
  3903                           ;incstack = 0
  3904                           ; Regs used in _power_on_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3905                           
  3906                           
  3907                           ;shank.c: 205: ;shank.c: 207:   for (i = 0; i < 16; i++)
  3908     0791  1283               	bcf	3,5	;RP0=0, select bank0
  3909     0792  1303               	bcf	3,6	;RP1=0, select bank0
  3910     0793  01AC               	clrf	power_on_screen@i
  3911     0794                     l2400:
  3912                           
  3913                           ;shank.c: 208:    {;shank.c: 210:         _delay((unsigned long)((100)*(20000000/4000.0)
      +                          ));
  3914     0794  082C               	movf	power_on_screen@i,w
  3915     0795  3E80               	addlw	128
  3916     0796  00A8               	movwf	clcd_putch@addr
  3917     0797  30FF               	movlw	255
  3918     0798  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  3919     079D                     l2402:
  3920                           
  3921                           ;shank.c: 211:   }
  3922     079D  3003               	movlw	3
  3923     079E  1283               	bcf	3,5	;RP0=0, select bank0
  3924     079F  1303               	bcf	3,6	;RP1=0, select bank0
  3925     07A0  00AB               	movwf	??_power_on_screen+2
  3926     07A1  308A               	movlw	138
  3927     07A2  00AA               	movwf	??_power_on_screen+1
  3928     07A3  3055               	movlw	85
  3929     07A4  00A9               	movwf	??_power_on_screen
  3930     07A5                     u2607:
  3931     07A5  0BA9               	decfsz	??_power_on_screen,f
  3932     07A6  2FA5               	goto	u2607
  3933     07A7  0BAA               	decfsz	??_power_on_screen+1,f
  3934     07A8  2FA5               	goto	u2607
  3935     07A9  0BAB               	decfsz	??_power_on_screen+2,f
  3936     07AA  2FA5               	goto	u2607
  3937     07AB                     l2404:
  3938                           
  3939                           ;shank.c: 213: 
  3940     07AB  3001               	movlw	1
  3941     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3942     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3943     07AE  07AC               	addwf	power_on_screen@i,f
  3944     07AF                     l2406:
  3945     07AF  3010               	movlw	16
  3946     07B0  022C               	subwf	power_on_screen@i,w
  3947     07B1  1C03               	skipc
  3948     07B2  2FB4               	goto	u2101
  3949     07B3  2FB5               	goto	u2100
  3950     07B4                     u2101:
  3951     07B4  2F94               	goto	l2400
  3952     07B5                     u2100:
  3953     07B5                     l2408:
  3954                           
  3955                           ;shank.c: 216: }
  3956     07B5  3071               	movlw	low (STR_7| (0+32768))
  3957     07B6  00F6               	movwf	clcd_print@str
  3958     07B7  3085               	movlw	high (STR_7| (0+32768))
  3959     07B8  00F7               	movwf	clcd_print@str+1
  3960     07B9  30C0               	movlw	192
  3961     07BA  00F8               	movwf	clcd_print@addr
  3962     07BB  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  3963                           
  3964                           ;shank.c: 217: 
  3965     07C0  3000               	movlw	low (STR_8| (0+32768))
  3966     07C1  00F6               	movwf	clcd_print@str
  3967     07C2  3085               	movlw	high (STR_8| (0+32768))
  3968     07C3  00F7               	movwf	clcd_print@str+1
  3969     07C4  3090               	movlw	144
  3970     07C5  00F8               	movwf	clcd_print@addr
  3971     07C6  120A  158A  26EC  120A  118A  	fcall	_clcd_print
  3972     07CB                     l2410:
  3973                           
  3974                           ;shank.c: 220: void menu_display_screen(void)
  3975     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  3976     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  3977     07CD  01AC               	clrf	power_on_screen@i
  3978     07CE                     l2416:
  3979                           
  3980                           ;shank.c: 221: {;shank.c: 222:  clcd_print("1.Micro", (0x80 + 0));
  3981     07CE  082C               	movf	power_on_screen@i,w
  3982     07CF  3ED0               	addlw	208
  3983     07D0  00A8               	movwf	clcd_putch@addr
  3984     07D1  30FF               	movlw	255
  3985     07D2  120A  158A  2658  120A  118A  	fcall	_clcd_putch
  3986     07D7                     l2418:
  3987                           
  3988                           ;shank.c: 223:  clcd_print("2.Grill", (0xC0 + 0));
  3989     07D7  3003               	movlw	3
  3990     07D8  1283               	bcf	3,5	;RP0=0, select bank0
  3991     07D9  1303               	bcf	3,6	;RP1=0, select bank0
  3992     07DA  00AB               	movwf	??_power_on_screen+2
  3993     07DB  308A               	movlw	138
  3994     07DC  00AA               	movwf	??_power_on_screen+1
  3995     07DD  3055               	movlw	85
  3996     07DE  00A9               	movwf	??_power_on_screen
  3997     07DF                     u2617:
  3998     07DF  0BA9               	decfsz	??_power_on_screen,f
  3999     07E0  2FDF               	goto	u2617
  4000     07E1  0BAA               	decfsz	??_power_on_screen+1,f
  4001     07E2  2FDF               	goto	u2617
  4002     07E3  0BAB               	decfsz	??_power_on_screen+2,f
  4003     07E4  2FDF               	goto	u2617
  4004     07E5                     l2420:
  4005                           
  4006                           ;shank.c: 224:  clcd_print("3.Convection", (0x90 + 0));
  4007     07E5  3001               	movlw	1
  4008     07E6  1283               	bcf	3,5	;RP0=0, select bank0
  4009     07E7  1303               	bcf	3,6	;RP1=0, select bank0
  4010     07E8  07AC               	addwf	power_on_screen@i,f
  4011     07E9                     l2422:
  4012     07E9  3010               	movlw	16
  4013     07EA  022C               	subwf	power_on_screen@i,w
  4014     07EB  1C03               	skipc
  4015     07EC  2FEE               	goto	u2111
  4016     07ED  2FEF               	goto	u2110
  4017     07EE                     u2111:
  4018     07EE  2FCE               	goto	l2416
  4019     07EF                     u2110:
  4020     07EF                     l2424:
  4021                           
  4022                           ;shank.c: 227: 
  4023     07EF  304D               	movlw	77
  4024     07F0  1283               	bcf	3,5	;RP0=0, select bank0
  4025     07F1  1303               	bcf	3,6	;RP1=0, select bank0
  4026     07F2  00AB               	movwf	??_power_on_screen+2
  4027     07F3  3019               	movlw	25
  4028     07F4  00AA               	movwf	??_power_on_screen+1
  4029     07F5  304F               	movlw	79
  4030     07F6  00A9               	movwf	??_power_on_screen
  4031     07F7                     u2627:
  4032     07F7  0BA9               	decfsz	??_power_on_screen,f
  4033     07F8  2FF7               	goto	u2627
  4034     07F9  0BAA               	decfsz	??_power_on_screen+1,f
  4035     07FA  2FF7               	goto	u2627
  4036     07FB  0BAB               	decfsz	??_power_on_screen+2,f
  4037     07FC  2FF7               	goto	u2627
  4038     07FD                     l223:
  4039     07FD  0008               	return
  4040     07FE                     __end_of_power_on_screen:
  4041                           
  4042                           	psect	text11
  4043     0E58                     __ptext11:	
  4044 ;; *************** function _clcd_putch *****************
  4045 ;; Defined at:
  4046 ;;		line 64 in file "clcd.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  data            1    wreg     const unsigned char 
  4049 ;;  addr            1    8[BANK0 ] unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  data            1    8[COMMON] const unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      void 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0, pclath, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4061 ;;      Params:         0       1       0       0       0
  4062 ;;      Locals:         1       0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0
  4064 ;;      Totals:         1       1       0       0       0
  4065 ;;Total ram usage:        2 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; Hardware stack levels required when called: 2
  4068 ;; This function calls:
  4069 ;;		_clcd_write
  4070 ;; This function is called by:
  4071 ;;		_time_display_screen
  4072 ;;		_power_on_screen
  4073 ;;		_set_temp
  4074 ;;		_set_time
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078     0E58                     _clcd_putch:	
  4079                           ;psect for function _clcd_putch
  4080                           
  4081                           
  4082                           ;incstack = 0
  4083                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  4084                           ;clcd_putch@data stored from wreg
  4085     0E58  00F8               	movwf	clcd_putch@data
  4086     0E59                     l2282:
  4087                           
  4088                           ;clcd.c: 64: void clcd_putch(const char data, unsigned char addr);clcd.c: 65: {;clcd.c: 
      +                          66:     clcd_write(addr, 0);
  4089     0E59  01F2               	clrf	clcd_write@mode
  4090     0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  4091     0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  4092     0E5C  0828               	movf	clcd_putch@addr,w
  4093     0E5D  120A  118A  24B8  120A  158A  	fcall	_clcd_write
  4094                           
  4095                           ;clcd.c: 67:     clcd_write(data, 1);
  4096     0E62  01F2               	clrf	clcd_write@mode
  4097     0E63  0AF2               	incf	clcd_write@mode,f
  4098     0E64  0878               	movf	clcd_putch@data,w
  4099     0E65  120A  118A  24B8  120A  158A  	fcall	_clcd_write
  4100     0E6A                     l26:
  4101     0E6A  0008               	return
  4102     0E6B                     __end_of_clcd_putch:
  4103                           
  4104                           	psect	text12
  4105     0EBF                     __ptext12:	
  4106 ;; *************** function _menu_display_screen *****************
  4107 ;; Defined at:
  4108 ;;		line 233 in file "shank.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4122 ;;      Params:         0       0       0       0       0
  4123 ;;      Locals:         0       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0
  4125 ;;      Totals:         0       0       0       0       0
  4126 ;;Total ram usage:        0 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 3
  4129 ;; This function calls:
  4130 ;;		_clcd_print
  4131 ;; This function is called by:
  4132 ;;		_main
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136     0EBF                     _menu_display_screen:	
  4137                           ;psect for function _menu_display_screen
  4138                           
  4139     0EBF                     l2426:	
  4140                           ;incstack = 0
  4141                           ; Regs used in _menu_display_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  4142                           
  4143                           
  4144                           ;shank.c: 235:         wait = 0;
  4145     0EBF  30D5               	movlw	low (STR_9| (0+32768))
  4146     0EC0  00F6               	movwf	clcd_print@str
  4147     0EC1  3085               	movlw	high (STR_9| (0+32768))
  4148     0EC2  00F7               	movwf	clcd_print@str+1
  4149     0EC3  3080               	movlw	128
  4150     0EC4  00F8               	movwf	clcd_print@addr
  4151     0EC5  120A  158A  26EC  120A  158A  	fcall	_clcd_print
  4152                           
  4153                           ;shank.c: 236:         blink = 0;
  4154     0ECA  30CD               	movlw	low (STR_10| (0+32768))
  4155     0ECB  00F6               	movwf	clcd_print@str
  4156     0ECC  3085               	movlw	high (STR_10| (0+32768))
  4157     0ECD  00F7               	movwf	clcd_print@str+1
  4158     0ECE  30C0               	movlw	192
  4159     0ECF  00F8               	movwf	clcd_print@addr
  4160     0ED0  120A  158A  26EC  120A  158A  	fcall	_clcd_print
  4161                           
  4162                           ;shank.c: 237:         flag = 0;
  4163     0ED5  308D               	movlw	low (STR_11| (0+32768))
  4164     0ED6  00F6               	movwf	clcd_print@str
  4165     0ED7  3085               	movlw	high (STR_11| (0+32768))
  4166     0ED8  00F7               	movwf	clcd_print@str+1
  4167     0ED9  3090               	movlw	144
  4168     0EDA  00F8               	movwf	clcd_print@addr
  4169     0EDB  120A  158A  26EC  120A  158A  	fcall	_clcd_print
  4170                           
  4171                           ;shank.c: 238:         temp =0;
  4172     0EE0  30E5               	movlw	low (STR_12| (0+32768))
  4173     0EE1  00F6               	movwf	clcd_print@str
  4174     0EE2  3085               	movlw	high (STR_12| (0+32768))
  4175     0EE3  00F7               	movwf	clcd_print@str+1
  4176     0EE4  30D0               	movlw	208
  4177     0EE5  00F8               	movwf	clcd_print@addr
  4178     0EE6  120A  158A  26EC  120A  158A  	fcall	_clcd_print
  4179     0EEB                     l226:
  4180     0EEB  0008               	return
  4181     0EEC                     __end_of_menu_display_screen:
  4182                           
  4183                           	psect	text13
  4184     0EEC                     __ptext13:	
  4185 ;; *************** function _clcd_print *****************
  4186 ;; Defined at:
  4187 ;;		line 70 in file "clcd.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  str             2    6[COMMON] PTR const unsigned char 
  4190 ;;		 -> STR_23(2), STR_22(2), STR_21(16), STR_20(7), 
  4191 ;;		 -> STR_19(17), STR_18(2), STR_17(12), STR_16(14), 
  4192 ;;		 -> STR_15(17), STR_14(9), STR_13(15), STR_12(8), 
  4193 ;;		 -> STR_11(13), STR_10(8), STR_9(8), STR_8(17), 
  4194 ;;		 -> STR_7(14), STR_6(12), STR_5(8), STR_4(9), 
  4195 ;;		 -> STR_3(16), STR_2(9), STR_1(15), 
  4196 ;;  addr            1    8[COMMON] unsigned char 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      void 
  4201 ;; Registers used:
  4202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4208 ;;      Params:         3       0       0       0       0
  4209 ;;      Locals:         0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0
  4211 ;;      Totals:         3       0       0       0       0
  4212 ;;Total ram usage:        3 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 2
  4215 ;; This function calls:
  4216 ;;		_clcd_write
  4217 ;; This function is called by:
  4218 ;;		_main
  4219 ;;		_time_display_screen
  4220 ;;		_power_on_screen
  4221 ;;		_menu_display_screen
  4222 ;;		_set_temp
  4223 ;;		_set_time
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227     0EEC                     _clcd_print:	
  4228                           ;psect for function _clcd_print
  4229                           
  4230     0EEC                     l2284:	
  4231                           ;incstack = 0
  4232                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4233                           
  4234                           
  4235                           ;clcd.c: 70: void clcd_print(const char *str, unsigned char addr);clcd.c: 71: {;clcd.c: 
      +                          72:     clcd_write(addr, 0);
  4236     0EEC  01F2               	clrf	clcd_write@mode
  4237     0EED  0878               	movf	clcd_print@addr,w
  4238     0EEE  120A  118A  24B8  120A  158A  	fcall	_clcd_write
  4239                           
  4240                           ;clcd.c: 74:     while (*str != '\0')
  4241     0EF3  2F0A               	goto	l2290
  4242     0EF4                     l2286:
  4243                           
  4244                           ;clcd.c: 75:     {;clcd.c: 76:         clcd_write(*str, 1);
  4245     0EF4  01F2               	clrf	clcd_write@mode
  4246     0EF5  0AF2               	incf	clcd_write@mode,f
  4247     0EF6  0877               	movf	clcd_print@str+1,w
  4248     0EF7  00FF               	movwf	btemp+1
  4249     0EF8  0876               	movf	clcd_print@str,w
  4250     0EF9  0084               	movwf	4
  4251     0EFA  120A  118A  24EE  120A  158A  	fcall	stringtab
  4252     0EFF  120A  118A  24B8  120A  158A  	fcall	_clcd_write
  4253     0F04                     l2288:
  4254                           
  4255                           ;clcd.c: 77:         str++;
  4256     0F04  3001               	movlw	1
  4257     0F05  07F6               	addwf	clcd_print@str,f
  4258     0F06  1803               	skipnc
  4259     0F07  0AF7               	incf	clcd_print@str+1,f
  4260     0F08  3000               	movlw	0
  4261     0F09  07F7               	addwf	clcd_print@str+1,f
  4262     0F0A                     l2290:
  4263                           
  4264                           ;clcd.c: 74:     while (*str != '\0')
  4265     0F0A  0877               	movf	clcd_print@str+1,w
  4266     0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  4267     0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  4268     0F0D  00FF               	movwf	btemp+1
  4269     0F0E  0876               	movf	clcd_print@str,w
  4270     0F0F  0084               	movwf	4
  4271     0F10  120A  118A  24EE  120A  158A  	fcall	stringtab
  4272     0F15  3A00               	xorlw	0
  4273     0F16  1D03               	skipz
  4274     0F17  2F19               	goto	u1901
  4275     0F18  2F1A               	goto	u1900
  4276     0F19                     u1901:
  4277     0F19  2EF4               	goto	l2286
  4278     0F1A                     u1900:
  4279     0F1A                     l32:
  4280     0F1A  0008               	return
  4281     0F1B                     __end_of_clcd_print:
  4282                           
  4283                           	psect	text14
  4284     0E7E                     __ptext14:	
  4285 ;; *************** function _init_config *****************
  4286 ;; Defined at:
  4287 ;;		line 15 in file "shank.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0, pclath, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4301 ;;      Params:         0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0
  4304 ;;      Totals:         0       0       0       0       0
  4305 ;;Total ram usage:        0 bytes
  4306 ;; Hardware stack levels used: 1
  4307 ;; Hardware stack levels required when called: 4
  4308 ;; This function calls:
  4309 ;;		_init_clcd
  4310 ;;		_init_matrix_keypad
  4311 ;;		_init_timer2
  4312 ;; This function is called by:
  4313 ;;		_main
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317     0E7E                     _init_config:	
  4318                           ;psect for function _init_config
  4319                           
  4320     0E7E                     l2378:	
  4321                           ;incstack = 0
  4322                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  4323                           
  4324                           
  4325                           ;shank.c: 17:    init_timer2();
  4326     0E7E  120A  158A  261F  120A  158A  	fcall	_init_clcd
  4327                           
  4328                           ;shank.c: 20:     GIE = 1;
  4329     0E83  120A  158A  2637  120A  158A  	fcall	_init_matrix_keypad
  4330     0E88                     l2380:
  4331                           
  4332                           ;shank.c: 23: void main(void) {
  4333     0E88  1683               	bsf	3,5	;RP0=1, select bank1
  4334     0E89  1303               	bcf	3,6	;RP1=0, select bank1
  4335     0E8A  1107               	bcf	7,2	;volatile
  4336     0E8B                     l2382:
  4337                           
  4338                           ;shank.c: 24:     init_config();
  4339     0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  4340     0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  4341     0E8D  1107               	bcf	7,2	;volatile
  4342     0E8E                     l2384:
  4343                           
  4344                           ;shank.c: 26: 
  4345     0E8E  1683               	bsf	3,5	;RP0=1, select bank1
  4346     0E8F  1303               	bcf	3,6	;RP1=0, select bank1
  4347     0E90  1087               	bcf	7,1	;volatile
  4348     0E91                     l2386:
  4349                           
  4350                           ;shank.c: 27: 
  4351     0E91  1283               	bcf	3,5	;RP0=0, select bank0
  4352     0E92  1303               	bcf	3,6	;RP1=0, select bank0
  4353     0E93  1087               	bcf	7,1	;volatile
  4354     0E94                     l2388:
  4355                           
  4356                           ;shank.c: 30:     while (1) {
  4357     0E94  120A  158A  262A  120A  158A  	fcall	_init_timer2
  4358     0E99                     l2390:
  4359                           
  4360                           ;shank.c: 32:         if(operation_flag == 0x02)
  4361     0E99  170B               	bsf	11,6	;volatile
  4362     0E9A                     l2392:
  4363                           
  4364                           ;shank.c: 33:         {
  4365     0E9A  178B               	bsf	11,7	;volatile
  4366     0E9B                     l168:
  4367     0E9B  0008               	return
  4368     0E9C                     __end_of_init_config:
  4369                           
  4370                           	psect	text15
  4371     0E2A                     __ptext15:	
  4372 ;; *************** function _init_timer2 *****************
  4373 ;; Defined at:
  4374 ;;		line 11 in file "timers.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		None
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4388 ;;      Params:         0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0
  4391 ;;      Totals:         0       0       0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_init_config
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402     0E2A                     _init_timer2:	
  4403                           ;psect for function _init_timer2
  4404                           
  4405     0E2A                     l1700:	
  4406                           ;incstack = 0
  4407                           ; Regs used in _init_timer2: []
  4408                           
  4409                           
  4410                           ;timers.c: 14:     T2CKPS0 = 1;
  4411     0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  4412     0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  4413     0E2C  1412               	bsf	18,0	;volatile
  4414                           
  4415                           ;timers.c: 15:     T2CKPS1 = 1;
  4416     0E2D  1492               	bsf	18,1	;volatile
  4417                           
  4418                           ;timers.c: 18:     PR2 = 250;
  4419     0E2E  30FA               	movlw	250
  4420     0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  4421     0E30  1303               	bcf	3,6	;RP1=0, select bank1
  4422     0E31  0092               	movwf	18	;volatile
  4423                           
  4424                           ;timers.c: 21:     TMR2IE = 1;
  4425     0E32  148C               	bsf	12,1	;volatile
  4426                           
  4427                           ;timers.c: 24:     TMR2ON = 0;
  4428     0E33  1283               	bcf	3,5	;RP0=0, select bank0
  4429     0E34  1303               	bcf	3,6	;RP1=0, select bank0
  4430     0E35  1112               	bcf	18,2	;volatile
  4431     0E36                     l292:
  4432     0E36  0008               	return
  4433     0E37                     __end_of_init_timer2:
  4434                           
  4435                           	psect	text16
  4436     0E37                     __ptext16:	
  4437 ;; *************** function _init_matrix_keypad *****************
  4438 ;; Defined at:
  4439 ;;		line 12 in file "matrix_keypad.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;		None
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, status,2
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4453 ;;      Params:         0       0       0       0       0
  4454 ;;      Locals:         0       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0
  4456 ;;      Totals:         0       0       0       0       0
  4457 ;;Total ram usage:        0 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; Hardware stack levels required when called: 1
  4460 ;; This function calls:
  4461 ;;		Nothing
  4462 ;; This function is called by:
  4463 ;;		_init_config
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467     0E37                     _init_matrix_keypad:	
  4468                           ;psect for function _init_matrix_keypad
  4469                           
  4470     0E37                     l1584:	
  4471                           ;incstack = 0
  4472                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  4473                           
  4474                           
  4475                           ;matrix_keypad.c: 16:     TRISB = TRISB | 0x07;
  4476     0E37  1683               	bsf	3,5	;RP0=1, select bank1
  4477     0E38  1303               	bcf	3,6	;RP1=0, select bank1
  4478     0E39  0806               	movf	6,w	;volatile
  4479     0E3A  3807               	iorlw	7
  4480     0E3B  0086               	movwf	6	;volatile
  4481                           
  4482                           ;matrix_keypad.c: 19:     TRISD = TRISD & 0xF0;
  4483     0E3C  0808               	movf	8,w	;volatile
  4484     0E3D  39F0               	andlw	240
  4485     0E3E  0088               	movwf	8	;volatile
  4486     0E3F                     l1586:
  4487                           
  4488                           ;matrix_keypad.c: 22:     nRBPU = 0;
  4489     0E3F  1381               	bcf	1,7	;volatile
  4490     0E40                     l1588:
  4491                           
  4492                           ;matrix_keypad.c: 25:     RD3 = 1;
  4493     0E40  1283               	bcf	3,5	;RP0=0, select bank0
  4494     0E41  1303               	bcf	3,6	;RP1=0, select bank0
  4495     0E42  1588               	bsf	8,3	;volatile
  4496     0E43                     l1590:
  4497                           
  4498                           ;matrix_keypad.c: 26:     RD2 = 1;
  4499     0E43  1508               	bsf	8,2	;volatile
  4500     0E44                     l1592:
  4501                           
  4502                           ;matrix_keypad.c: 27:     RD1 = 1;
  4503     0E44  1488               	bsf	8,1	;volatile
  4504     0E45                     l1594:
  4505                           
  4506                           ;matrix_keypad.c: 28:     RD0 = 1;
  4507     0E45  1408               	bsf	8,0	;volatile
  4508     0E46                     l73:
  4509     0E46  0008               	return
  4510     0E47                     __end_of_init_matrix_keypad:
  4511                           
  4512                           	psect	text17
  4513     0E1F                     __ptext17:	
  4514 ;; *************** function _init_clcd *****************
  4515 ;; Defined at:
  4516 ;;		line 52 in file "clcd.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0, pclath, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4530 ;;      Params:         0       0       0       0       0
  4531 ;;      Locals:         0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0
  4533 ;;      Totals:         0       0       0       0       0
  4534 ;;Total ram usage:        0 bytes
  4535 ;; Hardware stack levels used: 1
  4536 ;; Hardware stack levels required when called: 3
  4537 ;; This function calls:
  4538 ;;		_init_display_controller
  4539 ;; This function is called by:
  4540 ;;		_init_config
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544     0E1F                     _init_clcd:	
  4545                           ;psect for function _init_clcd
  4546                           
  4547     0E1F                     l2274:	
  4548                           ;incstack = 0
  4549                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  4550                           
  4551                           
  4552                           ;clcd.c: 55:     TRISD = 0x00;
  4553     0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  4554     0E20  1303               	bcf	3,6	;RP1=0, select bank1
  4555     0E21  0188               	clrf	8	;volatile
  4556     0E22                     l2276:
  4557                           
  4558                           ;clcd.c: 58:     TRISE2 = 0;
  4559     0E22  1109               	bcf	9,2	;volatile
  4560     0E23                     l2278:
  4561                           
  4562                           ;clcd.c: 59:     TRISE1 = 0;
  4563     0E23  1089               	bcf	9,1	;volatile
  4564     0E24                     l2280:
  4565                           
  4566                           ;clcd.c: 61:     init_display_controller();
  4567     0E24  120A  158A  2750  120A  158A  	fcall	_init_display_controller
  4568     0E29                     l23:
  4569     0E29  0008               	return
  4570     0E2A                     __end_of_init_clcd:
  4571                           
  4572                           	psect	text18
  4573     0F50                     __ptext18:	
  4574 ;; *************** function _init_display_controller *****************
  4575 ;; Defined at:
  4576 ;;		line 29 in file "clcd.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0, pclath, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4590 ;;      Params:         0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0
  4592 ;;      Temps:          2       0       0       0       0
  4593 ;;      Totals:         2       0       0       0       0
  4594 ;;Total ram usage:        2 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; Hardware stack levels required when called: 2
  4597 ;; This function calls:
  4598 ;;		_clcd_write
  4599 ;; This function is called by:
  4600 ;;		_init_clcd
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604     0F50                     _init_display_controller:	
  4605                           ;psect for function _init_display_controller
  4606                           
  4607     0F50                     l2254:	
  4608                           ;incstack = 0
  4609                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  4610                           
  4611                           
  4612                           ;clcd.c: 32:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4613     0F50  30C3               	movlw	195
  4614     0F51  00F7               	movwf	??_init_display_controller+1
  4615     0F52  30CD               	movlw	205
  4616     0F53  00F6               	movwf	??_init_display_controller
  4617     0F54                     u2637:
  4618     0F54  0BF6               	decfsz	??_init_display_controller,f
  4619     0F55  2F54               	goto	u2637
  4620     0F56  0BF7               	decfsz	??_init_display_controller+1,f
  4621     0F57  2F54               	goto	u2637
  4622     0F58                     l2256:
  4623                           
  4624                           ;clcd.c: 35:     clcd_write(0x33, 0);
  4625     0F58  01F2               	clrf	clcd_write@mode
  4626     0F59  3033               	movlw	51
  4627     0F5A  120A  118A  24B8  120A  158A  	fcall	_clcd_write
  4628     0F5F                     l2258:
  4629                           
  4630                           ;clcd.c: 36:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4631     0F5F  301B               	movlw	27
  4632     0F60  00F7               	movwf	??_init_display_controller+1
  4633     0F61  309E               	movlw	158
  4634     0F62  00F6               	movwf	??_init_display_controller
  4635     0F63                     u2647:
  4636     0F63  0BF6               	decfsz	??_init_display_controller,f
  4637     0F64  2F63               	goto	u2647
  4638     0F65  0BF7               	decfsz	??_init_display_controller+1,f
  4639     0F66  2F63               	goto	u2647
  4640     0F67  0000               	nop
  4641                           
  4642                           ;clcd.c: 37:     clcd_write(0x33, 0);
  4643     0F68  01F2               	clrf	clcd_write@mode
  4644     0F69  3033               	movlw	51
  4645     0F6A  120A  118A  24B8  120A  158A  	fcall	_clcd_write
  4646     0F6F                     l2260:
  4647                           
  4648                           ;clcd.c: 38:      _delay((unsigned long)((100)*(20000000/4000000.0)));
  4649     0F6F  30A6               	movlw	166
  4650     0F70  00F6               	movwf	??_init_display_controller
  4651     0F71                     u2657:
  4652     0F71  0BF6               	decfsz	??_init_display_controller,f
  4653     0F72  2F71               	goto	u2657
  4654     0F73  0000               	nop
  4655     0F74                     l2262:
  4656                           
  4657                           ;clcd.c: 39:     clcd_write(0x33, 0);
  4658     0F74  01F2               	clrf	clcd_write@mode
  4659     0F75  3033               	movlw	51
  4660     0F76  120A  118A  24B8  120A  158A  	fcall	_clcd_write
  4661     0F7B                     l2264:
  4662                           
  4663                           ;clcd.c: 40:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4664     0F7B  2F7C               	nop2	;2 cycle nop
  4665     0F7C  2F7D               	nop2	;2 cycle nop
  4666     0F7D  0000               	nop
  4667     0F7E                     l2266:
  4668                           
  4669                           ;clcd.c: 42:     clcd_write(0x02, 0);
  4670     0F7E  01F2               	clrf	clcd_write@mode
  4671     0F7F  3002               	movlw	2
  4672     0F80  120A  118A  24B8  120A  158A  	fcall	_clcd_write
  4673     0F85                     l2268:
  4674                           
  4675                           ;clcd.c: 43:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4676     0F85  30A6               	movlw	166
  4677     0F86  00F6               	movwf	??_init_display_controller
  4678     0F87                     u2667:
  4679     0F87  0BF6               	decfsz	??_init_display_controller,f
  4680     0F88  2F87               	goto	u2667
  4681     0F89  0000               	nop
  4682                           
  4683                           ;clcd.c: 45:     clcd_write(0x01, 0);
  4684     0F8A  01F2               	clrf	clcd_write@mode
  4685     0F8B  3001               	movlw	1
  4686     0F8C  120A  118A  24B8  120A  158A  	fcall	_clcd_write
  4687     0F91                     l2270:
  4688                           
  4689                           ;clcd.c: 46:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4690     0F91  3004               	movlw	4
  4691     0F92  00F7               	movwf	??_init_display_controller+1
  4692     0F93  303D               	movlw	61
  4693     0F94  00F6               	movwf	??_init_display_controller
  4694     0F95                     u2677:
  4695     0F95  0BF6               	decfsz	??_init_display_controller,f
  4696     0F96  2F95               	goto	u2677
  4697     0F97  0BF7               	decfsz	??_init_display_controller+1,f
  4698     0F98  2F95               	goto	u2677
  4699     0F99  2F9A               	nop2
  4700     0F9A                     l2272:
  4701                           
  4702                           ;clcd.c: 48:     clcd_write(0x0C, 0);
  4703     0F9A  01F2               	clrf	clcd_write@mode
  4704     0F9B  300C               	movlw	12
  4705     0F9C  120A  118A  24B8  120A  158A  	fcall	_clcd_write
  4706                           
  4707                           ;clcd.c: 49:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4708     0FA1  30A6               	movlw	166
  4709     0FA2  00F6               	movwf	??_init_display_controller
  4710     0FA3                     u2687:
  4711     0FA3  0BF6               	decfsz	??_init_display_controller,f
  4712     0FA4  2FA3               	goto	u2687
  4713     0FA5  0000               	nop
  4714     0FA6                     l20:
  4715     0FA6  0008               	return
  4716     0FA7                     __end_of_init_display_controller:
  4717                           
  4718                           	psect	text19
  4719     04B8                     __ptext19:	
  4720 ;; *************** function _clcd_write *****************
  4721 ;; Defined at:
  4722 ;;		line 12 in file "clcd.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  byte            1    wreg     unsigned char 
  4725 ;;  mode            1    2[COMMON] unsigned char 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  byte            1    5[COMMON] unsigned char 
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2, status,0
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4737 ;;      Params:         1       0       0       0       0
  4738 ;;      Locals:         1       0       0       0       0
  4739 ;;      Temps:          2       0       0       0       0
  4740 ;;      Totals:         4       0       0       0       0
  4741 ;;Total ram usage:        4 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 1
  4744 ;; This function calls:
  4745 ;;		Nothing
  4746 ;; This function is called by:
  4747 ;;		_init_display_controller
  4748 ;;		_clcd_putch
  4749 ;;		_clcd_print
  4750 ;;		_clear_screen
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754     04B8                     _clcd_write:	
  4755                           ;psect for function _clcd_write
  4756                           
  4757                           
  4758                           ;incstack = 0
  4759                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  4760                           ;clcd_write@byte stored from wreg
  4761     04B8  00F5               	movwf	clcd_write@byte
  4762     04B9                     l2234:
  4763                           
  4764                           ;clcd.c: 12: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 13: {;clcd.
      +                          c: 14:     RE2 = (__bit)mode;
  4765     04B9  1872               	btfsc	clcd_write@mode,0
  4766     04BA  2CBC               	goto	u1871
  4767     04BB  2CC0               	goto	u1870
  4768     04BC                     u1871:
  4769     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  4770     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  4771     04BE  1509               	bsf	9,2	;volatile
  4772     04BF  2CC3               	goto	u1884
  4773     04C0                     u1870:
  4774     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  4775     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  4776     04C2  1109               	bcf	9,2	;volatile
  4777     04C3                     u1884:
  4778     04C3                     l2236:
  4779                           
  4780                           ;clcd.c: 15:     PORTD = byte & 0xF0;
  4781     04C3  0875               	movf	clcd_write@byte,w
  4782     04C4  39F0               	andlw	240
  4783     04C5  0088               	movwf	8	;volatile
  4784     04C6                     l2238:
  4785                           
  4786                           ;clcd.c: 17:     RE1 = 1;
  4787     04C6  1489               	bsf	9,1	;volatile
  4788     04C7                     l2240:
  4789                           
  4790                           ;clcd.c: 18:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4791     04C7  30A6               	movlw	166
  4792     04C8  00F3               	movwf	??_clcd_write
  4793     04C9                     u2697:
  4794     04C9  0BF3               	decfsz	??_clcd_write,f
  4795     04CA  2CC9               	goto	u2697
  4796     04CB  0000               	nop
  4797     04CC                     l2242:
  4798                           
  4799                           ;clcd.c: 19:     RE1 = 0;
  4800     04CC  1283               	bcf	3,5	;RP0=0, select bank0
  4801     04CD  1303               	bcf	3,6	;RP1=0, select bank0
  4802     04CE  1089               	bcf	9,1	;volatile
  4803     04CF                     l2244:
  4804                           
  4805                           ;clcd.c: 21:     PORTD = (unsigned char)((byte & 0x0F) << 4);
  4806     04CF  0875               	movf	clcd_write@byte,w
  4807     04D0  390F               	andlw	15
  4808     04D1  00F3               	movwf	??_clcd_write
  4809     04D2  3003               	movlw	3
  4810     04D3                     u1895:
  4811     04D3  1003               	clrc
  4812     04D4  0DF3               	rlf	??_clcd_write,f
  4813     04D5  3EFF               	addlw	-1
  4814     04D6  1D03               	skipz
  4815     04D7  2CD3               	goto	u1895
  4816     04D8  1003               	clrc
  4817     04D9  0D73               	rlf	??_clcd_write,w
  4818     04DA  0088               	movwf	8	;volatile
  4819     04DB                     l2246:
  4820                           
  4821                           ;clcd.c: 22:     RE1 = 1;
  4822     04DB  1489               	bsf	9,1	;volatile
  4823     04DC                     l2248:
  4824                           
  4825                           ;clcd.c: 23:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4826     04DC  30A6               	movlw	166
  4827     04DD  00F3               	movwf	??_clcd_write
  4828     04DE                     u2707:
  4829     04DE  0BF3               	decfsz	??_clcd_write,f
  4830     04DF  2CDE               	goto	u2707
  4831     04E0  0000               	nop
  4832     04E1                     l2250:
  4833                           
  4834                           ;clcd.c: 24:     RE1 = 0;
  4835     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  4836     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  4837     04E3  1089               	bcf	9,1	;volatile
  4838     04E4                     l2252:
  4839                           
  4840                           ;clcd.c: 26:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4841     04E4  301B               	movlw	27
  4842     04E5  00F4               	movwf	??_clcd_write+1
  4843     04E6  309E               	movlw	158
  4844     04E7  00F3               	movwf	??_clcd_write
  4845     04E8                     u2717:
  4846     04E8  0BF3               	decfsz	??_clcd_write,f
  4847     04E9  2CE8               	goto	u2717
  4848     04EA  0BF4               	decfsz	??_clcd_write+1,f
  4849     04EB  2CE8               	goto	u2717
  4850     04EC  0000               	nop
  4851     04ED                     l17:
  4852     04ED  0008               	return
  4853     04EE                     __end_of_clcd_write:
  4854                           
  4855                           	psect	text20
  4856     0F1B                     __ptext20:	
  4857 ;; *************** function _isr *****************
  4858 ;; Defined at:
  4859 ;;		line 13 in file "isr.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;		None
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4873 ;;      Params:         0       0       0       0       0
  4874 ;;      Locals:         0       0       0       0       0
  4875 ;;      Temps:          2       0       0       0       0
  4876 ;;      Totals:         2       0       0       0       0
  4877 ;;Total ram usage:        2 bytes
  4878 ;; Hardware stack levels used: 1
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		Interrupt level 1
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886     0F1B                     _isr:	
  4887                           ;psect for function _isr
  4888                           
  4889     0F1B                     i1l2070:
  4890                           
  4891                           ;isr.c: 15:     static unsigned int count =0;;isr.c: 16:     if(TMR2IF == 1)
  4892     0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  4893     0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  4894     0F1D  1C8C               	btfss	12,1	;volatile
  4895     0F1E  2F20               	goto	u167_21
  4896     0F1F  2F21               	goto	u167_20
  4897     0F20                     u167_21:
  4898     0F20  2F49               	goto	i1l50
  4899     0F21                     u167_20:
  4900     0F21                     i1l2072:
  4901                           
  4902                           ;isr.c: 17:     {;isr.c: 18:         if(++count == 1250)
  4903     0F21  3001               	movlw	1
  4904     0F22  07F9               	addwf	isr@count,f
  4905     0F23  1803               	skipnc
  4906     0F24  0AFA               	incf	isr@count+1,f
  4907     0F25  3000               	movlw	0
  4908     0F26  07FA               	addwf	isr@count+1,f
  4909     0F27  30E2               	movlw	226
  4910     0F28  0679               	xorwf	isr@count,w
  4911     0F29  3004               	movlw	4
  4912     0F2A  1903               	skipnz
  4913     0F2B  067A               	xorwf	isr@count+1,w
  4914     0F2C  1D03               	btfss	3,2
  4915     0F2D  2F2F               	goto	u168_21
  4916     0F2E  2F30               	goto	u168_20
  4917     0F2F                     u168_21:
  4918     0F2F  2F48               	goto	i1l2088
  4919     0F30                     u168_20:
  4920     0F30                     i1l2074:
  4921                           
  4922                           ;isr.c: 19:         {;isr.c: 20:             count=0;
  4923     0F30  01F9               	clrf	isr@count
  4924     0F31  01FA               	clrf	isr@count+1
  4925     0F32                     i1l2076:
  4926                           
  4927                           ;isr.c: 21:             if(sec>0)
  4928     0F32  0840               	movf	_sec,w
  4929     0F33  1903               	btfsc	3,2
  4930     0F34  2F36               	goto	u169_21
  4931     0F35  2F37               	goto	u169_20
  4932     0F36                     u169_21:
  4933     0F36  2F3A               	goto	i1l2080
  4934     0F37                     u169_20:
  4935     0F37                     i1l2078:
  4936                           
  4937                           ;isr.c: 22:             {;isr.c: 23:                 sec--;
  4938     0F37  3001               	movlw	1
  4939     0F38  02C0               	subwf	_sec,f
  4940                           
  4941                           ;isr.c: 24:             }
  4942     0F39  2F48               	goto	i1l2088
  4943     0F3A                     i1l2080:
  4944     0F3A  0840               	movf	_sec,w
  4945     0F3B  1D03               	btfss	3,2
  4946     0F3C  2F3E               	goto	u170_21
  4947     0F3D  2F3F               	goto	u170_20
  4948     0F3E                     u170_21:
  4949     0F3E  2F48               	goto	i1l2088
  4950     0F3F                     u170_20:
  4951     0F3F                     i1l2082:
  4952     0F3F  083F               	movf	_min,w
  4953     0F40  1903               	btfsc	3,2
  4954     0F41  2F43               	goto	u171_21
  4955     0F42  2F44               	goto	u171_20
  4956     0F43                     u171_21:
  4957     0F43  2F48               	goto	i1l2088
  4958     0F44                     u171_20:
  4959     0F44                     i1l2084:
  4960                           
  4961                           ;isr.c: 26:             {;isr.c: 27:                 min--;
  4962     0F44  3001               	movlw	1
  4963     0F45  02BF               	subwf	_min,f
  4964     0F46                     i1l2086:
  4965                           
  4966                           ;isr.c: 28:                 sec=59;
  4967     0F46  303B               	movlw	59
  4968     0F47  00C0               	movwf	_sec
  4969     0F48                     i1l2088:
  4970                           
  4971                           ;isr.c: 31:         TMR2IF=0;
  4972     0F48  108C               	bcf	12,1	;volatile
  4973     0F49                     i1l50:
  4974     0F49  0871               	movf	??_isr+1,w
  4975     0F4A  008A               	movwf	10
  4976     0F4B  0E70               	swapf	??_isr,w
  4977     0F4C  0083               	movwf	3
  4978     0F4D  0EFE               	swapf	btemp,f
  4979     0F4E  0E7E               	swapf	btemp,w
  4980     0F4F  0009               	retfie
  4981     0F50                     __end_of_isr:
  4982     0002                     ___latbits      equ	2
  4983     007E                     btemp           set	126	;btemp
  4984     007E                     wtemp0          set	126
  4985                           
  4986                           	psect	intentry
  4987     0004                     __pintentry:	
  4988                           ;incstack = 0
  4989                           ; Regs used in _isr: [wreg+status,2+status,0]
  4990                           
  4991     0004                     interrupt_function:
  4992     007E                     saved_w         set	btemp
  4993     0004  00FE               	movwf	btemp
  4994     0005  0E03               	swapf	3,w
  4995     0006  00F0               	movwf	??_isr
  4996     0007  080A               	movf	10,w
  4997     0008  00F1               	movwf	??_isr+1
  4998     0009  120A  158A  2F1B   	ljmp	_isr
  4999                           
  5000                           	psect	config
  5001                           
  5002                           ;Config register CONFIG @ 0x2007
  5003                           ;	Oscillator Selection bits
  5004                           ;	FOSC = 0x3, unprogrammed default
  5005                           ;	Watchdog Timer Enable bit
  5006                           ;	WDTE = OFF, WDT disabled
  5007                           ;	Power-up Timer Enable bit
  5008                           ;	PWRTE = 0x1, unprogrammed default
  5009                           ;	Brown-out Reset Enable bit
  5010                           ;	BOREN = 0x1, unprogrammed default
  5011                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5012                           ;	LVP = 0x1, unprogrammed default
  5013                           ;	Data EEPROM Memory Code Protection bit
  5014                           ;	CPD = 0x1, unprogrammed default
  5015                           ;	Flash Program Memory Write Enable bits
  5016                           ;	WRT = 0x3, unprogrammed default
  5017                           ;	In-Circuit Debugger Mode bit
  5018                           ;	DEBUG = 0x1, unprogrammed default
  5019                           ;	Flash Program Memory Code Protection bit
  5020                           ;	CP = 0x1, unprogrammed default
  5021     2007                     	org	8199
  5022     2007  3FFB               	dw	16379

Data Sizes:
    Strings     244
    Constant    0
    Data        3
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     20      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[15]), STR_10(CODE[8]), STR_11(CODE[13]), STR_12(CODE[8]), 
		 -> STR_13(CODE[15]), STR_14(CODE[9]), STR_15(CODE[17]), STR_16(CODE[14]), 
		 -> STR_17(CODE[12]), STR_18(CODE[2]), STR_19(CODE[17]), STR_2(CODE[9]), 
		 -> STR_20(CODE[7]), STR_21(CODE[16]), STR_22(CODE[2]), STR_23(CODE[2]), 
		 -> STR_3(CODE[16]), STR_4(CODE[9]), STR_5(CODE[8]), STR_6(CODE[12]), 
		 -> STR_7(CODE[14]), STR_8(CODE[17]), STR_9(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _time_display_screen->_clcd_print
    _time_display_screen->_clcd_putch
    _set_time->_clcd_print
    _set_time->_clcd_putch
    _set_temp->_clcd_print
    _set_temp->_clcd_putch
    _clear_screen->_clcd_write
    ___awmod->___awdiv
    _read_matrix_keypad->_scan_keypad
    _power_on_screen->_clcd_print
    _power_on_screen->_clcd_putch
    _clcd_putch->___awmod
    _menu_display_screen->_clcd_print
    _clcd_print->_clcd_write
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_set_temp
    _main->_set_time
    _time_display_screen->_clcd_putch
    _set_time->_clcd_putch
    _set_temp->_clcd_putch
    ___awmod->___awdiv
    _power_on_screen->_clcd_putch
    _clcd_putch->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    8978
                                             14 BANK0      6     6      0
                         _clcd_print
                       _clear_screen
                        _init_config
                _menu_display_screen
                    _power_on_screen
                 _read_matrix_keypad
                           _set_temp
                           _set_time
                _time_display_screen
 ---------------------------------------------------------------------------------
 (1) _time_display_screen                                  3     3      0    1765
                                              9 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (1) _set_time                                             5     3      2    2248
                                              9 BANK0      5     3      2
                            ___awdiv
                            ___awmod
                             ___bmul
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (1) _set_temp                                             5     3      2    2195
                                              9 BANK0      5     3      2
                            ___awdiv
                            ___awmod
                             ___bmul
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (2) _clear_screen                                         2     2      0     158
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     108
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     461
                                              6 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     467
                                              2 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   2     2      0     279
                                              4 COMMON     2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0     161
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _power_on_screen                                      4     4      0     877
                                              9 BANK0      4     4      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1     287
                                              8 COMMON     1     1      0
                                              8 BANK0      1     0      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _menu_display_screen                                  0     0      0     392
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3     392
                                              6 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     158
                          _init_clcd
                 _init_matrix_keypad
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     158
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     158
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1     158
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clear_screen
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
     _init_timer2
   _menu_display_screen
     _clcd_print
   _power_on_screen
     _clcd_print
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _clcd_write (ARG)
   _read_matrix_keypad
     _scan_keypad
   _set_temp
     ___awdiv
     ___awmod
     ___bmul
     _clcd_print
     _clcd_putch
     _clear_screen
   _set_time
     ___awdiv
     ___awmod
     ___bmul
     _clcd_print
     _clcd_putch
     _clear_screen
   _time_display_screen
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clear_screen

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     20      35     43.8%
BITBANK0            80      0       0      0.0%
COMMON              14      9      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      48      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Mar 18 13:50:22 2025

                              pc 0002                   ___bmul@product 0073                   clcd_print@addr 0078  
                             l20 0FA6                               l23 0E29                               l32 0F1A  
                             l17 04ED                               l26 0E6A                               l80 0790  
                             l73 0E46                               l81 0702                               l82 06FC  
                             l93 074C                               l94 0754                               l86 071D  
                             l78 06EE                               l95 0760                               l87 0725  
                             l79 06F6                               l96 075A                               l88 0731  
                             l89 072B                     ___awdiv@sign 0021                               fsr 0004  
             _init_matrix_keypad 0E37                              l100 077B                              l101 0783  
                            l103 0789                              l111 0EBE                              l213 06D5  
                            l206 041E                              l223 07FD                              l207 0421  
                            l216 0E57                              l226 0EEB                              l250 01A0  
                            l404 0E7D                              l168 0E9B                              l176 0376  
                            l531 04B7                              l292 0E36                              l279 02FA  
                            l544 0FFF                              _GIE 005F                              _RB0 0030  
                            _RB1 0031                              _RB2 0032                              _RC1 0039  
                            _RD0 0040                              _RC2 003A                              _RD1 0041  
                            _RD2 0042                              _RE1 0049                              _RD3 0043  
                            _RE2 004A                              _PR2 0092                              u940 06EE  
                            u941 06ED                              u950 06F4                              u951 06F3  
                            u960 06FA                              u961 06F9                              u970 0700  
                            u971 06FF                              u980 071D                              u981 071C  
                            u990 0723                              u991 0722                              u985 0719  
                            _min 003F                              _sec 0040                              _isr 0F1B  
                 clcd_putch@addr 0028                              fsr0 0004                   clcd_putch@data 0078  
                            indf 0000                     ___awmod@sign 0077              ?_init_matrix_keypad 0070  
                           l2300 045A                             l2310 046C                             l2302 045F  
                           l2240 04C7                             l2400 0794                             l1600 06E0  
                           l2320 0480                             l2312 046E                             l2304 0461  
                           l2250 04E1                             l2242 04CC                             l2234 04B9  
                           l2410 07CB                             l2402 079D                             l1602 06F4  
                           l2330 04A3                             l2322 0484                             l2314 0474  
                           l2306 0465                             l2252 04E4                             l2244 04CF  
                           l2236 04C3                             l2260 0F6F                             l1700 0E2A  
                           l2420 07E5                             l2404 07AB                             l2324 0495  
                           l2316 0477                             l2332 04A9                             l2308 046A  
                           l2340 0FA7                             l2500 02D2                             l2246 04DB  
                           l2238 04C6                             l2270 0F91                             l2262 0F74  
                           l2254 0F50                             l2422 07E9                             l2406 07AF  
                           l1614 0700                             l2334 04AE                             l2326 049B  
                           l2318 047E                             l2350 0FB9                             l2342 0FA8  
                           l1710 0E71                             l2510 02F2                             l2430 01AB  
                           l2248 04DC                             l2272 0F9A                             l2264 0F7B  
                           l2256 0F58                             l2280 0E24                             l2424 07EF  
                           l2416 07CE                             l2408 07B5                             l1640 072F  
                           l1624 070A                             l1608 06FA                             l2336 04B3  
                           l2328 049C                             l2360 0FD0                             l2352 0FBE  
                           l2344 0FAE                             l1712 0E73                             l2520 0051  
                           l2512 0037                             l2504 02DA                             l2432 01B2  
                           l2440 01D5                             l2600 06AB                             l2266 0F7E  
                           l2258 0F5F                             l2274 0E1F                             l2290 0F0A  
                           l2426 0EBF                             l2282 0E59                             l2418 07D7  
                           l1650 0739                             l1634 0729                             l1626 0710  
                           l1618 0706                             l1802 0E9D                             l2362 0FD4  
                           l2354 0FC4                             l2370 0FF1                             l2346 0FB3  
                           l1714 0E75                             l1706 0E6C                             l2530 007A  
                           l2522 005C                             l2514 003E                             l2506 02E6  
                           l2450 01F0                             l2442 01DD                             l2434 01B4  
                           l2610 06CF                             l2602 06B6                             l2268 0F85  
                           l2276 0E22                             l2380 0E88                             l2284 0EEC  
                           l1660 0758                             l1652 073F                             l1644 0735  
                           l1628 0723                             l1812 0EAA                             l1804 0EA3  
                           l2372 0FF6                             l2364 0FDE                             l2356 0FC7  
                           l2348 0FB5                             l1716 0E7C                             l1708 0E6D  
                           l2292 0E47                             l2540 0098                             l2532 007C  
                           l2516 0044                             l2524 0067                             l2460 0216  
                           l2452 01FC                             l2444 01E3                             l2436 01BF  
                           l2428 01A4                             l2612 06D0                             l2604 06B9  
                           l2700 03E6                             l2620 0309                             l2278 0E23  
                           l1590 0E43                             l2390 0E99                             l2382 0E8B  
                           l2286 0EF4                             l1670 0764                             l1654 0752  
                           l1814 0EAF                             l1806 0EA8                             l2374 0FFB  
                           l2366 0FE4                             l2358 0FCE                             l2294 0E4E  
                           l2550 00BC                             l2542 009E                             l2534 0082  
                           l2526 006F                             l2518 0046                             l2470 022C  
                           l2454 01FE                             l2446 01E8                             l2462 0219  
                           l2438 01CA                             l2614 06D1                             l2606 06C7  
                           l2702 03EB                             l2710 0408                             l2630 032D  
                           l2622 0310                             l1592 0E44                             l1584 0E37  
                           l2392 0E9A                             l2384 0E8E                             l2288 0F04  
                           l1680 0781                             l1816 0EB4                             l1824 0EB6  
                           l2296 0453                             l2368 0FEB                             l2552 00BF  
                           l2544 00A3                             l2560 0115                             l2528 0075  
                           l2536 008F                             l2480 0241                             l2472 022D  
                           l2464 021F                             l2456 0204                             l2448 01EA  
                           l2608 06CC                             l2712 040D                             l2704 03F5  
                           l2640 0350                             l2720 0428                             l2632 033B  
                           l2624 0315                             l2616 02FB                             l1594 0E45  
                           l1586 0E3F                             l2386 0E91                             l2378 0E7E  
                           l2394 0791                             l1666 075E                             l1826 0EBB  
                           l2298 0456                             l2570 0171                             l2562 0122  
                           l2554 0106                             l2546 00AE                             l2538 0095  
                           l2490 025A                             l2482 0242                             l2466 0224  
                           l2474 0230                             l2458 020A                             l2714 0418  
                           l2706 03FC                             l2722 0449                             l2650 0367  
                           l2642 0356                             l2626 031D                             l2634 0341  
                           l2618 0300                             l1588 0E40                             l2388 0E94  
                           l1692 078D                             l1676 0768                             l1596 06D6  
                           l1828 0EBD                             l2564 0124                             l2572 018E  
                           l2556 010D                             l2548 00B9                             l2492 0273  
                           l2476 0236                             l2468 0227                             l2484 0243  
                           l2580 061A                             l2716 0423                             l2708 0401  
                           l2652 0368                             l2636 0347                             l2628 0322  
                           l2660 0377                             l1686 0787                             l1678 076E  
                           l1598 06DC                             l2574 0195                             l2566 012C  
                           l2558 0112                             l2494 0290                             l2486 0250  
                           l2478 023B                             l2590 0684                             l2582 0637  
                           l2670 0393                             l2662 037E                             l2654 0369  
                           l2646 035F                             l1696 078F                             l2568 0145  
                           l2496 029A                             l2488 0252                             l2592 068F  
                           l2584 0641                             l2576 05F4                             l2760 042F  
                           l2672 0399                             l2664 0384                             l2680 03A9  
                           l2656 036A                             l2648 0365                             l2498 02B5  
                           l2594 069A                             l2586 065C                             l2578 05FF  
                           l2690 03BE                             l2682 03B0                             l2674 039E  
                           l2666 0387                             l2658 036F                             l2596 06A1  
                           l2588 0679                             l2692 03C4                             l2684 03B6  
                           l2676 03A4                             l2668 038D                             l2598 06A6  
                           l2694 03CA                             l2696 03D0                             l2688 03B9  
                           l2698 03DB                             ?_isr 0070                             STR_1 0553  
                           STR_2 05B2                             STR_3 0543                             STR_4 05C4  
                           STR_5 05DD                             STR_6 05A6                             STR_7 0571  
                           STR_8 0500                             STR_9 05D5                             u1000 0729  
                           u1001 0728                             u1010 072F                             u1011 072E  
                           u1020 074C                             u1100 0E71                             u1021 074B  
                           u1101 0E70                             u1030 0752                             u1110 0E7C  
                           u1031 0751                             u1111 0E7B                             u1040 0758  
                           u2000 04AE                             u1041 0757                             u1025 0748  
                           u2001 04AD                             u1050 075E                             u2010 0FAE  
                           u1051 075D                             u2011 0FAD                             u2100 07B5  
                           u1060 077B                             u2020 0FB9                             u2101 07B4  
                           u1061 077A                             u2021 0FB8                             u2110 07EF  
                           u1070 0781                             u1310 0EA8                             u2030 0FC4  
                           u2111 07EE                             u1071 0780                             u1311 0EA7  
                           u2031 0FC3                             u1080 0787                             u1320 0EAF  
                           u2200 0224                             u2120 01AB                             u1081 0786  
                           u1065 0777                             u1321 0EAE                             u2201 0223  
                           u2121 01AA                             u1090 078D                             u1330 0EB4  
                           u2050 0FD4                             u2210 022C                             u2130 01DD  
                           u1091 078C                             u1331 0EB3                             u2051 0FD3  
                           u2211 022B                             u2131 01DC                             u1340 0EBB  
                           u2060 0FDE                             u2300 007A                             u2220 0236  
                           u2140 01E3                             u1341 0EBA                             u2061 0FDD  
                           u2045 0FC8                             u2301 0079                             u2221 0235  
                           u2141 01E2                             u2310 0082                             u2230 0250  
                           u2150 01E8                             u2311 0081                             u2231 024F  
                           u2151 01E7                             u2080 0FF1                             u2320 0095  
                           u2240 0258                             u2160 01F0                             u2400 06A1  
                           u2081 0FF0                             u2065 0FDA                             u2321 0094  
                           u2241 0256                             u2161 01EF                             u2401 06A0  
                           u2090 0FF6                             u2330 009E                             u2250 0259  
                           u2170 0204                             u2410 06A6                             u2091 0FF5  
                           u2075 0FE5                             u2331 009D                             u2171 0203  
                           u2411 06A5                             u2340 010D                             u2260 02D9  
                           u2180 020A                             u2500 0399                             u2420 0310  
                           u2341 010C                             u2261 02D8                             u2181 0209  
                           u2501 0398                             u2421 030F                             u2350 0112  
                           u2270 003E                             u2190 021F                             u2510 03A4  
                           u2430 0315                             u2351 0111                             u2271 003D  
                           u2191 021E                             u2511 03A3                             u2431 0314  
                           u2360 0122                             u2280 006F                             u2520 03B0  
                           u2440 0347                             u2361 0121                             u2281 006E  
                           u2521 03AF                             u2441 0346                             u2370 012A  
                           u2290 0075                             u2530 03B6                             u2450 0356  
                           u2371 0128                             u2291 0074                             u2531 03B5  
                           u2451 0355                             u1900 0F1A                             u2380 012B  
                           u2540 03EB                             u2460 0365                             u1901 0F19  
                           u2541 03EA                             u2461 0364                             u1910 045A  
                           u2390 0195                             u2550 03FC                             u2470 037E  
                           u2607 07A5                             u1911 0459                             u2391 0194  
                           u2551 03FB                             u2471 037D                             u1920 0465  
                           u2560 040D                             u2480 0384                             u2617 07DF  
                           u1921 0464                             u2561 040C                             u2481 0383  
                           u1930 0474                             u2490 038D                             u2707 04DE  
                           u2627 07F7                             u1931 0473                             u2491 038C  
                           u2717 04E8                             u2637 0F54                             u1870 04C0  
                           u1950 0484                             u1871 04BC                             u2647 0F63  
                           u1951 0483                             u2657 0F71                             u1945 0478  
                           u2577 0335                             u1970 0495                             u2667 0F87  
                           u1971 0494                             u2587 06C1                             _PEIE 005E  
                           u1884 04C3                             u2677 0F95                             u1965 0485  
                           u2597 0E52                             u1990 04A9                             u1895 04D3  
                           u2687 0FA3                             u1991 04A8                             u1975 0491  
                           u2697 04C9                             u1985 049D                             i1l50 0F49  
                           _flag 003E                             _main 02FB                             btemp 007E  
            _menu_display_screen 0EBF                             start 000C                ___bmul@multiplier 0074  
           ??_init_matrix_keypad 0072                   clcd_write@byte 0075                   clcd_write@mode 0072  
        __end_of_power_on_screen 07FE                            ??_isr 0070                            ?_main 0070  
                __end_of___awdiv 04B8                            STR_10 05CD                            STR_11 058D  
                          STR_20 05ED                            STR_12 05E5                            STR_13 0562  
                          STR_21 0533                            STR_22 05F2                            STR_14 05BB  
                          STR_23 05F2                            STR_15 0522                            STR_16 057F  
                          STR_17 059A                            STR_18 05F2                            STR_19 0511  
                __end_of___awmod 1000                  ___awdiv@divisor 0072                     ?_init_config 0070  
           ?_menu_display_screen 0070                  ___awdiv@counter 0020                            _PORTD 0008  
                          _TRISB 0086                            _TRISD 0088                     ?_init_timer2 0070  
           __end_of_clear_screen 0E58                            _nRBPU 040F               _read_matrix_keypad 0E9C  
                          pclath 000A              ?_read_matrix_keypad 0070                            status 0003  
                          wtemp0 007E                     ?_scan_keypad 0070                  __initialization 000F  
                   __end_of_main 0453             ??_read_matrix_keypad 0074                           ??_main 002E  
          ??_menu_display_screen 0079                 ___awdiv@dividend 0074                           i1l2070 0F1B  
                         i1l2080 0F3A                           i1l2072 0F21                           i1l2082 0F3F  
                         i1l2074 0F30                           i1l2084 0F44                           i1l2076 0F32  
                         i1l2086 0F46                           i1l2078 0F37                           i1l2088 0F48  
                         u170_20 0F3F                           u170_21 0F3E                           u171_20 0F44  
                         u171_21 0F43                           u167_20 0F21                           u167_21 0F20  
                         u168_20 0F30                           u168_21 0F2F                           u169_20 0F37  
                         u169_21 0F36                           _TMR2IE 0461                           _TMR2IF 0061  
                         _TMR2ON 0092                           _TRISC1 0439                           _TRISC2 043A  
                         _TRISE1 0449                           _TRISE2 044A                           ___bmul 0E6B  
        _init_display_controller 0F50                        ??___awdiv 0076                 ?_power_on_screen 0070  
                      ??___awmod 0076                 ___awdiv@quotient 0022                  ___awmod@divisor 0024  
                ___awmod@counter 0076                     __pdataCOMMON 007B                 __end_of_set_temp 01A1  
               __end_of_set_time 02FB                           saved_w 007E          __end_of__initialization 0030  
            ___bmul@multiplicand 0072                   __pcstackCOMMON 0070                     __pidataBANK0 07FE  
            _time_display_screen 05F4                       __pbssBANK0 0034        ??_init_display_controller 0076  
                     _clcd_print 0EEC                       _clcd_putch 0E58                       _clcd_write 04B8  
                     __pmaintext 02FB                     _clear_screen 0E47                          ?___bmul 0072  
           ?_time_display_screen 0070                       __pintentry 0004                          _T2CKPS0 0090  
                        _T2CKPS1 0091                       __stringtab 04EE                        ?_set_temp 0029  
                      ?_set_time 0029            ??_time_display_screen 0029                          ___awdiv 0453  
                        ___awmod 0FA7                          __ptext1 05F4                          __ptext2 01A1  
                        __ptext3 0034                          __ptext4 0E47                          __ptext5 0E6B  
                        __ptext6 0FA7                          __ptext7 0453                          __ptext8 0E9C  
                        __ptext9 06D6  __end_of_init_display_controller 0FA7                __end_of_init_clcd 0E2A  
               ___awmod@dividend 0026                   main@reset_flag 0031                          main@key 0033  
           end_of_initialization 0030                      set_temp@key 002D                      set_time@key 002D  
                 _operation_flag 0041                      ?_clcd_print 0076                      ?_clcd_putch 0028  
                    ?_clcd_write 0072                       ??_set_temp 002B                       ??_set_time 002B  
    __end_of_menu_display_screen 0EEC                     __pstringtext 0500                    clcd_print@str 0076  
             set_temp@reset_flag 0029                   __end_of___bmul 0E7E                    __pidataCOMMON 0003  
            start_initialization 000F                     scan_keypad@i 0072           read_matrix_keypad@mode 0074  
         read_matrix_keypad@once 007B                      __end_of_isr 0F50                         ??___bmul 0073  
                    __pdataBANK0 0041                    ??_init_config 0078                    ??_init_timer2 0072  
                    __pbssCOMMON 0079                        ___latbits 0002                    __pcstackBANK0 0020  
                  ??_scan_keypad 0072                         ?___awdiv 0072                         ?___awmod 0024  
                      __pstrings 04EE               set_time@reset_flag 0029                        _init_clcd 0E1F  
            __end_of_init_config 0E9C                ??_power_on_screen 0029              __end_of_init_timer2 0E37  
       ?_init_display_controller 0070                interrupt_function 0004      __end_of_time_display_screen 06D6  
                   ??_clcd_print 0079                     ??_clcd_putch 0078       __end_of_init_matrix_keypad 0E47  
                   ??_clcd_write 0073                set_temp@key_count 003D              __end_of_scan_keypad 0791  
                    __stringbase 0500               __end_of_clcd_print 0F1B               __end_of_clcd_putch 0E6B  
             __end_of_clcd_write 04EE                       ?_init_clcd 0070            read_matrix_keypad@key 0075  
              set_time@blink_pos 0039                    set_temp@blink 003C                    set_time@blink 0038  
     __end_of_read_matrix_keypad 0EBF               __end_of__stringtab 0500                set_time@key_count 003A  
                    _init_config 0E7E                      _init_timer2 0E2A                         __ptext10 0791  
                       __ptext11 0E58                         __ptext20 0F1B                         __ptext12 0EBF  
                       __ptext13 0EEC                         __ptext14 0E7E                         __ptext15 0E2A  
                       __ptext16 0E37                         __ptext17 0E1F                         __ptext18 0F50  
                       __ptext19 04B8                      _scan_keypad 06D6                    ?_clear_screen 0070  
                       _set_temp 0034                         _set_time 01A1                         isr@count 0079  
                   set_temp@temp 003B                     set_temp@wait 0036                     set_time@wait 0034  
                    ??_init_clcd 0078                         intlevel1 0000                        stringcode 04F8  
                 ??_clear_screen 0076                  _power_on_screen 0791                         stringtab 04EE  
               power_on_screen@i 002C  
